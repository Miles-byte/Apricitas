mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of Motor Vehicles, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Motor Vehicles, Current Period`,12)))
IND_PRO_MV <- statscnQueryData('A020923',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_MV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of Motor Vehicles, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Motor Vehicles, Current Period`,12)))
IND_PRO_MV <- statscnQueryData('A020923',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_MV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of Motor Vehicles, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Motor Vehicles, Current Period`,12)))
IND_PRO_MV <- statscnQueryData('A020923',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_MV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of Motor Vehicles, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Motor Vehicles, Current Period`,12)))
IND_PRO_MV <- statscnQueryData('A020923',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_MV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of Motor Vehicles, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Motor Vehicles, Current Period`,12)))
IND_PRO_MV <- statscnQueryData('A020923',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_MV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of Motor Vehicles, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Motor Vehicles, Current Period`,12)))
IND_PRO_MV <- statscnQueryData('A020923',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_MV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of Motor Vehicles, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Motor Vehicles, Current Period`,12)))
ggplot() + #plotting Chinese Motor Vehicle Production
geom_line(data= IND_PRO_MV, aes(x=date,y=`Output of Motor Vehicles, Current Period`/100 ,color= "Chinese Industrial Production of Motor Vehicles, Monthly"), size = 1.25) +
geom_line(data= IND_PRO_MV, aes(x=date,y=rollmean/100,color= "Rolling 1-year Average"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "M"),limits = c(0,3.50), breaks = c(0,1.00,2.00,3.00,4.00), expand = c(0,0)) +
ylab("Units, Monthly") +
ggtitle("Chinese Motor Vehicle Production") +
labs(caption = "Graph created by @JosephPolitano using National Bureau of Statistics of China Data",subtitle = "Chinese Motor Vehicle Production Remains Below Pre-Pandemic Averages Despite an Export Boom") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = min(IND_PRO_MV$date)-(.1861*(max(IND_PRO_MV$date)-min(IND_PRO_MV$date))), xmax = min(IND_PRO_MV$date)-(0.049*(max(IND_PRO_MV$date)-min(IND_PRO_MV$date))), ymin = 0-(.3*3.5), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese Motor Vehicle Production
geom_line(data= IND_PRO_MV, aes(x=date,y=`Output of Motor Vehicles, Current Period`/100 ,color= "Chinese Industrial Production of Motor Vehicles, Monthly"), size = 1.25) +
geom_line(data= filter(IND_PRO_MV, date > as.Date("1993-01-01")), aes(x=date,y=rollmean/100,color= "Rolling 1-year Average"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "M"),limits = c(0,3.50), breaks = c(0,1.00,2.00,3.00,4.00), expand = c(0,0)) +
ylab("Units, Monthly") +
ggtitle("Chinese Motor Vehicle Production") +
labs(caption = "Graph created by @JosephPolitano using National Bureau of Statistics of China Data",subtitle = "Chinese Motor Vehicle Production Remains Below Pre-Pandemic Averages Despite an Export Boom") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = min(IND_PRO_MV$date)-(.1861*(max(IND_PRO_MV$date)-min(IND_PRO_MV$date))), xmax = min(IND_PRO_MV$date)-(0.049*(max(IND_PRO_MV$date)-min(IND_PRO_MV$date))), ymin = 0-(.3*3.5), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
IND_PRO_MV_GRAPH <- ggplot() + #plotting Chinese Motor Vehicle Production
geom_line(data= IND_PRO_MV, aes(x=date,y=`Output of Motor Vehicles, Current Period`/100 ,color= "Chinese Industrial Production of Motor Vehicles, Monthly"), size = 1.25) +
geom_line(data= filter(IND_PRO_MV, date > as.Date("1993-01-01")), aes(x=date,y=rollmean/100,color= "Rolling 1-year Average"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "M"),limits = c(0,3.50), breaks = c(0,1.00,2.00,3.00,4.00), expand = c(0,0)) +
ylab("Units, Monthly") +
ggtitle("Chinese Motor Vehicle Production") +
labs(caption = "Graph created by @JosephPolitano using National Bureau of Statistics of China Data",subtitle = "Chinese Motor Vehicle Production Remains Below Pre-Pandemic Averages Despite an Export Boom") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = min(IND_PRO_MV$date)-(.1861*(max(IND_PRO_MV$date)-min(IND_PRO_MV$date))), xmax = min(IND_PRO_MV$date)-(0.049*(max(IND_PRO_MV$date)-min(IND_PRO_MV$date))), ymin = 0-(.3*3.5), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = IND_PRO_MV_GRAPH, "China Ind Pro Car Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV_2022 <- subset(IND_PRO_NEV, date < as.Date("2024-01-01")) %>%
mutate(date = as.Date(date) - years(1),
`Output of New Energy Vehicles, Current Period` = `Output of New Energy Vehicles, Current Period` / ((`Output of New Energy Vehicles, Growth Rate (The same period last _year=100)`/ 100)+1),
`Output of New Energy Vehicles, Growth Rate (The same period last _year=100)` = NA)
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV_2022 <- subset(IND_PRO_NEV, date < as.Date("2024-01-01")) %>%
mutate(date = as.Date(date) - years(1),
`Output of New Energy Vehicles, Current Period` = `Output of New Energy Vehicles, Current Period` / ((`Output of New Energy Vehicles, Growth Rate (The same period last _year=100)`/ 100)+1),
`Output of New Energy Vehicles, Growth Rate (The same period last _year=100)` = NA)
IND_PRO_NEV_RBIND <- rbind(IND_PRO_NEV,IND_PRO_NEV_2022)
IND_PRO_MV_NEV_merge <- merge(IND_PRO_MV,IND_PRO_NEV_RBIND, by = "date") %>%
mutate(pct_NEV = `Output of New Energy Vehicles, Current Period`/`Output of Motor Vehicles, Current Period`)
ggplot() + #plotting Chinese Semiconductor Production
geom_line(data=IND_PRO_MV_NEV_merge, aes(x=date,y= pct_NEV, color= "China, New Energy Vehicle Production as a Share of Total Motor Vehicle Production"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(0,.50), breaks = c(0,.1,.2,.3,.4,.5), expand = c(0,0)) +
ylab("Percent of Total Vehicle Production") +
ggtitle("The Chinese EV Revolution") +
labs(caption = "Graph created by @JosephPolitano using National Bureau of Statistics of China Data",subtitle = "New Energy Vehicle Production is Growing Rapidly—and Now Makes Up 1/3 of Total Vehicle Output") +
theme_apricitas + theme(legend.position = c(.515,.2)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = min(IND_PRO_MV_NEV_merge$date)-(.1861*(max(IND_PRO_MV_NEV_merge$date)-min(IND_PRO_MV_NEV_merge$date))), xmax = min(IND_PRO_MV_NEV_merge$date)-(0.049*(max(IND_PRO_MV_NEV_merge$date)-min(IND_PRO_MV_NEV_merge$date))), ymin = 0-(.3*.50), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
IND_PRO_MV_NEV_SHARE_GRAPH <- ggplot() + #plotting Chinese Semiconductor Production
geom_line(data=IND_PRO_MV_NEV_merge, aes(x=date,y= pct_NEV, color= "China, New Energy Vehicle Production as a Share of Total Motor Vehicle Production"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(0,.50), breaks = c(0,.1,.2,.3,.4,.5), expand = c(0,0)) +
ylab("Percent of Total Vehicle Production") +
ggtitle("The Chinese EV Revolution") +
labs(caption = "Graph created by @JosephPolitano using National Bureau of Statistics of China Data",subtitle = "New Energy Vehicle Production is Growing Rapidly—and Now Makes Up 1/3 of Total Vehicle Output") +
theme_apricitas + theme(legend.position = c(.515,.2)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = min(IND_PRO_MV_NEV_merge$date)-(.1861*(max(IND_PRO_MV_NEV_merge$date)-min(IND_PRO_MV_NEV_merge$date))), xmax = min(IND_PRO_MV_NEV_merge$date)-(0.049*(max(IND_PRO_MV_NEV_merge$date)-min(IND_PRO_MV_NEV_merge$date))), ymin = 0-(.3*.50), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = IND_PRO_MV_NEV_SHARE_GRAPH, "China Ind Pro NEV Share Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
setwd("C:/Users/Joseph/Documents/GitHub/Apricitas/Solar Revolution")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryLastN(700, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(.,`Output of Photovoltaic Cells, Current Period` != 0) %>%
.[order(nrow(.):1),] %>%
mutate(rollmean = c(0,0,0,0,0,0,0,0,0,0,rollmean(`Output of Photovoltaic Cells, Current Period`,11))) %>%
subset(date >= as.Date("2016-01-01"))
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
View(IND_PRO_PV)
statscnQueryLastN(700, lang = "en")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
p_unload(all)  # Remove all add-ons
# Clear console
cat("\014")  # ctrl+L
rm(list = ls())
dev.off()
acman::p_load(estatapi,seasonal,openxlsx,readxl,cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
#Using an updated version of the Chinese national stats bureau rstatscn package that fixes a json error in the old database
install_github("pcdi/rstatscn")
library(rstatscn)
#statscnQueryZb(dbcode='hgyd', lang = "en") #lists all datasets with monthly national data
#statscnQueryZb(dbcode='hgjd', lang = "en") #lists all datasets with quarterly national data
#statscnQueryZb('A08',dbcode='hgyd', lang = "en")
#statscnQueryZb('A01',dbcode='hgjd', lang = "en")
#CPI <- statscnQueryData('A010301',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb") #headline inflation data (A01)
#please note: the package is weird in that it will only let me retrieve a certain n of previous results, so I just used 60 here
#statscnQueryLastN(60, lang = "en")
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
pacman::p_load(estatapi,seasonal,openxlsx,readxl,cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
#Using an updated version of the Chinese national stats bureau rstatscn package that fixes a json error in the old database
install_github("pcdi/rstatscn")
library(rstatscn)
#statscnQueryZb(dbcode='hgyd', lang = "en") #lists all datasets with monthly national data
#statscnQueryZb(dbcode='hgjd', lang = "en") #lists all datasets with quarterly national data
#statscnQueryZb('A08',dbcode='hgyd', lang = "en")
#statscnQueryZb('A01',dbcode='hgjd', lang = "en")
#CPI <- statscnQueryData('A010301',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb") #headline inflation data (A01)
#please note: the package is weird in that it will only let me retrieve a certain n of previous results, so I just used 60 here
#statscnQueryLastN(60, lang = "en")
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
IND_PRO_PV <- statscnQueryData('A02092E',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
