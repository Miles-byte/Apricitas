top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = WEST_NEIGHBORHOOD_Graph, "West Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
for (metro in METRO_SELECT) {
# Create the plot
plot_name <- paste0("METRO_ARRANGE_Graph_", gsub("[[:punct:]]|\\s", "_", gsub("-[^,]*,", ",", metro)))
METRO_ARRANGE_PLOTS[[plot_name]] <- ggplot() +
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_point(data = filter(ZHVI_NEIGHBORHOOD_REG_2016, Metro == metro),
aes(x = value_2016, y = annualized_percent, color = "2016-2020")) +
stat_smooth(data = filter(ZHVI_NEIGHBORHOOD_REG_2016, Metro == metro),
method = "lm", aes(x = value_2016, y = annualized_percent, color = "2016-2020"), size = 1.25) +
geom_point(data = filter(ZHVI_NEIGHBORHOOD_REG, Metro == metro),
aes(x = value_2020, y = annualized_percent, color = "2020-Present")) +
stat_smooth(data = filter(ZHVI_NEIGHBORHOOD_REG, Metro == metro),
method = "lm", aes(x = value_2020, y = annualized_percent, color = "2020-Present"), size = 1.25) +
ggtitle(metro) +
scale_x_continuous(labels = scales::number_format(accuracy = 1),limits = c(9.5,15.5), expand = c(0,0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-.05,.25), expand = c(0,0), breaks = c(-.05,0,.05,.10,.15,.20,.25)) +
theme_apricitas +
ggtitle(paste0(gsub("-[^,]*,", ",", metro, "Metro Area"))) +
ylab(NULL) +
xlab(NULL) +
theme(axis.title.x = element_text(size = 20, hjust = 0.5),
axis.title.y = element_text(size = 15, vjust = 0.5),
plot.title = element_text(size = 23.5)) +
guides(size = "none") +
scale_color_manual(name= NULL,values = c("#00A99D","#FFE98F","#EE6055")) +
theme(legend.position = "right", panel.grid.major=element_blank(),plot.margin= grid::unit(c(0, 0.1, 0.05, 0), "in")) +
theme(plot.title = element_text(size = 14,hjust = 0.5))
}
NORTHEAST_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_New_York__NY_NJ_PA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Washington__DC_VA_MD_WV,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Philadelphia__PA_NJ_DE_MD,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Boston__MA_NH,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
NORTHEAST_NEIGHBORHOOD_Graph <- annotate_figure(NORTHEAST_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = NORTHEAST_NEIGHBORHOOD_Graph, "Northeast Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
CALIFORNIA_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Los_Angeles__CA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Riverside__CA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_San_Francisco__CA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_San_Diego__CA,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
CALIFORNIA_NEIGHBORHOOD_Graph <- annotate_figure(CALIFORNIA_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = CALIFORNIA_NEIGHBORHOOD_Graph, "California Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
MIDWEST_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Chicago__IL_IN_WI,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Detroit__MI,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Minneapolis__MN_WI,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_St__Louis__MO_IL,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
MIDWEST_NEIGHBORHOOD_Graph <- annotate_figure(MIDWEST_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = MIDWEST_NEIGHBORHOOD_Graph, "Midwest Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
TEXAS_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Dallas__TX,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Houston__TX,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_San_Antonio__TX,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Austin__TX,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
TEXAS_NEIGHBORHOOD_Graph <- annotate_figure(TEXAS_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = TEXAS_NEIGHBORHOOD_Graph, "Texas Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
SOUTH_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Atlanta__GA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Miami__FL,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Tampa__FL,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Charlotte__NC_SC,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
SOUTH_NEIGHBORHOOD_Graph <- annotate_figure(SOUTH_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = SOUTH_NEIGHBORHOOD_Graph, "South Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
WEST_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Phoenix__AZ,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Seattle__WA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Denver__CO,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Portland__OR_WA,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
WEST_NEIGHBORHOOD_Graph <- annotate_figure(WEST_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = WEST_NEIGHBORHOOD_Graph, "West Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
WEST_NEIGHBORHOOD_Graph
paste0(gsub("-[^,]*,", ",", metro, "Metro Area"))
paste0(gsub("-[^,]*,", ",", metro, "Metro Area"))
ggplot() +
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_point(data = filter(ZHVI_NEIGHBORHOOD_REG_2016, Metro == metro),
aes(x = value_2016, y = annualized_percent, color = "2016-2020")) +
stat_smooth(data = filter(ZHVI_NEIGHBORHOOD_REG_2016, Metro == metro),
method = "lm", aes(x = value_2016, y = annualized_percent, color = "2016-2020"), size = 1.25) +
geom_point(data = filter(ZHVI_NEIGHBORHOOD_REG, Metro == metro),
aes(x = value_2020, y = annualized_percent, color = "2020-Present")) +
stat_smooth(data = filter(ZHVI_NEIGHBORHOOD_REG, Metro == metro),
method = "lm", aes(x = value_2020, y = annualized_percent, color = "2020-Present"), size = 1.25) +
ggtitle(metro) +
scale_x_continuous(labels = scales::number_format(accuracy = 1),limits = c(9.5,15.5), expand = c(0,0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-.05,.25), expand = c(0,0), breaks = c(-.05,0,.05,.10,.15,.20,.25)) +
theme_apricitas +
ggtitle(paste0(gsub("-[^,]*,", ",", metro)," Metro Area")) +
ylab(NULL) +
xlab(NULL) +
theme(axis.title.x = element_text(size = 20, hjust = 0.5),
axis.title.y = element_text(size = 15, vjust = 0.5),
plot.title = element_text(size = 23.5)) +
guides(size = "none") +
scale_color_manual(name= NULL,values = c("#00A99D","#FFE98F","#EE6055")) +
theme(legend.position = "right", panel.grid.major=element_blank(),plot.margin= grid::unit(c(0, 0.1, 0.05, 0), "in")) +
theme(plot.title = element_text(size = 14,hjust = 0.5))
for (metro in METRO_SELECT) {
# Create the plot
plot_name <- paste0("METRO_ARRANGE_Graph_", gsub("[[:punct:]]|\\s", "_", gsub("-[^,]*,", ",", metro)))
METRO_ARRANGE_PLOTS[[plot_name]] <- ggplot() +
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_point(data = filter(ZHVI_NEIGHBORHOOD_REG_2016, Metro == metro),
aes(x = value_2016, y = annualized_percent, color = "2016-2020")) +
stat_smooth(data = filter(ZHVI_NEIGHBORHOOD_REG_2016, Metro == metro),
method = "lm", aes(x = value_2016, y = annualized_percent, color = "2016-2020"), size = 1.25) +
geom_point(data = filter(ZHVI_NEIGHBORHOOD_REG, Metro == metro),
aes(x = value_2020, y = annualized_percent, color = "2020-Present")) +
stat_smooth(data = filter(ZHVI_NEIGHBORHOOD_REG, Metro == metro),
method = "lm", aes(x = value_2020, y = annualized_percent, color = "2020-Present"), size = 1.25) +
ggtitle(metro) +
scale_x_continuous(labels = scales::number_format(accuracy = 1),limits = c(9.5,15.5), expand = c(0,0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-.05,.25), expand = c(0,0), breaks = c(-.05,0,.05,.10,.15,.20,.25)) +
theme_apricitas +
ggtitle(paste0(gsub("-[^,]*,", ",", metro)," Metro Area")) +
ylab(NULL) +
xlab(NULL) +
theme(axis.title.x = element_text(size = 20, hjust = 0.5),
axis.title.y = element_text(size = 15, vjust = 0.5),
plot.title = element_text(size = 23.5)) +
guides(size = "none") +
scale_color_manual(name= NULL,values = c("#00A99D","#FFE98F","#EE6055")) +
theme(legend.position = "right", panel.grid.major=element_blank(),plot.margin= grid::unit(c(0, 0.1, 0.05, 0), "in")) +
theme(plot.title = element_text(size = 14,hjust = 0.5))
}
NORTHEAST_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_New_York__NY_NJ_PA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Washington__DC_VA_MD_WV,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Philadelphia__PA_NJ_DE_MD,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Boston__MA_NH,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
NORTHEAST_NEIGHBORHOOD_Graph <- annotate_figure(NORTHEAST_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = NORTHEAST_NEIGHBORHOOD_Graph, "Northeast Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
CALIFORNIA_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Los_Angeles__CA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Riverside__CA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_San_Francisco__CA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_San_Diego__CA,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
CALIFORNIA_NEIGHBORHOOD_Graph <- annotate_figure(CALIFORNIA_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = CALIFORNIA_NEIGHBORHOOD_Graph, "California Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
MIDWEST_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Chicago__IL_IN_WI,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Detroit__MI,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Minneapolis__MN_WI,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_St__Louis__MO_IL,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
MIDWEST_NEIGHBORHOOD_Graph <- annotate_figure(MIDWEST_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = MIDWEST_NEIGHBORHOOD_Graph, "Midwest Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
TEXAS_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Dallas__TX,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Houston__TX,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_San_Antonio__TX,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Austin__TX,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
TEXAS_NEIGHBORHOOD_Graph <- annotate_figure(TEXAS_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = TEXAS_NEIGHBORHOOD_Graph, "Texas Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
SOUTH_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Atlanta__GA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Miami__FL,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Tampa__FL,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Charlotte__NC_SC,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
SOUTH_NEIGHBORHOOD_Graph <- annotate_figure(SOUTH_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = SOUTH_NEIGHBORHOOD_Graph, "South Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
WEST_NEIGHBORHOOD_Graph <- ggarrange(METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Phoenix__AZ,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Seattle__WA,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Denver__CO,
METRO_ARRANGE_PLOTS$METRO_ARRANGE_Graph_Portland__OR_WA,ncol = 2, nrow = 2, common.legend = TRUE, legend = "top") + bgcolor("#252A32") + border("#252A32")
WEST_NEIGHBORHOOD_Graph <- annotate_figure(WEST_NEIGHBORHOOD_Graph,
top = text_grob("Home Value Change by Neighborhood Price Level", face = "bold", size = 26.5, color = "white"),
bottom = text_grob("Natural Log of Starting Home Value", size = 20, color = "#929299"),
left = text_grob("Change in Home Value, Annualized %", size = 15, color = "#929299", rot = 90)) + bgcolor("#252A32")
ggsave(dpi = "retina",plot = WEST_NEIGHBORHOOD_Graph, "West Neighborhood Regression.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ZORI_ZIP_2020 <- read.csv("https://files.zillowstatic.com/research/public_csvs/zori/Zip_zori_uc_sfrcondomfr_sm_sa_month.csv?t=1700315949") %>%
gather(key = "date", value = "value",-9,-8,-7,-6,-5,-4,-3, -2, -1) %>%
mutate(date = as.Date(gsub("X","",date), "%Y.%m.%d")) %>%
filter(date == as.Date("2020-01-31")) %>%
transmute(RegionID, value_2020 = value)
ZORI_ZIP_2020
ZORI_ZIP_REG <- read.csv("https://files.zillowstatic.com/research/public_csvs/zori/Zip_zori_uc_sfrcondomfr_sm_sa_month.csv?t=1700315949") %>%
gather(key = "date", value = "value",-9,-8,-7,-6,-5,-4,-3, -2, -1) %>%
mutate(date = as.Date(gsub("X","",date), "%Y.%m.%d")) %>%
group_by(RegionID) %>%
mutate(percent12 = (value-lag(value, 12))/lag(value, 12)) %>%
mutate(value_lag_12 = log(lag(value,12))) %>%
merge(.,ZORI_ZIP_2020) %>%
mutate(percent2020 = (value - value_2020)/value_2020) %>%
mutate(value_2020 = log(value_2020)) %>%
ungroup() %>%
mutate(months = round(as.numeric(interval(as.Date("2020-01-01"), date) / months(1)))) %>%
mutate(annualized_percent = exp(log(1 + percent2020) * (12 / months)) - 1) %>%
filter(date == max(date))
ZORI_ZIP_REG
ZORI_ZIP_2016 <- read.csv("https://files.zillowstatic.com/research/public_csvs/zori/Zip_zori_uc_sfrcondomfr_sm_sa_month.csv?t=1700315949") %>%
gather(key = "date", value = "value",-9,-8,-7,-6,-5,-4,-3, -2, -1) %>%
mutate(date = as.Date(gsub("X","",date), "%Y.%m.%d")) %>%
filter(date == as.Date("2016-01-31")) %>%
transmute(RegionID, value_2016 = value)
ZHVI_ZIP_REG_2016 <- read.csv("https://files.zillowstatic.com/research/public_csvs/zori/Zip_zori_uc_sfrcondomfr_sm_sa_month.csv?t=1700315949") %>%
gather(key = "date", value = "value",-9,-8,-7,-6,-5,-4,-3, -2, -1) %>%
mutate(date = as.Date(gsub("X","",date), "%Y.%m.%d")) %>%
group_by(RegionID) %>%
mutate(percent12 = (value-lag(value, 12))/lag(value, 12)) %>%
mutate(value_lag_12 = log(lag(value,12))) %>%
merge(.,ZORI_ZIP_2016) %>%
mutate(percent2016 = (value - value_2016)/value_2016) %>%
mutate(months = round(as.numeric(interval(as.Date("2016-01-01"), date) / months(1)))) %>%
mutate(annualized_percent = exp(log(1 + percent2016) * (12 / months)) - 1) %>%
mutate(value_2016 = log(value_2016)) %>%
ungroup() %>%
filter(date == as.Date("2020-01-31"))
for (metro in METRO_SELECT) {
# Create the plot
METRO_SELECT_Graph <- ggplot() +
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_point(data = filter(ZORI_NEIGHBORHOOD_REG_2016, Metro == metro),
aes(x = value_2016, y = annualized_percent, color = "2016-2020")) +
stat_smooth(data = filter(ZORI_NEIGHBORHOOD_REG_2016, Metro == metro),
method = "lm", aes(x = value_2016, y = annualized_percent, color = "2016-2020"), size = 1.25) +
geom_point(data = filter(ZORI_NEIGHBORHOOD_REG, Metro == metro),
aes(x = value_2020, y = annualized_percent, color = "2020-Present")) +
stat_smooth(data = filter(ZORI_NEIGHBORHOOD_REG, Metro == metro),
method = "lm", aes(x = value_2020, y = annualized_percent, color = "2020-Present"), size = 1.25) +
ggtitle(metro) +
scale_x_continuous(labels = scales::number_format(accuracy = 1),limits = c(9.5,15.5), expand = c(0,0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-.05,.25), expand = c(0,0), breaks = c(-.05,0,.05,.10,.15,.20,.25)) #+
#theme_apricitas +
#ggtitle(paste0("Home Value Change in ",gsub("-[^,]*,", ",", metro), "\nMetro Area By Neighborhood Price Level")) +
#ylab("Change in Home Value, Annualized %") +
#xlab("Natural Log of Starting Home Value") +
#theme(axis.title.x = element_text(size = 20, hjust = 0.5),
#      axis.title.y = element_text(size = 15, vjust = 0.5),
#      plot.title = element_text(size = 23.5)) +
#guides(size = "none") +
#scale_color_manual(name= NULL,values = c("#00A99D","#FFE98F","#EE6055")) +
#annotation_custom(apricitas_logo_rast, xmin = 9.3-(.1861*7.3), xmax = 9.3-(0.049*7.3), ymin = -0.045-(.3*.26), ymax = -0.05) +
#coord_cartesian(clip = "off")
# Save the plot
file_name <- paste0("Metro_Select_Graph_ZORI", gsub("[[:punct:]]", "", metro), ".png")
ggsave(filename = file_name, plot = METRO_SELECT_Graph, dpi = "retina",
type = "cairo-png", width = 9.02, height = 5.76, units = "in")
}
for (metro in METRO_SELECT) {
# Create the plot
METRO_SELECT_Graph <- ggplot() +
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_point(data = filter(ZHVI_ZIP_REG_2016, Metro == metro),
aes(x = value_2016, y = annualized_percent, color = "2016-2020")) +
stat_smooth(data = filter(ZHVI_ZIP_REG_2016, Metro == metro),
method = "lm", aes(x = value_2016, y = annualized_percent, color = "2016-2020"), size = 1.25) +
geom_point(data = filter(ZORI_ZIP_REG, Metro == metro),
aes(x = value_2020, y = annualized_percent, color = "2020-Present")) +
stat_smooth(data = filter(ZORI_ZIP_REG, Metro == metro),
method = "lm", aes(x = value_2020, y = annualized_percent, color = "2020-Present"), size = 1.25) +
ggtitle(metro) +
scale_x_continuous(labels = scales::number_format(accuracy = 1),limits = c(9.5,15.5), expand = c(0,0)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-.05,.25), expand = c(0,0), breaks = c(-.05,0,.05,.10,.15,.20,.25)) #+
#theme_apricitas +
#ggtitle(paste0("Home Value Change in ",gsub("-[^,]*,", ",", metro), "\nMetro Area By Neighborhood Price Level")) +
#ylab("Change in Home Value, Annualized %") +
#xlab("Natural Log of Starting Home Value") +
#theme(axis.title.x = element_text(size = 20, hjust = 0.5),
#      axis.title.y = element_text(size = 15, vjust = 0.5),
#      plot.title = element_text(size = 23.5)) +
#guides(size = "none") +
#scale_color_manual(name= NULL,values = c("#00A99D","#FFE98F","#EE6055")) +
#annotation_custom(apricitas_logo_rast, xmin = 9.3-(.1861*7.3), xmax = 9.3-(0.049*7.3), ymin = -0.045-(.3*.26), ymax = -0.05) +
#coord_cartesian(clip = "off")
# Save the plot
file_name <- paste0("Metro_Select_Graph_ZORI", gsub("[[:punct:]]", "", metro), ".png")
ggsave(filename = file_name, plot = METRO_SELECT_Graph, dpi = "retina",
type = "cairo-png", width = 9.02, height = 5.76, units = "in")
}
for (metro in METRO_SELECT) {
# Create the plot
METRO_SELECT_Graph <- ggplot() +
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_point(data = filter(ZHVI_ZIP_REG_2016, Metro == metro),
aes(x = value_2016, y = annualized_percent, color = "2016-2020")) +
stat_smooth(data = filter(ZHVI_ZIP_REG_2016, Metro == metro),
method = "lm", aes(x = value_2016, y = annualized_percent, color = "2016-2020"), size = 1.25) +
geom_point(data = filter(ZORI_ZIP_REG, Metro == metro),
aes(x = value_2020, y = annualized_percent, color = "2020-Present")) +
stat_smooth(data = filter(ZORI_ZIP_REG, Metro == metro),
method = "lm", aes(x = value_2020, y = annualized_percent, color = "2020-Present"), size = 1.25) +
ggtitle(metro) #+
#scale_x_continuous(labels = scales::number_format(accuracy = 1),limits = c(9.5,15.5), expand = c(0,0)) +
#scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-.05,.25), expand = c(0,0), breaks = c(-.05,0,.05,.10,.15,.20,.25)) #+
#theme_apricitas +
#ggtitle(paste0("Home Value Change in ",gsub("-[^,]*,", ",", metro), "\nMetro Area By Neighborhood Price Level")) +
#ylab("Change in Home Value, Annualized %") +
#xlab("Natural Log of Starting Home Value") +
#theme(axis.title.x = element_text(size = 20, hjust = 0.5),
#      axis.title.y = element_text(size = 15, vjust = 0.5),
#      plot.title = element_text(size = 23.5)) +
#guides(size = "none") +
#scale_color_manual(name= NULL,values = c("#00A99D","#FFE98F","#EE6055")) +
#annotation_custom(apricitas_logo_rast, xmin = 9.3-(.1861*7.3), xmax = 9.3-(0.049*7.3), ymin = -0.045-(.3*.26), ymax = -0.05) +
#coord_cartesian(clip = "off")
# Save the plot
file_name <- paste0("Metro_Select_Graph_ZORI", gsub("[[:punct:]]", "", metro), ".png")
ggsave(filename = file_name, plot = METRO_SELECT_Graph, dpi = "retina",
type = "cairo-png", width = 9.02, height = 5.76, units = "in")
}
ggplot() +
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_point(data = filter(ZHVI_ZIP_REG_2016),
aes(x = value_2016, y = annualized_percent, color = "2016-2020")) +
stat_smooth(data = filter(ZHVI_ZIP_REG_2016),
method = "lm", aes(x = value_2016, y = annualized_percent, color = "2016-2020"), size = 1.25) +
geom_point(data = filter(ZORI_ZIP_REG),
aes(x = value_2020, y = annualized_percent, color = "2020-Present")) +
stat_smooth(data = filter(ZORI_ZIP_REG,),
method = "lm", aes(x = value_2020, y = annualized_percent, color = "2020-Present"), size = 1.25) +
ggtitle(metro)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/America's%20Homebuilding%20Boom%20(That%20Isn't)/TELEWORK_DATA.csv") %>%
mutate(date = as.Date(date)) %>%
pivot_longer(-date)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/America's%20Homebuilding%20Boom%20(That%20Isn't)/TELEWORK_DATA.csv") %>%
mutate(Date = as.Date(Date)) %>%
pivot_longer(-Date)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/America's%20Homebuilding%20Boom%20(That%20Isn't)/TELEWORK_DATA.csv") %>%
mutate(Date = as.Date(Date)) %>%
setNames("date","Teleworked Some Hours","Teleworked All Hours") %>%
pivot_longer(-date)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/America's%20Homebuilding%20Boom%20(That%20Isn't)/TELEWORK_DATA.csv") %>%
mutate(Date = as.Date(Date)) %>%
setNames(c("date","Teleworked Some Hours","Teleworked All Hours")) %>%
pivot_longer(-date)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/America's%20Homebuilding%20Boom%20(That%20Isn't)/TELEWORK_DATA.csv") %>%
mutate(Date = as.Date(Date)) %>%
setNames(c("date","Teleworked Some Hours","Teleworked All Hours")) %>%
pivot_longer(-date)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/America's%20Homebuilding%20Boom%20(That%20Isn't)/TELEWORK_DATA.csv") %>%
mutate(Date = as.Date(Date)) %>%
setNames(c("date","Teleworked Some Hours","Teleworked All Hours"))
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/America's%20Homebuilding%20Boom%20(That%20Isn't)/TELEWORK_DATA.csv") %>%
mutate(Date = as.Date(Date)) %>%
setNames(c("date","Teleworked Some Hours","Teleworked All Hours","Total")) %>%
select(-Total) %>%
pivot_longer(-date)
TELEWORK_DATA <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/America's%20Homebuilding%20Boom%20(That%20Isn't)/TELEWORK_DATA.csv") %>%
mutate(Date = as.Date(Date)) %>%
setNames(c("date","Teleworked Some Hours","Teleworked All Hours","Total")) %>%
select(-Total) %>%
pivot_longer(-date)
ggplot(data = TELEWORK_DATA, aes(x = date, y = value, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date")
TELEWORK_DATA <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/America's%20Homebuilding%20Boom%20(That%20Isn't)/TELEWORK_DATA.csv") %>%
mutate(Date = as.Date(Date)) %>%
setNames(c("date","Teleworked Some Hours","Teleworked All Hours","Total")) %>%
select(-Total) %>%
pivot_longer(-date) %>%
mutate(name = factor(name, levels = c("Teleworked All Hours","Teleworked Some Hours")))
ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date")
TELEWORK_DATA <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/America's%20Homebuilding%20Boom%20(That%20Isn't)/TELEWORK_DATA.csv") %>%
mutate(Date = as.Date(Date)) %>%
setNames(c("date","Teleworked Some Hours","Teleworked All Hours","Total")) %>%
select(-Total) %>%
pivot_longer(-date) %>%
mutate(name = factor(name, levels = rev(c("Teleworked All Hours","Teleworked Some Hours"))))
ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA)
ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Number of Workers, Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M"), breaks = c(0,10,20,30), limits = c(0,35), expand = c(0,0)) +
ggtitle("US Teleworking Over the Last Year")
ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Number of Workers, Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M"), breaks = c(0,10,20,30), limits = c(0,35), expand = c(0,0)) +
ggtitle("US Teleworking Over the Last Year") +
labs(caption = "Graph created by @JosephPolitano using CPS data", subtitle = "The Number of Americans Teleworking Has Marginally Increased over the Last Year") +
theme_apricitas + theme(legend.position = c(.52,.85), legend.spacing.y = unit(0, 'cm'), legend.key.width = unit(0.45, 'cm'), legend.key.height = unit(0.35, "cm"),legend.text = (element_text(size = 13)), legend.title=element_text(size=14)) +#, axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= "Number of Workers Who",values = c("#6A4C93","#A7ACD9","#3083DC","#9A348E","#00A99D","#EE6055","#FFE98F","#FF8E72"))
ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Number of Workers, Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M"), breaks = c(0,10,20,30), limits = c(0,35), expand = c(0,0)) +
ggtitle("US Teleworking Over the Last Year") +
labs(caption = "Graph created by @JosephPolitano using CPS data", subtitle = "The Number of Americans Teleworking Has Marginally Increased over the Last Year") +
theme_apricitas + theme(legend.position = c(.52,.85)) +
scale_fill_manual(name= "Number of Workers Who",values = c("#FFE98F","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2001-01-01")-(.1861*(today()-as.Date("2001-01-01"))), xmax = as.Date("2001-01-01")-(0.049*(today()-as.Date("2001-01-01"))), ymin = 0-(.3*.215), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Number of Workers, Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M"), breaks = c(0,10,20,30,40), limits = c(0,40), expand = c(0,0)) +
ggtitle("US Teleworking Over the Last Year") +
labs(caption = "Graph created by @JosephPolitano using CPS data", subtitle = "The Number of Americans Teleworking Has Marginally Increased over the Last Year") +
theme_apricitas + theme(legend.position = c(.22,.85)) +
scale_fill_manual(name= "Number of Workers Who",values = c("#FFE98F","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2001-01-01")-(.1861*(today()-as.Date("2001-01-01"))), xmax = as.Date("2001-01-01")-(0.049*(today()-as.Date("2001-01-01"))), ymin = 0-(.3*.215), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Number of Workers, Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M"), breaks = c(0,10,20,30,40), limits = c(0,40), expand = c(0,0)) +
ggtitle("US Teleworking Over the Last Year") +
labs(caption = "Graph created by @JosephPolitano using CPS data", subtitle = "The Number of Americans Teleworking Has Marginally Increased over the Last Year") +
theme_apricitas + theme(legend.position = c(.2,.875)) +
scale_fill_manual(name= "Number of Workers Who",values = c("#FFE98F","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2001-01-01")-(.1861*(today()-as.Date("2001-01-01"))), xmax = as.Date("2001-01-01")-(0.049*(today()-as.Date("2001-01-01"))), ymin = 0-(.3*.215), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Number of Workers, Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M"), breaks = c(0,10,20,30,40), limits = c(0,40), expand = c(0,0)) +
ggtitle("US Teleworking Over the Last Year") +
labs(caption = "Graph created by @JosephPolitano using CPS data", subtitle = "The Number of Americans Teleworking Has Marginally Increased over the Last Year") +
theme_apricitas + theme(legend.position = c(.2,.875)) +
scale_fill_manual(name= "Number of Workers Who",values = c("#FFE98F","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-01-01")-(.1861*(today()-as.Date("2022-01-01"))), xmax = as.Date("2022-01-01")-(0.049*(today()-as.Date("2022-01-01"))), ymin = 0-(.3*.215), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Number of Workers, Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M"), breaks = c(0,10,20,30,40), limits = c(0,40), expand = c(0,0)) +
ggtitle("US Teleworking Over the Last Year") +
labs(caption = "Graph created by @JosephPolitano using CPS data", subtitle = "The Number of Americans Teleworking Has Marginally Increased over the Last Year") +
theme_apricitas + theme(legend.position = c(.2,.875)) +
scale_fill_manual(name= "Number of Workers Who",values = c("#FFE98F","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-01-01")-(.1861*(today()-as.Date("2022-10-01"))), xmax = as.Date("2022-10-01")-(0.049*(today()-as.Date("2022-10-01"))), ymin = 0-(.3*40), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Number of Workers, Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M"), breaks = c(0,10,20,30,40), limits = c(0,40), expand = c(0,0)) +
ggtitle("US Teleworking Over the Last Year") +
labs(caption = "Graph created by @JosephPolitano using CPS data", subtitle = "The Number of Americans Teleworking Has Marginally Increased over the Last Year") +
theme_apricitas + theme(legend.position = c(.2,.875)) +
scale_fill_manual(name= "Number of Workers Who",values = c("#FFE98F","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-10-01")-(.1861*(today()-as.Date("2022-10-01"))), xmax = as.Date("2022-10-01")-(0.049*(today()-as.Date("2022-10-01"))), ymin = 0-(.3*40), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
TELEWORK_DATA_Graph <- ggplot(data = TELEWORK_DATA, aes(x = date, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Number of Workers, Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M"), breaks = c(0,10,20,30,40), limits = c(0,40), expand = c(0,0)) +
ggtitle("US Teleworking Over the Last Year") +
labs(caption = "Graph created by @JosephPolitano using CPS data", subtitle = "The Number of Americans Teleworking Has Marginally Increased over the Last Year") +
theme_apricitas + theme(legend.position = c(.2,.875)) +
scale_fill_manual(name= "Number of Workers Who",values = c("#FFE98F","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-10-01")-(.1861*(today()-as.Date("2022-10-01"))), xmax = as.Date("2022-10-01")-(0.049*(today()-as.Date("2022-10-01"))), ymin = 0-(.3*40), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = TELEWORK_DATA_Graph, "Telework Data.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggplot(filter(ZHVI_ZIP_DISTRIBUTION, year %in% c(2000,2005,2010,2015,2020,max(ZHVI_ZIP_DISTRIBUTION$year))), aes(x = yearly_average/1000, y = rev(year), group = rev(year))) +
geom_density_ridges(color = "#252A32",fill = "#FFE98F", scale = 3) +
scale_x_continuous(labels = scales::dollar_format(accuracy = 1, suffix = "k"),limits = c(0,750)) +
scale_y_continuous(expand = c(0,0), breaks = c(2000,2005,2010,2015,2020,max(ZHVI_ZIP_DISTRIBUTION$year)), labels = as.character(c(max(ZHVI_ZIP_DISTRIBUTION$year),2020,2015,2010,2005,2000))) +
ggtitle("America's Disappearing Affordable Neighborhoods") +
xlab("Zillow Home Value Distribution at ZIP Code Level") +
ylab("Year") +
labs(caption = "Graph created by @JosephPolitano using Zillow data", subtitle = "Home Value Distribution has Shifted Right and Flattened as Cheap Areas see Fastest Appreciation") +
theme_apricitas +
theme(axis.title.x = element_text(size = 20, hjust = 0.5),
axis.title.y = element_text(size = 15, vjust = 0.5),
plot.title = element_text(size = 23)) +
guides(size = "none") +
annotation_custom(apricitas_logo_rast, xmin = 0-(.1861*750), xmax = 0-(0.049*750), ymin = 2000-(.3*35), ymax = 2000) +
coord_cartesian(clip = "off")
ZHVI_ZIP_DISTRIBUTION_Graph <- ggplot(filter(ZHVI_ZIP_DISTRIBUTION, year %in% c(2000,2005,2010,2015,2020,max(ZHVI_ZIP_DISTRIBUTION$year))), aes(x = yearly_average/1000, y = rev(year), group = rev(year))) +
geom_density_ridges(color = "#252A32",fill = "#FFE98F", scale = 3) +
scale_x_continuous(labels = scales::dollar_format(accuracy = 1, suffix = "k"),limits = c(0,750)) +
scale_y_continuous(expand = c(0,0), breaks = c(2000,2005,2010,2015,2020,max(ZHVI_ZIP_DISTRIBUTION$year)), labels = as.character(c(max(ZHVI_ZIP_DISTRIBUTION$year),2020,2015,2010,2005,2000))) +
ggtitle("America's Disappearing Affordable Neighborhoods") +
xlab("Zillow Home Value Distribution at ZIP Code Level") +
ylab("Year") +
labs(caption = "Graph created by @JosephPolitano using Zillow data", subtitle = "Home Value Distribution has Shifted Right and Flattened as Cheap Areas see Fastest Appreciation") +
theme_apricitas +
theme(axis.title.x = element_text(size = 20, hjust = 0.5),
axis.title.y = element_text(size = 15, vjust = 0.5),
plot.title = element_text(size = 23)) +
guides(size = "none") +
annotation_custom(apricitas_logo_rast, xmin = 0-(.1861*750), xmax = 0-(0.049*750), ymin = 2000-(.3*35), ymax = 2000) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = ZHVI_ZIP_DISTRIBUTION_Graph, "ZHVI ZIP DISTRIBUTION Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
