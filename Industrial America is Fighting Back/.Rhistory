ggtitle("Reinvesting") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "Private Investment Recovered Rapidlyâ€”in Contrast to 2008") +
theme_apricitas + theme(legend.position = c(0.40,0.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#EE6055","#A7ACD9")) +
#annotate(geom = "hline", y = 0.819, yintercept = .819, color = "#FFE98F", linetype = "dashed", size = 1.25) +
#annotate(geom = "text", label = "Lowest Possible Estimate of 'Full Employment'", x = as.Date("1996-01-01"), y = 0.825, color ="#FFE98F") +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2006-01-01")-(.1861*(5660)), xmax = as.Date("2006-01-01")-(0.049*(5660)), ymin = 1.4-(.3*1.6), ymax = 1.4) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = RPNFI_Graph, "Real Private Non Residential Fixed Investment.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
Industrial_Machinery <- fredr(series_id = "IPG3332S",observation_start = as.Date("2017-01-01"),realtime_start = NULL, realtime_end = NULL) #downloading industrial machinery production
ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Natural Gas"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(70,260), breaks = c(100,150,200,250), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Fuel Transition") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Fuel Production Has Boomed Since 2008, But Has Yet to Recover From COVID-19") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(5752)), xmax = as.Date("2017-01-01")-(0.049*(5752)), ymin = 70-(.3*190), ymax = 70) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Natural Gas"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(90,140), breaks = c(100,150,200,250), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Fuel Transition") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Fuel Production Has Boomed Since 2008, But Has Yet to Recover From COVID-19") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(5752)), xmax = as.Date("2017-01-01")-(0.049*(5752)), ymin = 70-(.3*190), ymax = 70) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Natural Gas"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(90,130), breaks = c(100,150,200,250), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Fuel Transition") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Fuel Production Has Boomed Since 2008, But Has Yet to Recover From COVID-19") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(5752)), xmax = as.Date("2017-01-01")-(0.049*(5752)), ymin = 70-(.3*190), ymax = 70) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Natural Gas"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(90,135), breaks = c(100,150,200,250), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Fuel Transition") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Fuel Production Has Boomed Since 2008, But Has Yet to Recover From COVID-19") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(5752)), xmax = as.Date("2017-01-01")-(0.049*(5752)), ymin = 70-(.3*190), ymax = 70) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Natural Gas"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(90,135), breaks = c(90,100,110,120,130), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Fuel Transition") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Fuel Production Has Boomed Since 2008, But Has Yet to Recover From COVID-19") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(5752)), xmax = as.Date("2017-01-01")-(0.049*(5752)), ymin = 70-(.3*190), ymax = 70) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Industrial Machinery"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(90,135), breaks = c(90,100,110,120,130), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Fuel Transition") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Fuel Production Has Boomed Since 2008, But Has Yet to Recover From COVID-19") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(5752)), xmax = as.Date("2017-01-01")-(0.049*(5752)), ymin = 70-(.3*190), ymax = 70) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Industrial Machinery"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(90,135), breaks = c(90,100,110,120,130), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Production of Industrial Machinery is up Nearly 30% Since the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(5752)), xmax = as.Date("2017-01-01")-(0.049*(5752)), ymin = 70-(.3*190), ymax = 70) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Industrial Machinery"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(90,135), breaks = c(90,100,110,120,130), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Production of Industrial Machinery is up Nearly 30% Since the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 70-(.3*190), ymax = 70) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Industrial Machinery"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(90,135), breaks = c(90,100,110,120,130), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Production of Industrial Machinery is up Nearly 30% Since the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 90-(.3*40), ymax = 90) +
coord_cartesian(clip = "off")
Industrial_Machinery_Graph <- ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Industrial Machinery"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(90,135), breaks = c(90,100,110,120,130), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Production of Industrial Machinery is up Nearly 30% Since the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 90-(.3*40), ymax = 90) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = Industrial_Machinery_Graph, "Industrial Machinery.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
Industrial_Machinery_Graph <- ggplot() + #plotting industrial machinery
geom_line(data=Industrial_Machinery, aes(x=date,y= value, color = "Industrial Production: Industrial Machinery"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(limits = c(90,135), breaks = c(90,100,110,120,130), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Production of Industrial Machinery is up Nearly 30% Since the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 90-(.3*45), ymax = 90) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = Industrial_Machinery_Graph, "Industrial Machinery.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
NEWORDER <- fredr(series_id = "NEWORDER",observation_start = as.Date("2017-01-01"),realtime_start = NULL, realtime_end = NULL) #downloading industrial machinery production
ggplot() + #plotting industrial machinery
geom_line(data=NEWORDER, aes(x=date,y= value/1000, color = "Manufacturers' New Orders: Nondefense Capital Goods Excluding Aircraft"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"),limits = c(60,80), breaks = c(60,70,80), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Production of Industrial Machinery is up Nearly 30% Since the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 90-(.3*45), ymax = 90) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=NEWORDER, aes(x=date,y= value/1000, color = "Manufacturers' New Orders: Nondefense Capital Goods Excluding Aircraft"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"),limits = c(55,80), breaks = c(60,70,80), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Production of Industrial Machinery is up Nearly 30% Since the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 90-(.3*45), ymax = 90) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=NEWORDER, aes(x=date,y= value/1000, color = "Manufacturers' New Orders: Nondefense Capital Goods Excluding Aircraft"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"),limits = c(59,80), breaks = c(60,70,80), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Production of Industrial Machinery is up Nearly 30% Since the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.50,0.82)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 90-(.3*45), ymax = 90) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=NEWORDER, aes(x=date,y= value/1000, color = "Manufacturers' New Orders: Nondefense Capital Goods Excluding Aircraft"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"),limits = c(59,80), breaks = c(60,70,80), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "American Production of Industrial Machinery is up Nearly 30% Since the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.48,0.95)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 90-(.3*45), ymax = 90) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=NEWORDER, aes(x=date,y= value/1000, color = "Manufacturers' New Orders: Nondefense Capital Goods Excluding Aircraft"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"),limits = c(59,80), breaks = c(60,70,80), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "American Production of Industrial Machinery is up Nearly 30% Since the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.48,0.95)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 59-(.3*21), ymax = 59) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=NEWORDER, aes(x=date,y= value/1000, color = "Manufacturers' New Orders: Nondefense Capital Goods Excluding Aircraft"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"),limits = c(59,80), breaks = c(60,70,80), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "American Orders for Capital Goods Rocketed Up at the Start of the Pandemic") +
theme_apricitas + theme(legend.position = c(0.48,0.95)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 59-(.3*21), ymax = 59) +
coord_cartesian(clip = "off")
ggplot() + #plotting industrial machinery
geom_line(data=NEWORDER, aes(x=date,y= value/1000, color = "Manufacturers' New Orders: Nondefense Capital Goods Excluding Aircraft"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"),limits = c(59,80), breaks = c(60,70,80), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "American Orders for Capital Goods Rocketed Up During the Pandemic") +
theme_apricitas + theme(legend.position = c(0.48,0.95)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 59-(.3*21), ymax = 59) +
coord_cartesian(clip = "off")
Capital_Goods_Graph <- ggplot() + #plotting industrial machinery
geom_line(data=NEWORDER, aes(x=date,y= value/1000, color = "Manufacturers' New Orders: Nondefense Capital Goods Excluding Aircraft"), size = 1.25)+
xlab("Date") +
ylab("Index, Jan 2006 = 100") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"),limits = c(59,80), breaks = c(60,70,80), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("The Music of Machinery") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "American Orders for Capital Goods Rocketed Up During the Pandemic") +
theme_apricitas + theme(legend.position = c(0.48,0.95)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(1642)), xmax = as.Date("2017-01-01")-(0.049*(1642)), ymin = 59-(.3*21), ymax = 59) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = Capital_Goods_Graph, "Capital Goods.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
?ggsave()
#specify picture size
ggsave(dpi = "retina", width = 9.02, height = 5.76, plot = CPI_New_Used_Car_Vehicles_Graph, "CPI CARS.png", type = "cairo-png") #cairo gets rid of anti aliasing
cat("\014")  # ctrl+L
rm(list = ls())
dev.off()
#specify picture size
ggsave(dpi = "retina", width = 9.02, height = 5.76, plot = CPI_New_Used_Car_Vehicles_Graph, "CPI CARS.png", type = "cairo-png") #cairo gets rid of anti aliasing
CPIUSEDCARS <- fredr(series_id = "CUSR0000SETA02",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Consumer Price Index (CPI) Used Cars and Trucks data
CPINEWCARS <- fredr(series_id = "CUSR0000SETA01",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading CPI New Vehicles data
CPIRENT <- fredr(series_id = "CUSR0000SEHA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading CPI Rent of Primary Residence data in percent change format
CPIOERENT <- fredr(series_id = "CUSR0000SEHC",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading CPI Owners' Equivalent Rent of Residences data in percent change format
CPI <- fredr(series_id = "CPIAUCSL",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading CPI All Items data
PCE <- fredr(series_id = "PCE",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Personal Consumption Expenditures (PCE) data
PCEGD <- fredr(series_id = "DGDSRC1",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading PCE Goods data
PCESV <- fredr(series_id = "PCES",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading PCE Services data
PPIIDC <- fredr(series_id = "PPIIDC",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Producer Price Index: Industrial Commodities data
NFC_PROFIT <- fredr(series_id = "A463RD3Q052SBEA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Profit per unit of Gross Value Added for Nonfinancial Corporations data
NFC_PRICE <- fredr(series_id = "A455RD3Q052SBEA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Price per unit of Gross Value Added for Nonfinancial Corporations data
ECISERV <- fredr(series_id = "CIS201S000000000I",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading Employment Cost Index (ECI) services data
ECIGOOD <- fredr(series_id = "CIU201G000000000I",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading ECI goods data
PCESERV <- fredr(series_id = "DSERRG3M086SBEA",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading PCE services
PCEGOOD <- fredr(series_id = "DGDSRG3M086SBEA",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading PCE goods
DSPI <- fredr(series_id = "DSPI",observation_start = as.Date("2018-01-01")) #downloading Disposable Personal Income data
POUT <- fredr(series_id = "A068RC1",observation_start = as.Date("2018-01-01")) #downloading Personal Outlays
#formatting data for the later chart on corporate profit margins
PROFIT_MARGIN <- merge(NFC_PROFIT, NFC_PRICE, by = "date") #merging price and profit margin data per unit of gross value added for nonfinancial corporations
PROFIT_MARGIN <- subset(PROFIT_MARGIN, select = c("date","value.x","value.y")) #deleting unneeded variables from the data frame
colnames(PROFIT_MARGIN) <- c("date","NFC_PROFIT","NFC_PRICE") #renaming vairables for ease of use
#formatting data for the later chart on wage-price spirals
Wage_Price_Merge <- do.call("rbind", list(ECISERV,ECIGOOD,PCESERV,PCEGOOD)) #binding ECI and PCE data for service and goods sector
#renaming series IDs in the merged data set to plain language explanations
Wage_Price_Merge$series_id <- gsub("CIS201S000000000I","Services Compensation (ECI)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("CIU201G000000000I","Goods Compensation (ECI)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("DSERRG3M086SBEA","Services Prices (PCE)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("DGDSRG3M086SBEA","Goods Prices (PCE)",Wage_Price_Merge$series_id)
#manually adding 2% CPI growth trend for later chart on above-trend CPI
CPI$CPITREND <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,102.7079365,102.8791506,103.0506502,103.2224356,103.3945074,103.5668661,103.739512,103.9124458,104.0856678,104.2591786,104.4329787,104.6070685,104.7814485,104.9561191,105.131081,105.3063345,105.4818802,105.6577184,105.8338499,106.0102749,106.186994)#,106.3640077,106.5413165,106.7189209,106.8968214,107.0750184,107.2535124,107.432304,107.6113937)
#manually adding 4% personal income and outlays growth trend line for later chart on
DSPITrend <- data.frame(date = c(as.Date("2020-01-01"),as.Date("2021-10-01")),trend = c(16622.8,17803.79)) #calculated by compounding the Jan 2021 income by 4% for the time period in question (1.75 years)
POUTTrend <- data.frame(date = c(as.Date("2020-01-01"),as.Date("2021-10-01")),trend = c(15328.8,16417.86))
theme_apricitas <- theme_ft_rc() + #setting the "apricitas" custom theme that I use for my blog
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
CPI_Graph <- ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 95-(.3*17), ymax = 95) +
coord_cartesian(clip = "off")
PCE_Graph <- ggplot() + #plotting Personal Consumption Expenditures as well as PCE Goods/Services
geom_line(data=PCE, aes(x=date,y= (value/141.04) ,color= "Total Personal Consumption Expenditures"), size = 1.25) +
geom_line(data=PCEGD, aes(x=date,y= (value/43.46) ,color= "Goods Personal Consumption Expenditures"), size = 1.25) +
geom_line(data=PCESV, aes(x=date,y= (value/97.73) ,color= "Services Personal Consumption Expenditures"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(83,135), breaks = c(90,100,110,120,130), expand = c(0,0)) +
ylab("Personal Consumption Expenditures: January 2019 = 100") +
ggtitle("Good to Go?") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Spending on Goods Shot Up after the Pandemic Hit, but is Now Stalling") +
theme_apricitas + theme(legend.position = c(.40,.80)) +
scale_color_manual(name= "January 2019 = 100",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 83-(.3*47), ymax = 83) +
coord_cartesian(clip = "off")
PPI_Commodities <- ggplot() + #plotting PPI Industrial Commodities Index
geom_line(data=PPIIDC, aes(x=date,y= (value/2) ,color= "PPI: Industrial Commodities"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(90,125), breaks = c(90,100,110,120,130), expand = c(0,0)) +
ylab("Producer Price Index: Jan 2019 = 100") +
ggtitle("The Price of Production") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Industrial Commodities Have Shot Up in Price as the Demand for Production Inputs Grows") +
theme_apricitas + theme(legend.position = c(.40,.40)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 90-(.3*35), ymax = 90) +
coord_cartesian(clip = "off")
CPI_New_Used_Car_Vehicles_Graph <- ggplot() + #plotting "Used Cars and Trucks" and "New Vehicles" price Indexes
geom_line(data=CPIUSEDCARS, aes(x=date,y= (value/141)*100 ,color= "Used Cars and Trucks"), size = 1.25) +
geom_line(data=CPINEWCARS, aes(x=date,y= (value/146)*100 ,color= "New Vehicles"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(80,160), breaks = c(90,120,150), expand = c(0,0)) +
ylab("Index, January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Used Cars and Trucks Experienced Unprecedented Price Increases") +
theme_apricitas + theme(legend.position = c(.60,.70)) +
scale_color_manual(name= "January 2019 = 100",values = c("#00A99D","#FFE98F","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 80-(.3*80), ymax = 80) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
CPI_Rent <- ggplot() + #plotting Rent and Owner's Equivalent Rent Price Growth
geom_line(data=CPIRENT, aes(x=date,y= (value/100) ,color= "CPI Rent: Annual Percentage Growth"), size = 1.25) +
geom_line(data=CPIOERENT, aes(x=date,y= (value/100) ,color= "CPI Owner's Equivalent Rent: Annual Percentage Growth"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(0,.05), breaks = c(0,.01,0.02,0.03,0.04,0.05), expand = c(0,0)) +
ylab("Percent Change From a Year Ago, %") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Housing Price Growth Had Slowed, But is Rebounding") +
theme_apricitas + theme(legend.position = c(.40,.30)) +
scale_color_manual(name= NULL,values = c("#00A99D","#FFE98F","#EE6055","#A7ACD9","#9A348E"), breaks = c("CPI Rent: Annual Percentage Growth","CPI Owner's Equivalent Rent: Annual Percentage Growth")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 0-(.3*0.05), ymax = 0.00) +
coord_cartesian(clip = "off")
Wage_Price_Graph <- ggplot() + #plotting service/goods industry wages/prices using ECI/PCE
geom_line(data = Wage_Price_Merge, aes(x=date, y = value/100, color = series_id, alpha = series_id), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(),limits = c(-.025,0.065), breaks = c(-0.02,0,0.02,0.04,0.06), expand = c(0,0)) +
ylab("Percent Change From Year Ago") +
ggtitle("Spiral? Not so Fast!") +
labs(caption = "Graph created by @JosephPolitano using BLS and BEA data",subtitle = "Price Growth is in Goods, but Wage Growth is in Services") +
theme_apricitas + theme(legend.position = c(.50,.85)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#FFE98F","#00A99D","#00A99D")) +
scale_alpha_manual(name= NULL,values = c(1,.5,1,.5)) + #scale alpha is making some of the lines have less opacity
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*1400), xmax = as.Date("2018-01-01")-(0.049*1400), ymin = -.025-(.3*.09), ymax = -0.025) +
coord_cartesian(clip = "off")
PROFIT_MARGIN_GRAPH <- ggplot() + #plotting corporate profit margins
geom_line(data=PROFIT_MARGIN, aes(x=date,y= NFC_PROFIT/NFC_PRICE ,color= "Nonfinancial Corporate Business Profit Margins"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(.11,.165), breaks = c(.11,.12,.13,.14,0.15,0.16), expand = c(0,0)) +
ylab("Margin, %") +
ggtitle("More Than Marginal Improvements") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "With Prices Rising Faster Than Wages, Corporate Profit Margins Have Jumped") +
theme_apricitas + theme(legend.position = c(.40,.80)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*900), xmax = as.Date("2019-01-01")-(0.049*900), ymin = .11-(.3*.055), ymax = .11) +
coord_cartesian(clip = "off")
Personal_Income_Graph <- ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), size = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA, BLS, and Census data",subtitle = "Personal Income and Outlays are on Trend, But Consumers Have Significant Excess Savings") +
theme_apricitas + theme(legend.position = c(.30,.80)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*1400), xmax = as.Date("2018-01-01")-(0.049*1400), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
#specify picture size
ggsave(dpi = "retina", width = 9.02, height = 5.76, plot = CPI_New_Used_Car_Vehicles_Graph, "CPI CARS.png", type = "cairo-png") #cairo gets rid of anti aliasing
#specify picture size
ggsave(dpi = "retina", width = 9.02, height = 5.76, plot = CPI_New_Used_Car_Vehicles_Graph, "CPI CARS.png", type = "cairo-png") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = CPI_Graph, "CPI.png", type = "cairo-png") #cairo gets rid of anti aliasing
?ggsave()
#specify picture size
ggsave(dpi = "retina", width = 9.02, height = 5.76, units = "in", plot = CPI_New_Used_Car_Vehicles_Graph, "CPI CARS.png", type = "cairo-png") #cairo gets rid of anti aliasing
#specify picture size
ggsave(dpi = "retina",plot = CPI_New_Used_Car_Vehicles_Graph, "CPI CARS.png", type = "cairo-png") #cairo gets rid of anti aliasing
#specify picture size
ggsave(dpi = "retina",plot = CPI_New_Used_Car_Vehicles_Graph, "CPI CARS.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
#specify picture size
ggsave(dpi = "retina",plot = CPI_New_Used_Car_Vehicles_Graph, "CPI CARS.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
seq(0:0,13)
seq(00,13)
?seq()
CPI$CPITREND <- c(seq(0,0,length.out = 13))
seq(0,0,length.out = 13)
View(CPI)
View(CPI)
258.824*1.1652^(0:20)
CPI$CPITREND <- c(seq(0,0,length.out = 13), 258.824*1.1652^(0:20))
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 95-(.3*17), ymax = 95) +
coord_cartesian(clip = "off")
View(CPI)
CPI$CPITREND <- c(seq(0,0,length.out = 13), 258.824*1.001652^(0:20))
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 95-(.3*17), ymax = 95) +
coord_cartesian(clip = "off")
as.Date("2020-01-01"):as.Date("2021-10-01")
#manually adding 2% CPI growth trend for later chart on above-trend CPI
CPI$CPITREND <- c(seq(0,0,length.out = 13), 258.824*1.001652^(0:20)) #the sequence of zeroes is for the part of the chart where the trendline is excluded, and the second sequence is compounding CPI monthly at a 2% annual rate
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 95-(.3*17), ymax = 95) +
coord_cartesian(clip = "off")
seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")
DSPITrend <- data.frame(date = c(seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")), 16622.8*1.003274^(0:22)) #calculated by compounding the Jan 2021 income by 4% for the time period in question (1.75 years)
DSPITrend <- data.frame(date = c(seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")), 16622.8*1.003274^(0:21)) #calculated by compounding the Jan 2021 income by 4% for the time period in question (1.75 years)
View(DSPITrend)
POUTTrend <- data.frame(date = c(as.Date("2020-01-01"),as.Date("2021-10-01")),trend = 15328.8*1.003274^(0:21))
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), size = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA, BLS, and Census data",subtitle = "Personal Income and Outlays are on Trend, But Consumers Have Significant Excess Savings") +
theme_apricitas + theme(legend.position = c(.30,.80)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*1400), xmax = as.Date("2018-01-01")-(0.049*1400), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
DSPITrend <- data.frame(date = c(seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")), trend = 16622.8*1.003274^(0:21)) #calculated by compounding the Jan 2021 income by 4% for the time period in question (1.75 years)
POUTTrend <- data.frame(date = c(seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")), trend = 15328.8*1.003274^(0:21))
ggsave(dpi = "retina",plot = Personal_Income_Graph, "Personal Income.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), size = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA, BLS, and Census data",subtitle = "Personal Income and Outlays are on Trend, But Consumers Have Significant Excess Savings") +
theme_apricitas + theme(legend.position = c(.30,.80)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*1400), xmax = as.Date("2018-01-01")-(0.049*1400), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
pacman::p_load(magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
require(magick,cowplot)
cat("\014")  # ctrl+L
rm(list = ls())
dev.off()
p_unload(all)  # Remove all packages using tha package manager
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
pacman::p_load(magick,cowplot)
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
pacman::p_load(magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
?library
p_unload(all)  # Remove all packages using the package manager
pacman::p_load(magick,cowplot,knitr,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
library(pacman)
pacman::p_load(magick,cowplot,knitr,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
p_unload(all)  # Remove all packages using the package manager
pacman::p_load(magick,cowplot,knitr,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
library(pacman)
View(apricitas_logo_rast)
