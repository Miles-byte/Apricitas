ylab("") +
theme_economist() +
ggtitle("How does income from unemployment compare to your fanily's previous work income?") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), axis.ticks.x = element_blank(), panel.background = element_blank()) +
scale_fill_economist(name="")
ggplot(unemployedincome, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
xlab("") +
ylab("") +
theme_economist() +
ggtitle("Unemployment Income Compared to Prior Work Income") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), axis.ticks.x = element_blank(), panel.background = element_blank()) +
scale_fill_economist(name="")
ggplot(unemployedincome, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
xlab("") +
ylab("") +
theme_economist() +
ggtitle("UI Income Compared to Prior Work Income") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), axis.ticks.x = element_blank(), panel.background = element_blank()) +
scale_fill_economist(name="")
ggplot(unemployedincome, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
xlab("") +
ylab("") +
theme_economist() +
ggtitle("UI Compared to Prior Work Income") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), axis.ticks.x = element_blank(), panel.background = element_blank()) +
#scale_fill_economist(name="")
?theme()
ggplot(unemployedincome, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
xlab("") +
ylab("") +
theme_economist() +
ggtitle("UI Compared to Prior Work Income") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), axis.ticks.x = element_blank(), panel.background = element_blank())
?theme()
ggplot(unemployedincome, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
xlab("") +
ylab("") +
theme_economist() +
ggtitle("UI Compared to Prior Work Income") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), axis.ticks.x = element_blank(), panel.grid = element_blank())
ggplot(unemployedincome, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
xlab("") +
ylab("") +
theme_economist() +
ggtitle("UI Compared to Prior Work Income") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), axis.ticks.x = element_blank(), panel.grid = element_blank())
ggplot(unemployedincome, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
xlab("") +
ylab("") +
theme_economist() +
ggtitle("UI Compared to Prior Work Income") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), axis.ticks.x = element_blank(), panel.grid = element_blank()) +
scale_fill_economist(name="")
Unemployed_income_graph <- ggplot(unemployedincome, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
xlab("") +
ylab("") +
theme_economist() +
ggtitle("UI Compared to Prior Work Income") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), axis.ticks.x = element_blank(), panel.grid = element_blank()) +
scale_fill_economist(name="")
ggsave(dpi = "retina",plot = Unemployed_income_graph, "UI Income.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = Unemployed_income_graph, "UI Income.png",w = 5, h = 5.53, type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = Unemployed_income_graph, "UI Income.png",w = 4.8, h = 5.53, type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = Unemployed_income_graph, "UI Income.png",w = 4.5, h = 5.53, type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = Unemployed_income_graph, "UI Income.png",w = 4.5, h = 5.5, type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
sum(greater_than_weighted, na.rm=TRUE)
sum(lower_than_weighted, na.rm = TRUE)
SHED_2019_Update$ppincimp
pacman::p_load(pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,tidyr,zoo,RCurl,Cairo,datetime,stringr,pollster)
crosstab(df = SHED_2019_Update, x = ppincimp, y = CV16_a, weight = weight)
UI_Income_Weighted_Crosstabs <- crosstab(df = SHED_2019_Update, x = ppincimp, y = CV16_a, weight = weight)
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp, fill = Received))+
geom_bar(stat = "identity")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp, fill = Received))+
geom_bar(stat = "identity", position = "dodge")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = Received))+
geom_bar(stat = "identity", position = "dodge")
UI_Income_Weighted_Crosstabs <- crosstab(df = SHED_2019_Update, x = ppincimp, y = CV16_a, weight = weight,format = "long")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = Received))+
geom_bar(stat = "identity", position = "dodge")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity", position = "dodge")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
theme_economist()
View(UI_Income_Weighted_Crosstabs)
View(UI_Income_Weighted_Crosstabs)
UI_Income_Weighted_Crosstabs$ppincimp <- factor(UI_Income_Weighted_Crosstabs$ppincimp, levels = c("Less than $5,000","$5,000 to $7,499","$7,500 to $9,999","$10,000 to $12,499","$12,500 to $14,999","$15,000 to $19,999","$20,000 to $24,999","$25,000 to $29,999","$30,000 to $34,999","$35,000 to $39,999","$40,000 to $49,999","$50,000 to $59,999","$60,000 to $74,999","$75,000 to $84,999","$85,000 to $99,999","$100,000 to $124,999","$125,000 to $149,999
","$150,000 to $174,999","$175,000 to $199,999","$200,000 to $249,999","$250,000 or more"))
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
theme_economist()
UI_Income_Weighted_Crosstabs <- crosstab(df = SHED_2019_Update, x = ppincimp, y = CV16_a, weight = weight,format = "long")
View(UI_Income_Weighted_Crosstabs)
UI_Income_Weighted_Crosstabs$ppincimp <- factor(UI_Income_Weighted_Crosstabs$ppincimp, levels = c("Less than $5,000","$5,000 to $7,499","$7,500 to $9,999","$10,000 to $12,499","$12,500 to $14,999","$15,000 to $19,999","$20,000 to $24,999","$25,000 to $29,999","$30,000 to $34,999","$35,000 to $39,999","$40,000 to $49,999","$50,000 to $59,999","$60,000 to $74,999","$75,000 to $84,999","$85,000 to $99,999","$100,000 to $124,999","$125,000 to $149,999
","$150,000 to $174,999","$175,000 to $199,999","$200,000 to $249,999","$250,000 or more"))
View(UI_Income_Weighted_Crosstabs)
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
theme_economist()
UI_Income_Weighted_Crosstabs <- crosstab(df = SHED_2019_Update, x = ppincimp, y = CV16_a, weight = weight,format = "long")
View(UI_Income_Weighted_Crosstabs)
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
theme_economist()
UI_Income_Weighted_Crosstabs$ppincimp <- factor(UI_Income_Weighted_Crosstabs$ppincimp, levels = c("Less than $5,000","$5,000 to $7,499","$7,500 to $9,999","$10,000 to $12,499","$12,500 to $14,999","$15,000 to $19,999","$20,000 to $24,999","$25,000 to $29,999","$30,000 to $34,999","$35,000 to $39,999","$40,000 to $49,999","$50,000 to $59,999","$60,000 to $74,999","$75,000 to $84,999","$85,000 to $99,999","$100,000 to $124,999","$125,000 to $149,999
","$150,000 to $174,999","$175,000 to $199,999","$200,000 to $249,999","$250,000 or more"))
View(UI_Income_Weighted_Crosstabs)
UI_Income_Weighted_Crosstabs$ppincimp <- factor(UI_Income_Weighted_Crosstabs$ppincimp, levels = c("Less than $5,000","$5,000 to $7,499","$7,500 to $9,999","$10,000 to $12,499","$12,500 to $14,999","$15,000 to $19,999","$20,000 to $24,999","$25,000 to $29,999","$30,000 to $34,999","$35,000 to $39,999","$40,000 to $49,999","$50,000 to $59,999","$60,000 to $74,999","$75,000 to $84,999","$85,000 to $99,999","$100,000 to $124,999","$125,000 to $149,999","$150,000 to $174,999","$175,000 to $199,999","$200,000 to $249,999","$250,000 or more"))
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
theme_economist()
UI_Income_Weighted_Crosstabs$CV16_a <- factor(UI_Income_Weighted_Crosstabs$CV16_a, levels = c("Refused","Did not apply for and did not receive","Applied for but not received","Received"))
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
theme_economist()
UI_Income_Weighted_Crosstabs <- crosstab(df = SHED_2019_Update, x = ppincimp, y = CV16_a, weight = weight,format = "long")
View(UI_Income_Weighted_Crosstabs)
UI_Income_Weighted_Crosstabs$ppincimp <- factor(UI_Income_Weighted_Crosstabs$ppincimp, levels = c("Less than $5,000","$5,000 to $7,499","$7,500 to $9,999","$10,000 to $12,499","$12,500 to $14,999","$15,000 to $19,999","$20,000 to $24,999","$25,000 to $29,999","$30,000 to $34,999","$35,000 to $39,999","$40,000 to $49,999","$50,000 to $59,999","$60,000 to $74,999","$75,000 to $84,999","$85,000 to $99,999","$100,000 to $124,999","$125,000 to $149,999","$150,000 to $174,999","$175,000 to $199,999","$200,000 to $249,999","$250,000 or more"))
UI_Income_Weighted_Crosstabs$CV16_a <- factor(UI_Income_Weighted_Crosstabs$CV16_a, levels = c("Refused","Did not apply for and did not receive","Applied for but not received","Received"))
View(UI_Income_Weighted_Crosstabs)
UI_Income_Weighted_Crosstabs <- crosstab(df = SHED_2019_Update, x = ppincimp, y = CV16_a, weight = weight,format = "long")
UI_Income_Weighted_Crosstabs$ppincimp <- factor(UI_Income_Weighted_Crosstabs$ppincimp, levels = c("Less than $5,000","$5,000 to $7,499","$7,500 to $9,999","$10,000 to $12,499","$12,500 to $14,999","$15,000 to $19,999","$20,000 to $24,999","$25,000 to $29,999","$30,000 to $34,999","$35,000 to $39,999","$40,000 to $49,999","$50,000 to $59,999","$60,000 to $74,999","$75,000 to $84,999","$85,000 to $99,999","$100,000 to $124,999","$125,000 to $149,999","$150,000 to $174,999","$175,000 to $199,999","$200,000 to $249,999","$250,000 or more"))
UI_Income_Weighted_Crosstabs$CV16_a <- factor(UI_Income_Weighted_Crosstabs$CV16_a, levels = c("Refused","Did not apply for and did not receive","Applied for but not received","Received"))
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
theme_economist()
#renaming factors
levels(UI_Income_Weighted_Crosstabs$ppincimp) <- list(<5k ="Less than $5,000")
#renaming factors
levels(UI_Income_Weighted_Crosstabs$ppincimp) <- list("<5k" ="Less than $5,000")
UI_Income_Weighted_Crosstabs <- crosstab(df = SHED_2019_Update, x = ppincimp, y = CV16_a, weight = weight,format = "long")
UI_Income_Weighted_Crosstabs$ppincimp <- factor(UI_Income_Weighted_Crosstabs$ppincimp, levels = c("Less than $5,000","$5,000 to $7,499","$7,500 to $9,999","$10,000 to $12,499","$12,500 to $14,999","$15,000 to $19,999","$20,000 to $24,999","$25,000 to $29,999","$30,000 to $34,999","$35,000 to $39,999","$40,000 to $49,999","$50,000 to $59,999","$60,000 to $74,999","$75,000 to $84,999","$85,000 to $99,999","$100,000 to $124,999","$125,000 to $149,999","$150,000 to $174,999","$175,000 to $199,999","$200,000 to $249,999","$250,000 or more"))
UI_Income_Weighted_Crosstabs$CV16_a <- factor(UI_Income_Weighted_Crosstabs$CV16_a, levels = c("Refused","Did not apply for and did not receive","Applied for but not received","Received"))
#renaming factors
levels(UI_Income_Weighted_Crosstabs$ppincimp) <- list("<5k" ="Less than $5,000",
"7k" = "$5,000 to $7,499",
"10k" = "$7,500 to $9,999",
"12.5k" = "$10,000 to $12,499",
"15k" = "$12,500 to $14,999",
"20k" = "$15,000 to $19,999",
"25k" = "$20,000 to $24,999",
"30k" = "$25,000 to $29,999",
"35k" = "$30,000 to $34,999",
"40k" = "$35,000 to $39,999",
"50k" = "$40,000 to $49,999",
"60k" = "$50,000 to $59,999",
"75k" = "$60,000 to $74,999",
"85k" = "$75,000 to $84,999",
"100k" = "$85,000 to $99,999",
"125k" = "$100,000 to $124,999",
"150k" = "$125,000 to $149,999",
"174k" = "$150,000 to $174,999",
"200k" = "$175,000 to $199,999",
"250k" = "$200,000 to $249,999",
">250k" = "$250,000 or more")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
theme_economist()
ggplot(unemployedincome, aes(x = "", y = value, fill = group)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y = value, label = group), color = "white") +
#scale_fill_manual(values = values) +
theme_void()
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("%") +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
#renaming factors
levels(UI_Income_Weighted_Crosstabs$ppincimp) <- list("<5k" ="Less than $5,000",
"7k" = "$5,000 to $7,499",
"10k" = "$7,500 to $9,999",
"12.5k" = "$10,000 to $12,499",
"15k" = "$12,500 to $14,999",
"20k" = "$15,000 to $19,999",
"25k" = "$20,000 to $24,999",
"30k" = "$25,000 to $29,999",
"35k" = "$30,000 to $34,999",
"40k" = "$35,000 to $39,999",
"50k" = "$40,000 to $49,999",
"60k" = "$50,000 to $59,999",
"75k" = "$60,000 to $74,999",
"85k" = "$75,000 to $84,999",
"100k" = "$85,000 to $99,999",
"125k" = "$100,000 to $124,999",
"150k" = "$125,000 to $149,999",
"175k" = "$150,000 to $174,999",
"200k" = "$175,000 to $199,999",
"250k" = "$200,000 to $249,999",
">250k" = "$250,000 or more")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("%") +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
UI_Income_Weighted_Crosstabs <- crosstab(df = SHED_2019_Update, x = ppincimp, y = CV16_a, weight = weight,format = "long")
View(UI_Income_Weighted_Crosstabs)
UI_Income_Weighted_Crosstabs$ppincimp <- factor(UI_Income_Weighted_Crosstabs$ppincimp, levels = c("Less than $5,000","$5,000 to $7,499","$7,500 to $9,999","$10,000 to $12,499","$12,500 to $14,999","$15,000 to $19,999","$20,000 to $24,999","$25,000 to $29,999","$30,000 to $34,999","$35,000 to $39,999","$40,000 to $49,999","$50,000 to $59,999","$60,000 to $74,999","$75,000 to $84,999","$85,000 to $99,999","$100,000 to $124,999","$125,000 to $149,999","$150,000 to $174,999","$175,000 to $199,999","$200,000 to $249,999","$250,000 or more"))
UI_Income_Weighted_Crosstabs$CV16_a <- factor(UI_Income_Weighted_Crosstabs$CV16_a, levels = c("Refused","Did not apply for and did not receive","Applied for but not received","Received"))
#renaming factors
levels(UI_Income_Weighted_Crosstabs$ppincimp) <- list("<5k" ="Less than $5,000",
"7k" = "$5,000 to $7,499",
"10k" = "$7,500 to $9,999",
"12.5k" = "$10,000 to $12,499",
"15k" = "$12,500 to $14,999",
"20k" = "$15,000 to $19,999",
"25k" = "$20,000 to $24,999",
"30k" = "$25,000 to $29,999",
"35k" = "$30,000 to $34,999",
"40k" = "$35,000 to $39,999",
"50k" = "$40,000 to $49,999",
"60k" = "$50,000 to $59,999",
"75k" = "$60,000 to $74,999",
"85k" = "$75,000 to $84,999",
"100k" = "$85,000 to $99,999",
"125k" = "$100,000 to $124,999",
"150k" = "$125,000 to $149,999",
"175k" = "$150,000 to $174,999",
"200k" = "$175,000 to $199,999",
"250k" = "$200,000 to $249,999",
">250k" = "$250,000 or more")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("%") +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
scale_y_continuous(labels = scales::percent) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct*10, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = 12)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = 10)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = 100)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = 10000)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = .1)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = .01)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format()) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct/100, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
labels = scales::percent_format(accuracy = 1)
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct/100, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
labels = scales::percent_format(accuracy = 1) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct/100, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
UI_Outcomes_Income <- ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct/100, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggsave(dpi = "retina",plot = UI_Outcomes_Income, "UI Outcomes by Income.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = UI_Outcomes_Income, "UI Outcomes by Income.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
levels(UI_Income_Weighted_Crosstabs$CV16_a) <- list("Refused" = "Refused",
"Did not apply for and did not receive" = "Did not apply",
"Applied for but not received" = "Applied for but not received",
"Received" = "Received")
#graphing ui outcomes by hh income
UI_Outcomes_Income <- ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct/100, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggsave(dpi = "retina",plot = UI_Outcomes_Income, "UI Outcomes by Income.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
levels(UI_Income_Weighted_Crosstabs$CV16_a) <- list("Refused" = "Refused",
"Did not apply" = "Did not apply for and did not receive" ,
"Applied for but not received" = "Applied for but not received",
"Received" = "Received")
#graphing ui outcomes by hh income
UI_Outcomes_Income <- ggplot(UI_Income_Weighted_Crosstabs, aes(x = ppincimp,pct/100, fill = CV16_a))+
geom_bar(stat = "identity") +
xlab("Household Income bin") +
ylab("") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("Weighted UI Outcomes by Household Income Groups") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data") +
theme_economist() +
scale_fill_economist(name="")
ggsave(dpi = "retina",plot = UI_Outcomes_Income, "UI Outcomes by Income.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
#graphing personal consumption by recession
personal_consumption_rec <- ggplot() +
geom_line(data=PI_PCE08, aes(x=MonthsRecession,y=(PCE/9898)*100,color= "2008 Personal Consumption Expenditures"), size = 1.25) +
geom_line(data=PI_PCE20, aes(x=MonthsRecession,y=(PCE/14880)*100,color= "2020 Personal Consumption Expenditures"), size = 1.25) +
ylim(80,130) +
xlim(-1,30) +
xlab("Months Since Start of Recession") +
ylab("Index - 1 Month Before Recession = 100") +
ggtitle("A Tale of Two Recessions: Seasonally Adjusted Nominal PCE") +
labs(caption = "Graph created by @JosephPolitano using BEA data") +
theme_economist() +
scale_color_economist(name="")
ggsave(dpi = "retina",plot = personal_consumption_rec, "Personal Consumption Recession.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
#graphing composition of personal income
stacked_area <-
ggplot() +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome,fill= "COVID Programs")) +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome - PandemicPrograms,fill= "Regular UI")) +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome - PandemicPrograms - Unemploymentinsurance,fill= "Prior Gov't Transfers")) +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome - PandemicPrograms - Personalcurrenttransferreceipts,fill= "Nominal Private Income")) +
scale_x_date(limits = c(as.IDate("2018-01-01"),as.IDate("2020-01-01")), date_breaks = "1 year", date_labels = "%Y") +
#ylim(labels = scales::comma)
scale_y_continuous(labels = scales::dollar) +
#xlim(2000,2021) +
xlab("Year") +
ylab("Nominal $,Billions") +
labs(caption = "Graph created by @JosephPolitano with help from Michael Farquharson using BEA data") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist() +
scale_fill_economist(name="")
#printing charts
ggsave(dpi = "retina",plot = stacked_area, "Stacked Personal Income.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
#graphing composition of personal income
stacked_area <-
ggplot() +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome,fill= "COVID Programs")) +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome - PandemicPrograms,fill= "Regular UI")) +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome - PandemicPrograms - Unemploymentinsurance,fill= "Prior Gov't Transfers")) +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome - PandemicPrograms - Personalcurrenttransferreceipts,fill= "Nominal Private Income")) +
scale_x_date(limits = c(as.IDate("2018-01-01"),as.IDate("2020-01-01")), date_breaks = "1 year", date_labels = "%Y") +
#ylim(labels = scales::comma)
scale_y_continuous(labels = scales::dollar) +
ggtitle("Breakdown of Annual Nominal Personal Income")
#graphing composition of personal income
stacked_area <-
ggplot() +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome,fill= "COVID Programs")) +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome - PandemicPrograms,fill= "Regular UI")) +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome - PandemicPrograms - Unemploymentinsurance,fill= "Prior Gov't Transfers")) +
geom_area(data=Yearly_NIPA_Aggregates, aes(x=Year,y=Personalincome - PandemicPrograms - Personalcurrenttransferreceipts,fill= "Nominal Private Income")) +
scale_x_date(limits = c(as.IDate("2018-01-01"),as.IDate("2020-01-01")), date_breaks = "1 year", date_labels = "%Y") +
#ylim(labels = scales::comma)
scale_y_continuous(labels = scales::dollar) +
ggtitle("Breakdown of Annual Nominal Personal Income") +
#xlim(2000,2021) +
xlab("Year") +
ylab("Nominal $,Billions") +
labs(caption = "Graph created by @JosephPolitano with help from Michael Farquharson using BEA data") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist() +
scale_fill_economist(name="")
#printing charts
ggsave(dpi = "retina",plot = stacked_area, "Stacked Personal Income.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
