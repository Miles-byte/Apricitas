MEDIA_SOCIAL_IND <- bls_api("CES5051620001", startyear = 2015, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Streaming Services, Social Networks, & Related") %>%
mutate(value = (value-value[nrow(.)]))
CUSTOM_COMPUTER_PROG_IND <- bls_api("CES6054151101", startyear = 2015, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Custom Computer Programming Services") %>%
mutate(value = (value-value[nrow(.)]))
COMPUTER_SYSTEM_DESIGN_IND <- bls_api("CES6054151201", startyear = 2015, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Computer Systems Design Services") %>%
mutate(value = (value-value[nrow(.)]))
TECH_EMPLOY_GROWTH_IND <- rbind(DATA_PROCESSING_IND,MEDIA_SOCIAL_IND,SEARCH_PORTALS_IND,SOFTWARE_PUBLISHERS_IND,CUSTOM_COMPUTER_PROG_IND,COMPUTER_SYSTEM_DESIGN_IND) %>%
group_by(date) %>%
filter(n() > 5) %>%
mutate(series_id = factor(series_id,levels = rev(c("Software Publishers","Custom Computer Programming Services","Computing Infrastructure, Data Processing, Web Hosting, & Related","Computer Systems Design Services","Web Search Portals and All Other Information Services","Streaming Services, Social Networks, & Related"))))
ggplot(data = TECH_EMPLOY_GROWTH_IND, aes(x = date, y = value, fill = series_id)) + #plotting permanent and temporary job losers
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Change Since Jan 2020, Thousands of Jobs") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "k"), breaks = c(0,200,400,600), limits = c(-75,600), expand = c(0,0)) +
ggtitle("The Tech Boom and Techcession") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "So Far, Employment in the Tech Sector Has Stalled But Not Really Contracted") +
theme_apricitas + theme(legend.position = c(0.35,0.82), legend.key.size = unit(0.5,"cm"), legend.spacing.y = unit(0, "cm")) +
scale_fill_manual(name= "Change in Employment since Jan 2020",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Software Publishers","Custom Computer Programming Services","Computing Infrastructure, Data Processing, Web Hosting, & Related","Computer Systems Design Services","Web Search Portals and All Other Information Services","Streaming Services, Social Networks, & Related")) +
theme(legend.text =  element_text(size = 12, color = "white"), legend.title = element_text(size = 13)) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = -100-(.3*600), ymax = -100) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot(data = TECH_EMPLOY_GROWTH_IND, aes(x = date, y = value, fill = series_id)) + #plotting permanent and temporary job losers
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Change Since Jan 2020, Thousands of Jobs") +
#scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "k"), breaks = c(0,200,400,600), limits = c(-75,600), expand = c(0,0)) +
ggtitle("The Tech Boom and Techcession") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "So Far, Employment in the Tech Sector Has Stalled But Not Really Contracted") +
theme_apricitas + theme(legend.position = c(0.35,0.82), legend.key.size = unit(0.5,"cm"), legend.spacing.y = unit(0, "cm")) +
scale_fill_manual(name= "Change in Employment since Jan 2020",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Software Publishers","Custom Computer Programming Services","Computing Infrastructure, Data Processing, Web Hosting, & Related","Computer Systems Design Services","Web Search Portals and All Other Information Services","Streaming Services, Social Networks, & Related")) +
theme(legend.text =  element_text(size = 12, color = "white"), legend.title = element_text(size = 13)) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = -100-(.3*600), ymax = -100) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
DATA_PROCESSING_IND <- bls_api("CES5051800001", startyear = 2016, registrationKey = "BLS_KEY") %>% #data processing employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Computing Infrastructure, Data Processing, Web Hosting, & Related") %>%
mutate(value = (value-value[nrow(.)]))
SOFTWARE_PUBLISHERS_IND <- bls_api("CES5051320001", startyear = 2016, registrationKey = "BLS_KEY") %>% #software employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Software Publishers") %>%
mutate(value = (value-value[nrow(.)]))
SEARCH_PORTALS_IND <- bls_api("CES5051929001", startyear = 2016, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Web Search Portals and All Other Information Services") %>%
mutate(value = (value-value[nrow(.)]))
MEDIA_SOCIAL_IND <- bls_api("CES5051620001", startyear = 2016, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Streaming Services, Social Networks, & Related") %>%
mutate(value = (value-value[nrow(.)]))
CUSTOM_COMPUTER_PROG_IND <- bls_api("CES6054151101", startyear = 2016, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Custom Computer Programming Services") %>%
mutate(value = (value-value[nrow(.)]))
COMPUTER_SYSTEM_DESIGN_IND <- bls_api("CES6054151201", startyear = 2016, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Computer Systems Design Services") %>%
mutate(value = (value-value[nrow(.)]))
TECH_EMPLOY_GROWTH_IND <- rbind(DATA_PROCESSING_IND,MEDIA_SOCIAL_IND,SEARCH_PORTALS_IND,SOFTWARE_PUBLISHERS_IND,CUSTOM_COMPUTER_PROG_IND,COMPUTER_SYSTEM_DESIGN_IND) %>%
group_by(date) %>%
filter(n() > 5) %>%
mutate(series_id = factor(series_id,levels = rev(c("Software Publishers","Custom Computer Programming Services","Computing Infrastructure, Data Processing, Web Hosting, & Related","Computer Systems Design Services","Web Search Portals and All Other Information Services","Streaming Services, Social Networks, & Related"))))
TECH_EMPLOY_GROWTH_IND_graph <- ggplot(data = TECH_EMPLOY_GROWTH_IND, aes(x = date, y = value, fill = series_id)) + #plotting permanent and temporary job losers
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Change Since Jan 2020, Thousands of Jobs") +
#scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "k"), breaks = c(0,200,400,600), limits = c(-75,600), expand = c(0,0)) +
ggtitle("The Tech Boom and Techcession") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "So Far, Employment in the Tech Sector Has Stalled But Not Really Contracted") +
theme_apricitas + theme(legend.position = c(0.35,0.82), legend.key.size = unit(0.5,"cm"), legend.spacing.y = unit(0, "cm")) +
scale_fill_manual(name= "Change in Employment since Jan 2020",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Software Publishers","Custom Computer Programming Services","Computing Infrastructure, Data Processing, Web Hosting, & Related","Computer Systems Design Services","Web Search Portals and All Other Information Services","Streaming Services, Social Networks, & Related")) +
theme(legend.text =  element_text(size = 12, color = "white"), legend.title = element_text(size = 13)) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = -100-(.3*600), ymax = -100) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot(data = TECH_EMPLOY_GROWTH_IND, aes(x = date, y = value, fill = series_id)) + #plotting permanent and temporary job losers
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Change Since Jan 2020, Thousands of Jobs") +
#scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "k"), breaks = c(0,200,400,600), limits = c(-75,600), expand = c(0,0)) +
ggtitle("The Tech Boom and Techcession") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "So Far, Employment in the Tech Sector Has Stalled But Not Really Contracted") +
theme_apricitas + theme(legend.position = c(0.35,0.82), legend.key.size = unit(0.5,"cm"), legend.spacing.y = unit(0, "cm")) +
scale_fill_manual(name= "Change in Employment since Jan 2020",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Software Publishers","Custom Computer Programming Services","Computing Infrastructure, Data Processing, Web Hosting, & Related","Computer Systems Design Services","Web Search Portals and All Other Information Services","Streaming Services, Social Networks, & Related")) +
theme(legend.text =  element_text(size = 12, color = "white"), legend.title = element_text(size = 13)) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = -100-(.3*600), ymax = -100) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
DATA_PROCESSING_IND <- bls_api("CES5051800001", startyear = 2020, registrationKey = "BLS_KEY") %>% #data processing employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Computing Infrastructure, Data Processing, Web Hosting, & Related") %>%
mutate(value = (value-value[nrow(.)]))
SOFTWARE_PUBLISHERS_IND <- bls_api("CES5051320001", startyear = 2020, registrationKey = "BLS_KEY") %>% #software employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Software Publishers") %>%
mutate(value = (value-value[nrow(.)]))
SEARCH_PORTALS_IND <- bls_api("CES5051929001", startyear = 2020, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Web Search Portals and All Other Information Services") %>%
mutate(value = (value-value[nrow(.)]))
MEDIA_SOCIAL_IND <- bls_api("CES5051620001", startyear = 2020, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Streaming Services, Social Networks, & Related") %>%
mutate(value = (value-value[nrow(.)]))
CUSTOM_COMPUTER_PROG_IND <- bls_api("CES6054151101", startyear = 2020, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Custom Computer Programming Services") %>%
mutate(value = (value-value[nrow(.)]))
COMPUTER_SYSTEM_DESIGN_IND <- bls_api("CES6054151201", startyear = 2020, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(date, value, seriesID) %>%
mutate(series_id = "Computer Systems Design Services") %>%
mutate(value = (value-value[nrow(.)]))
TECH_EMPLOY_GROWTH_IND <- rbind(DATA_PROCESSING_IND,MEDIA_SOCIAL_IND,SEARCH_PORTALS_IND,SOFTWARE_PUBLISHERS_IND,CUSTOM_COMPUTER_PROG_IND,COMPUTER_SYSTEM_DESIGN_IND) %>%
group_by(date) %>%
filter(n() > 5) %>%
mutate(series_id = factor(series_id,levels = rev(c("Software Publishers","Custom Computer Programming Services","Computing Infrastructure, Data Processing, Web Hosting, & Related","Computer Systems Design Services","Web Search Portals and All Other Information Services","Streaming Services, Social Networks, & Related"))))
TECH_EMPLOY_GROWTH_IND_graph <- ggplot(data = TECH_EMPLOY_GROWTH_IND, aes(x = date, y = value, fill = series_id)) + #plotting permanent and temporary job losers
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Change Since Jan 2020, Thousands of Jobs") +
#scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "k"), breaks = c(0,200,400,600), limits = c(-75,600), expand = c(0,0)) +
ggtitle("The Tech Boom and Techcession") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "So Far, Employment in the Tech Sector Has Stalled But Not Really Contracted") +
theme_apricitas + theme(legend.position = c(0.35,0.82), legend.key.size = unit(0.5,"cm"), legend.spacing.y = unit(0, "cm")) +
scale_fill_manual(name= "Change in Employment since Jan 2020",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Software Publishers","Custom Computer Programming Services","Computing Infrastructure, Data Processing, Web Hosting, & Related","Computer Systems Design Services","Web Search Portals and All Other Information Services","Streaming Services, Social Networks, & Related")) +
theme(legend.text =  element_text(size = 12, color = "white"), legend.title = element_text(size = 13)) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = -100-(.3*600), ymax = -100) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot(data = TECH_EMPLOY_GROWTH_IND, aes(x = date, y = value, fill = series_id)) + #plotting permanent and temporary job losers
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Change Since Jan 2020, Thousands of Jobs") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "k"), breaks = c(0,200,400,600), limits = c(-75,600), expand = c(0,0)) +
ggtitle("The Tech Boom and Techcession") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "So Far, Employment in the Tech Sector Has Stalled But Not Really Contracted") +
theme_apricitas + theme(legend.position = c(0.35,0.82), legend.key.size = unit(0.5,"cm"), legend.spacing.y = unit(0, "cm")) +
scale_fill_manual(name= "Change in Employment since Jan 2020",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Software Publishers","Custom Computer Programming Services","Computing Infrastructure, Data Processing, Web Hosting, & Related","Computer Systems Design Services","Web Search Portals and All Other Information Services","Streaming Services, Social Networks, & Related")) +
theme(legend.text =  element_text(size = 12, color = "white"), legend.title = element_text(size = 13)) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = -100-(.3*600), ymax = -100) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
TECH_EMPLOY_GROWTH_IND_graph <- ggplot(data = TECH_EMPLOY_GROWTH_IND, aes(x = date, y = value, fill = series_id)) + #plotting permanent and temporary job losers
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Change Since Jan 2020, Thousands of Jobs") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "k"), breaks = c(0,200,400,600), limits = c(-75,600), expand = c(0,0)) +
ggtitle("The Tech Boom and Techcession") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "So Far, Employment in the Tech Sector Has Stalled But Not Really Contracted") +
theme_apricitas + theme(legend.position = c(0.35,0.82), legend.key.size = unit(0.5,"cm"), legend.spacing.y = unit(0, "cm")) +
scale_fill_manual(name= "Change in Employment since Jan 2020",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Software Publishers","Custom Computer Programming Services","Computing Infrastructure, Data Processing, Web Hosting, & Related","Computer Systems Design Services","Web Search Portals and All Other Information Services","Streaming Services, Social Networks, & Related")) +
theme(legend.text =  element_text(size = 12, color = "white"), legend.title = element_text(size = 13)) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = -75-(.3*600), ymax = -75) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = TECH_EMPLOY_GROWTH_IND_graph, "Tech Employ Growth IND.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
QCEW_GROWTH_LINE_Graph <- ggplot() + #plotting net tightening data
geom_line(data=US_PRIVATE_WAGES_GROWTH, aes(x=date,y= value,color= "US Total"), size = 1.25)+
geom_line(data=CA_PRIVATE_WAGES_GROWTH, aes(x=date,y= value,color= "California Total"), size = 1.25)+
geom_line(data=SF_PRIVATE_WAGES_GROWTH, aes(x=date,y= value,color= "San Francisco County"), size = 1.25)+
geom_line(data=SM_PRIVATE_WAGES_GROWTH, aes(x=date,y= value,color= "San Mateo County"), size = 1.25)+
geom_line(data=SC_PRIVATE_WAGES_GROWTH, aes(x=date,y= value,color= "Santa Clara County"), size = 1.25)+
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_area(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Aggregate Compensation Growth, Year-over-Year") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(-.20,0,0.20,0.40), limits = c(-.22,.40), expand = c(0,0)) +
ggtitle("Aggregate Private-Sector Worker Compensation\n(Including Bonuses and Stock Options) Growth") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Aggregate Compensation Growth is Now Deeply Negative in Much of the Bay Area") +
theme_apricitas + theme(legend.position = c(.15,.86), legend.key.height = unit(0,"cm"), plot.title = element_text(size = 25)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC"), breaks = c("US Total","California Total","San Francisco County","San Mateo County","Santa Clara County")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = -0.22-(.3*.62), ymax = -0.22) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = QCEW_GROWTH_LINE_Graph, "QCEW Growth Data Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
DATA_PROCESSING_WAGES_GROWTH <- bls_api("ENUUS000305518", startyear = 2017, registrationKey = "BLS_KEY") %>% #data processing employment
mutate(date = as.Date(as.yearqtr(paste(period, year), "Q%q %Y"))) %>%
arrange(date) %>%
mutate(value = (value-lag(value, 4))/lag(value,4)) %>%
select(date, value) %>%
drop_na()
WEB_SEARCH_WAGES_GROWTH <- bls_api("ENUUS000305519", startyear = 2017, registrationKey = "BLS_KEY") %>% #data processing employment
mutate(date = as.Date(as.yearqtr(paste(period, year), "Q%q %Y"))) %>%
arrange(date) %>%
mutate(value = (value-lag(value, 4))/lag(value,4)) %>%
select(date, value) %>%
drop_na()
CUSTOM_COMPUTER_PROGRAMMING_WAGES_GROWTH <- bls_api("ENUUS000305541511", startyear = 2017, registrationKey = "BLS_KEY") %>% #data processing employment
mutate(date = as.Date(as.yearqtr(paste(period, year), "Q%q %Y"))) %>%
arrange(date) %>%
mutate(value = (value-lag(value, 4))/lag(value,4)) %>%
select(date, value) %>%
drop_na()
COMPUTER_SYSTEM_DESIGN_SERVICES_WAGES_GROWTH <- bls_api("ENUUS000305541512", startyear = 2017, registrationKey = "BLS_KEY") %>% #data processing employment
mutate(date = as.Date(as.yearqtr(paste(period, year), "Q%q %Y"))) %>%
arrange(date) %>%
mutate(value = (value-lag(value, 4))/lag(value,4)) %>%
select(date, value) %>%
drop_na()
INFORMATION_WAGES_GROWTH <- bls_api("ENUUS00030551", startyear = 2017, registrationKey = "BLS_KEY") %>% #data processing employment
mutate(date = as.Date(as.yearqtr(paste(period, year), "Q%q %Y"))) %>%
arrange(date) %>%
mutate(value = (value-lag(value, 4))/lag(value,4)) %>%
select(date, value) %>%
drop_na()
QCEW_GROWTH_LINE_SECTOR_Graph <- ggplot() + #plotting net tightening data
geom_line(data=COMPUTER_SYSTEM_DESIGN_SERVICES_WAGES_GROWTH, aes(x=date,y= value,color= "Computer Systems Design Services"), size = 1.25)+
geom_line(data=CUSTOM_COMPUTER_PROGRAMMING_WAGES_GROWTH, aes(x=date,y= value,color= "Custom Computer Programming Services"), size = 1.25)+
geom_line(data=DATA_PROCESSING_WAGES_GROWTH, aes(x=date,y= value,color= "Computing Infrastructure, Data Processing,\nWeb Hosting, & Related"), size = 1.25)+
geom_line(data=INFORMATION_WAGES_GROWTH, aes(x=date,y= value,color= "Information Total"), size = 1.25)+
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_area(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Aggregate Compensation Growth, Year-over-Year") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(-.20,0,0.20,0.40), limits = c(-.22,.40), expand = c(0,0)) +
ggtitle("Aggregate Private-Sector Worker Compensation\n(Including Bonuses and Stock Options) Growth") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Compensation Growth Slowed Down Across Tech Sectors in 2022 after Booming During Early COVID") +
theme_apricitas + theme(legend.position = c(.4,.2), legend.key.height = unit(0,"cm"), plot.title = element_text(size = 25)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC"), breaks = c("Information Total","Computer Systems Design Services","Custom Computer Programming Services","Computing Infrastructure, Data Processing,\nWeb Hosting, & Related")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = -0.22-(.3*.62), ymax = -0.22) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = QCEW_GROWTH_LINE_SECTOR_Graph, "QCEW Growth Data Sector Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
statscnQueryLastN(10, lang = "en")
statscnQueryZb('A0704',dbcode='hgyd', lang = "en")
install_github("pcdi/rstatscn")
library(rstatscn)
#statscnQueryZb(dbcode='hgyd', lang = "en") #lists all datasets with monthly national data
#statscnQueryZb(dbcode='hgjd', lang = "en") #lists all datasets with quarterly national data
#statscnQueryZb('A08',dbcode='hgyd', lang = "en")
#statscnQueryZb('A01',dbcode='hgjd', lang = "en")
#CPI <- statscnQueryData('A010301',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb") #headline inflation data (A01)
#please note: the package is weird in that it will only let me retrieve a certain n of previous results, so I just used 60 here
#statscnQueryLastN(60, lang = "en")
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
#Domestic Retail Trade
statscnQueryLastN(10, lang = "en")
statscnQueryZb('A0704',dbcode='hgyd', lang = "en")
IND_PRO_NEV <- statscnQueryLastN(100, lang = "en") %>%
mutate(date = as.Date(as.yearmon(rownames(.)))) %>%
subset(date >= as.Date("1992-01-01")) %>%
subset(.,`Output of New Energy Vehicles, Current Period` != 0)
IND_PRO_NEV <- statscnQueryData('A02092W',dbcode='hgyd',lang = "en", rowcode = "sj", colcode = "zb")
View(IND_PRO_NEV)
RGDP_CA <- fredr(series_id = "CARQGSP", observation_start = as.Date("2015-01-01"), units = "pc1")
RGDP_US <- fredr(series_id = "GDPC1", observation_start = as.Date("2015-01-01"), units = "pc1")
ggplot() + #plotting net tightening data
geom_line(data=RGDP_US, aes(x=date,y= value/100,color= "United States"), size = 1.25)+
geom_line(data=RGDP_CA, aes(x=date,y= value/100,color= "California"), size = 1.25)+
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_area(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Real GDP Growth, Year-over-Year") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(-.10,-0.05,0,0.05,0.10,.15), limits = c(-.10,.16), expand = c(0,0)) +
ggtitle("California and the Tech-cession") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "California GDP Growth Briefly Turned Negative in 2022") +
theme_apricitas + theme(legend.position = c(.15,.86), legend.key.height = unit(0,"cm"), plot.title = element_text(size = 27)) +
scale_color_manual(name= "Real GDP Growth",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC"), breaks = c("United States","California")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2015-01-01")-(.1861*(today()-as.Date("2015-01-01"))), xmax = as.Date("2015-01-01")-(0.049*(today()-as.Date("2015-01-01"))), ymin = -0.10-(.3*.26), ymax = -0.10) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
setwd("~/GitHub/Apricitas/The Tech-cession")
CALIFORNIA_GDP_LINE_Graph <- ggplot() + #plotting net tightening data
geom_line(data=RGDP_US, aes(x=date,y= value/100,color= "United States"), size = 1.25)+
geom_line(data=RGDP_CA, aes(x=date,y= value/100,color= "California"), size = 1.25)+
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_area(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Real GDP Growth, Year-over-Year") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), breaks = c(-.10,-0.05,0,0.05,0.10,.15), limits = c(-.10,.16), expand = c(0,0)) +
ggtitle("California and the Tech-cession") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "California GDP Growth Briefly Turned Negative in 2022") +
theme_apricitas + theme(legend.position = c(.15,.86), legend.key.height = unit(0,"cm"), plot.title = element_text(size = 27)) +
scale_color_manual(name= "Real GDP Growth",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC"), breaks = c("United States","California")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2015-01-01")-(.1861*(today()-as.Date("2015-01-01"))), xmax = as.Date("2015-01-01")-(0.049*(today()-as.Date("2015-01-01"))), ymin = -0.10-(.3*.26), ymax = -0.10) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = CALIFORNIA_GDP_LINE_Graph, "CALIFORNIA GDP Data Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
IPMAN <- retrieve_data(tablename = "42153BM001", genesis=c(db='de'))
IPMAN_ENERGY <- IPMAN %>%
subset(WZ08V1 %in% c("WZ08-C","WZ08-B-10")) %>% #taking manufacturing and energy intensive manufacturing data
subset(WERT03 == "X13JDKSB") %>%#calendar and seasonally adjusted
mutate(MONAT = gsub("MONAT","",MONAT)) %>%
mutate(date = as.Date(paste0(JAHR,"-", MONAT,"-01"))) %>%
transmute(date, value = PRO101_val, category = WZ08V1) %>%
pivot_wider(names_from = category)
ENERGY_MANUFACTURING_graph <- ggplot() + #plotting energy intensive manufacturing
geom_line(data=subset(IPMAN_ENERGY, date >= as.Date("2018-01-01")), aes(x=date,y= `WZ08-B-10`/`WZ08-B-10`[1]*100,color="Energy-Intensive Manufacturing"), size = 1.25) +
geom_line(data=subset(IPMAN_ENERGY, date >= as.Date("2018-01-01")), aes(x=date,y= `WZ08-C`/`WZ08-C`[1]*100,color="Manufacturing"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(65,110), expand = c(0,0)) +
ylab("Index, Jan 2018 = 100") +
ggtitle("The German Industrial Crunch") +
labs(caption = "Graph created by @JosephPolitano using DeStatis Data",subtitle = "The Energy Crisis Has Crushed Energy-Intensive German Manufacturing") +
theme_apricitas + theme(legend.position = c(.6,.87)) +
scale_color_manual(name= "Germany, Industrial Production",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Manufacturing","Energy-Intensive Manufacturing")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 65-(.3*45), ymax = 65) +
coord_cartesian(clip = "off")
test_login(genesis=c(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD")))
save_credentials(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD"))
IPMAN <- retrieve_data(tablename = "42153BM001", genesis=c(db='de'))
IPMAN <- retrieve_data(tablename = "42153BM001", genesis=c(db='de'))
ggplot() + #plotting energy intensive manufacturing
geom_line(data=subset(IPMAN_ENERGY, date >= as.Date("2018-01-01")), aes(x=date,y= `WZ08-B-10`/`WZ08-B-10`[1]*100,color="Energy-Intensive Manufacturing"), size = 1.25) +
geom_line(data=subset(IPMAN_ENERGY, date >= as.Date("2018-01-01")), aes(x=date,y= `WZ08-C`/`WZ08-C`[1]*100,color="Manufacturing"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(65,110), expand = c(0,0)) +
ylab("Index, Jan 2018 = 100") +
ggtitle("The German Industrial Crunch") +
labs(caption = "Graph created by @JosephPolitano using DeStatis Data",subtitle = "The Energy Crisis Has Crushed Energy-Intensive German Manufacturing") +
theme_apricitas + theme(legend.position = c(.6,.87)) +
scale_color_manual(name= "Germany, Industrial Production",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Manufacturing","Energy-Intensive Manufacturing")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 65-(.3*45), ymax = 65) +
coord_cartesian(clip = "off")
IPMAN_ENERGY <- IPMAN %>%
subset(WZ08V1 %in% c("WZ08-C","WZ08-B-10")) %>% #taking manufacturing and energy intensive manufacturing data
subset(WERT03 == "X13JDKSB") %>%#calendar and seasonally adjusted
mutate(MONAT = gsub("MONAT","",MONAT)) %>%
mutate(date = as.Date(paste0(JAHR,"-", MONAT,"-01"))) %>%
transmute(date, value = PRO101_val, category = WZ08V1) %>%
pivot_wider(names_from = category)
ggplot() + #plotting energy intensive manufacturing
geom_line(data=subset(IPMAN_ENERGY, date >= as.Date("2018-01-01")), aes(x=date,y= `WZ08-B-10`/`WZ08-B-10`[1]*100,color="Energy-Intensive Manufacturing"), size = 1.25) +
geom_line(data=subset(IPMAN_ENERGY, date >= as.Date("2018-01-01")), aes(x=date,y= `WZ08-C`/`WZ08-C`[1]*100,color="Manufacturing"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(65,110), expand = c(0,0)) +
ylab("Index, Jan 2018 = 100") +
ggtitle("The German Industrial Crunch") +
labs(caption = "Graph created by @JosephPolitano using DeStatis Data",subtitle = "The Energy Crisis Has Crushed Energy-Intensive German Manufacturing") +
theme_apricitas + theme(legend.position = c(.6,.87)) +
scale_color_manual(name= "Germany, Industrial Production",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Manufacturing","Energy-Intensive Manufacturing")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 65-(.3*45), ymax = 65) +
coord_cartesian(clip = "off")
GDP_list <- retrieve_datalist(tableseries = "81000*", genesis=c(db='de'), language = "en")
GDP <- retrieve_data(tablename = "81000BV007", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPKM") %>%
subset(WERT05 == "X13JDKSB") %>%
select(JAHR, QUARTG, BIP004_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), value = BIP004_val) %>%
arrange(date) %>%
subset(date >= as.Date("2000-01-01"))
US_GDP <- fredr(series_id = "A939RX0Q048SBEA", observation_start = as.Date("2000-01-01"))
IP_CAR <- retrieve_data(tablename = "42153BM003", genesis=c(db='de')) %>%
subset(WZ08V3 == "WZ08-291") %>% #taking manufacturing and energy intensive manufacturing data
subset(WERT03 == "X13JDKSB") %>%#calendar and seasonally adjusted
mutate(MONAT = gsub("MONAT","",MONAT)) %>%
mutate(date = as.Date(paste0(JAHR,"-", MONAT,"-01"))) %>%
transmute(date, value = PRO101_val, category = WZ08V3) %>%
pivot_wider(names_from = category)
ggplot() + #plotting GDP For US vs Germany
geom_line(data=GDP, aes(x=date,y= value/value[1]*100,color="Germany"), size = 1.25) +
geom_line(data=US_GDP, aes(x=date,y= value/value[1]*100,color="United States"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(95,135), expand = c(0,0)) +
ylab("Index, Q1 2000 = 100") +
ggtitle("Germany's Slowdown") +
labs(caption = "Graph created by @JosephPolitano using DeStatis and BEA Data",subtitle = "Since 2018, German Economic Growth Has Been Especially Weak") +
theme_apricitas + theme(legend.position = c(.6,.87)) +
scale_color_manual(name= "Real GDP Per Capita",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Germany","United States")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*(today()-as.Date("2000-01-01"))), ymin = 95-(.3*40), ymax = 95) +
coord_cartesian(clip = "off")
View(GDP)
IP_CAR <- retrieve_data(tablename = "42153BM003", genesis=c(db='de')) %>%
subset(WZ08V3 == "WZ08-291") %>% #taking manufacturing and energy intensive manufacturing data
subset(WERT03 == "X13JDKSB") %>%#calendar and seasonally adjusted
mutate(MONAT = gsub("MONAT","",MONAT)) %>%
mutate(date = as.Date(paste0(JAHR,"-", MONAT,"-01"))) %>%
transmute(date, value = PRO101_val, category = WZ08V3) %>%
pivot_wider(names_from = category)
ggplot() + #plotting car manufacturing
geom_line(data=subset(IP_CAR, date >= as.Date("2018-01-01")), aes(x=date,y= `WZ08-291`/90.08*100,color="Motor Vehicles"), size = 1.25) +
annotate(geom = "hline", y = 100, yintercept = 100, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "2019 Average", x = as.Date("2021-07-01"), y = 105, color ="#FFE98F", size = 5) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,130), expand = c(0,0)) +
ylab("Index, Jan 2018 = 100") +
ggtitle("The German Industrial Crunch") +
labs(caption = "Graph created by @JosephPolitano using DeStatis Data",subtitle = "German Car Manufacturing Has Still Not Recovered to Pre-Pandemic Levels") +
theme_apricitas + theme(legend.position = c(.8,.27)) +
scale_color_manual(name= "Germany, Industrial Production",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*130), ymax = 0) +
coord_cartesian(clip = "off")
#Downloading Quarterly 9 Digit Bulk Industrial Production Data
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
IP_EV_EURO <- IP_9DIGIT_BULK %>%
subset(GP19A9 %in% c("GP19-291024500","GP19-291024300")) %>%
mutate(GP19A9 = gsub("GP19-291024500", "Battery Electric Vehicles",GP19A9)) %>%
mutate(GP19A9 = gsub("GP19-291024300", "Plug-in Hybrids",GP19A9)) %>%
transmute(category = factor(GP19A9, levels = c("Plug-in Hybrids","Battery Electric Vehicles")), value = PRODAW_val, date = as.Date(as.yearqtr(paste0(JAHR, '-', gsub("QUART", "", QUARTG)), format = "%Y-%q")))
IP_EV_NUMBER <- IP_9DIGIT_BULK %>%
subset(GP19A9 %in% c("GP19-291024500","GP19-291024300")) %>%
mutate(GP19A9 = gsub("GP19-291024500", "Battery Electric Vehicles",GP19A9)) %>%
mutate(GP19A9 = gsub("GP19-291024300", "Plug-in Hybrids",GP19A9)) %>%
transmute(category = factor(GP19A9, levels = c("Plug-in Hybrids","Battery Electric Vehicles")), value = PRO008_val, date = as.Date(as.yearqtr(paste0(JAHR, '-', gsub("QUART", "", QUARTG)), format = "%Y-%q")))
ggplot(data = IP_EV_EURO, aes(x = date, y = value/1000000000, fill = category)) +
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
ylab("Euros") +
ggtitle("The German EV Surge") +
scale_y_continuous(labels = scales::dollar_format(accuracy = 1, suffix = "B", prefix = "€"), breaks = c(0,5,10,15), limits = c(0,15), expand = c(0,0)) +
labs(caption = "Graph created by @JosephPolitano using DeStatis data", subtitle = "The Value of German EV Output is Rapidly Growing as the Industry Retools") +
theme_apricitas + theme(legend.position = c(.425,.85)) +#, axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= "Value of German Quarterly Production",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Battery Electric Vehicles","Plug-in Hybrids")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 0-(.3*15), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
GERMAN_GFCF_PRIVATE_EQUIPMENT <- retrieve_data(tablename = "81000BV015", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPVK") %>%
subset(WERT05 == "X13JDKSB") %>%
select(JAHR, QUARTG, VGR105_val,BAU020_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), value = VGR105_val) %>%
arrange(date) %>%
subset(date >= as.Date("2000-01-01"))
ggplot() + #plotting GDP For US vs Germany
geom_line(data=GERMAN_GFCF_PRIVATE_EQUIPMENT, aes(x=date,y= value,color="Real Private Fixed Investment in Equipment, Germany"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B", prefix = "€"),limits = c(30,60), expand = c(0,0)) +
ylab("Chained Billions of Dollars") +
ggtitle("Germany's Slowdown") +
labs(caption = "Graph created by @JosephPolitano using DeStatis and BEA Data",subtitle = "Since 2018, German Economic Growth Has Been Especially Weak") +
theme_apricitas + theme(legend.position = c(.6,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*(today()-as.Date("2000-01-01"))), ymin = 95-(.3*40), ymax = 95) +
coord_cartesian(clip = "off")
ggplot() + #plotting GDP For US vs Germany
geom_line(data=GERMAN_GFCF_PRIVATE_EQUIPMENT, aes(x=date,y= value,color="Real Private Fixed Investment in Equipment, Germany"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B", prefix = "€"),limits = c(30,60), expand = c(0,0)) +
ylab("Chained Billions of Dollars") +
ggtitle("Germany's Slowdown") +
labs(caption = "Graph created by @JosephPolitano using DeStatis and BEA Data",subtitle = "Since 2018, German Economic Growth Has Been Especially Weak") +
theme_apricitas + theme(legend.position = c(.6,.89)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*(today()-as.Date("2000-01-01"))), ymin = 95-(.3*40), ymax = 95) +
coord_cartesian(clip = "off")
ggplot() + #plotting GDP For US vs Germany
geom_line(data=GERMAN_GFCF_PRIVATE_EQUIPMENT, aes(x=date,y= value,color="Real Private Fixed Investment in Equipment, Germany"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B", prefix = "€"),limits = c(30,60), expand = c(0,0)) +
ylab("Chained Billions of Dollars") +
ggtitle("Germany's Slowdown") +
labs(caption = "Graph created by @JosephPolitano using DeStatis and BEA Data",subtitle = "German Fixed Investment in Equipment is Recovering but Still Below 2018 Levels") +
theme_apricitas + theme(legend.position = c(.6,.95)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*(today()-as.Date("2000-01-01"))), ymin = 95-(.3*40), ymax = 95) +
coord_cartesian(clip = "off")
ggplot() + #plotting GDP For US vs Germany
geom_line(data=GERMAN_GFCF_PRIVATE_EQUIPMENT, aes(x=date,y= value,color="Real Private Fixed Investment in Equipment, Germany"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B", prefix = "€"),limits = c(30,60), expand = c(0,0)) +
ylab("Chained Billions of Dollars") +
ggtitle("Germany's Slowdown") +
labs(caption = "Graph created by @JosephPolitano using DeStatis and BEA Data",subtitle = "German Fixed Investment in Equipment is Recovering but Still Below 2018 Levels") +
theme_apricitas + theme(legend.position = c(.6,.95)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*(today()-as.Date("2000-01-01"))), ymin = 30-(.3*30), ymax = 30) +
coord_cartesian(clip = "off")
ggplot() + #plotting GDP For US vs Germany
geom_line(data=GERMAN_GFCF_PRIVATE_EQUIPMENT, aes(x=date,y= value,color="Real Gross Fixed Capital Formation in Equipment, Germany"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B", prefix = "€"),limits = c(30,60), expand = c(0,0)) +
ylab("Chained Billions of Dollars") +
ggtitle("Germany's Slow Recovery") +
labs(caption = "Graph created by @JosephPolitano using DeStatis and BEA Data",subtitle = "German Fixed Investment in Equipment is Recovering but Still Below 2018 Levels") +
theme_apricitas + theme(legend.position = c(.6,.95)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*(today()-as.Date("2000-01-01"))), ymin = 30-(.3*30), ymax = 30) +
coord_cartesian(clip = "off")
GERMAN_GFCF_EQUIPMENT_CATEGORIES <- retrieve_data(tablename = "81000BV009", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPVK") %>%
subset(WERT05 == "X13JDKSB") %>%
select(JAHR, QUARTG, VGR008_val, INV006_val, INV012_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), Equipment = VGR008_val, Machines = INV006_val, Vehicles = INV012_val) %>%
arrange(date) %>%
subset(date >= as.Date("2016-01-01")) %>%
mutate(across(where(is.numeric), ~if_else(.x == 0, NA_real_, .x))) %>%
mutate(across(where(is.numeric), ~ .x / .x[9]*100))
ggplot() + #plotting Fixed Investment
geom_line(data=GERMAN_GFCF_EQUIPMENT_CATEGORIES, aes(x=date,y= Machines,color="Equipment: Machinery and Other Devices"), size = 1.25) +
geom_line(data=GERMAN_GFCF_EQUIPMENT_CATEGORIES, aes(x=date,y= Vehicles,color="Equipment: Vehicles"), size = 1.25) +
geom_line(data=GERMAN_GFCF_EQUIPMENT_CATEGORIES, aes(x=date,y= Equipment,color="Equipment"), size = 2.25) +
xlab("Date") +
scale_y_continuous(limits = c(60,120), expand = c(0,0)) +
ylab("Index, Q1 2018 = 100") +
ggtitle("Germany's Investment Slowdown") +
labs(caption = "Graph created by @JosephPolitano using DeStatis Data",subtitle = "German Investment In Fixed Manufacturing Assets Has Not Recovered to Pre-Pandemic Lvels") +
theme_apricitas + theme(legend.position = c(.3,.27)) +
scale_color_manual(name= "Germany: Real Fixed Investment",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2016-01-01")-(.1861*(today()-as.Date("2016-01-01"))), xmax = as.Date("2016-01-01")-(0.049*(today()-as.Date("2016-01-01"))), ymin = 60-(.3*60), ymax = 60) +
coord_cartesian(clip = "off")
View(GERMAN_GFCF_PRIVATE_EQUIPMENT)
