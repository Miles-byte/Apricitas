ggtitle("US GDP Growth") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "US NGDP Growth is Still Well Above Pre Pandemic Levelsâ€”As Real Growth Slows") +
theme_apricitas + theme(legend.position = c(.52,.75)) + theme(legend.spacing.y = unit(0,"cm")) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = -.10-(.3*.30), ymax = -.10) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = GDP_Growths_graph, "GDP Growths.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
RGDP_Contributions_Specs <- list(
'UserID' =  Sys.getenv("BEA_KEY"),
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableName' = 'T10102',
'Frequency' = 'Q',
'Year' = '2017,2018,2019,2020,2021,2022,2023',
'ResultFormat' = 'json'
)
RGDP_Contributions <- beaGet(RGDP_Contributions_Specs, iTableStyle = FALSE) %>%
select(`T10102 A822RY 22 Government consumption expenditures and gross investment Quantity Contributions Level 0`,`T10102 A019RY 15 Net exports of goods and services Quantity Contributions Level 0`,`T10102 A006RY 7 Gross private domestic investment Quantity Contributions Level 0`,`T10102 DPCERY 2 Personal consumption expenditures Quantity Contributions Level 0`) %>%
mutate(date = (seq(as.Date("2017-01-01"), length.out = nrow(.), by = "3 months"))) %>%
clean_names() %>%
`colnames<-`(c("Government", "Net Exports", "Investment", "Consumption","date")) %>%
drop_na() %>%
pivot_longer(cols = c(Government,`Net Exports`,Investment,Consumption)) %>%
subset(date >= as.Date("2020-10-01"))
?pivot_longer()
GDPMonthlyContrib_Graph <- ggplot(RGDP_Contributions, aes(fill=name, x=date, y=value/100)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
#geom_point(data = RGDPQuarterly, aes(x=date, y = value/100), size = 3, fill ="black", color = "black", shape = 23) +
#guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.04,0.09), breaks = c(-0.04,-.02,0,0.02,0.04,0.06,0.08), expand = c(0,0)) +
ylab("Contributions, Percent, Seasonally Adjusted at Annual Rates") +
ggtitle("Contributions to GDP Growth") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "") +
theme_apricitas + theme(legend.position = c(.67,.85)) +
#scale_color_manual(name = NULL, values = "black") +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","black"), breaks = c("Consumption","Investment","Net Exports","Government")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-09-01")-(.1861*(today()-as.Date("2020-09-01"))), xmax = as.Date("2020-09-01")-(0.049*(today()-as.Date("2020-09-01"))), ymin = -0.04-(.3*.13), ymax = -0.04) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = GDPMonthlyContrib_Graph, "Monthly GDP.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
PRIVATE_SALES_Specs <- list(
'UserID' =  Sys.getenv("BEA_KEY"),
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableName' = 'T10401',
'Frequency' = 'Q',
'Year' = '2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023',
'ResultFormat' = 'json'
)
PRIVATE_SALES <- beaGet(PRIVATE_SALES_Specs, iTableStyle = FALSE) %>%
mutate(date = (seq(as.Date("2006-01-01"), length.out = nrow(.), by = "3 months"))) %>%
clean_names() %>%
drop_na()
REAL_FINAL_QUARTERLY <- ggplot() + #plotting  GDP data
geom_line(data=PRIVATE_SALES, aes(x=date,y= t10401_pb000003_8_final_sales_to_private_domestic_purchasers_fisher_quantity_index_percent_change_annual_rate_0/100,color= "Real Final Sales to Private Domestic Purchasers, Quarterly"), size = 1.25)+
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
xlab("Date") +
ylab("Quarterly Growth, Annnualized") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-.32,.41), expand = c(0,0)) +
ggtitle("US 'Core' GDP Growth") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "Growth in Real Final Sales to Private Domestic Purchasers Has Been Persistently Weak") +
theme_apricitas + theme(legend.position = c(.42,.75)) + theme(legend.spacing.y = unit(0,"cm")) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2006-01-01")-(.1861*(today()-as.Date("2006-01-01"))), xmax = as.Date("2006-01-01")-(0.049*(today()-as.Date("2006-01-01"))), ymin = -.31-(.3*.73), ymax = -.31) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = REAL_FINAL_QUARTERLY, "Real Final Private.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
test <- beaSearch("Real Gross Domestic Product")
ggsave(dpi = "retina",plot = GDPMonthlyContrib_Graph, "Monthly GDP.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = RFSALEDOMPRIV_Graph, "Real Final Private Sales.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = RFSALEDOMPRIV_PCT_Graph, "Real Final Private Sales PCT.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = RealPrivateInventories_Graph, "Real Private Inventories.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = RGDP_Graph, "RGDP.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = LaborProductivity_Graph, "Labor Productivity Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = TradeDeficit_Graph, "Trade Deficit Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = Port_Throughput_Graph, "Port Throughput.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = REAL_PERSONAL_INCOME_LESS_TRANSFERS_Graph, "Real Personal Income Less Transfers.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = Employment_Index_Graph, "Employment Indexed.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = REAL_GAS_Graph, "Real Gas.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = INDUSTRIAL_PRODUCTION_Index_Graph, "Industrial Production.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = FIXED_INVESTMENT_Index_Graph, "Real Fixed Investment.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = NGDP_Graph, "NGDP Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = RGDO_Graph, "RGDO Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = GDI_PCE, "GDI PCE.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = STAT_DISC_Graph, "Stat Disc.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = Personal_Income_Graph, "Personal Income.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = CIPI_Graph, "CIPI.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = Profits_Graph, "Corp Profits.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = MANUFACTURING_Graph, "Manufacturing Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = FIXED_INVESTMENT, "Fixed Investment.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = NGDP_Graph, "NGDP Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
#Fixed investment
FIXED_RESIDENTIAL <- fredr(series_id = "PRFIC1",observation_start = as.Date("2015-01-01"),realtime_start = NULL, realtime_end = NULL)
ggplot() + #indexed employment rate
geom_line(data = FIXED_RESIDENTIAL, aes(x=date, y = value/5.96, color = "Real Fixed Investment: Residential"), size = 1.25) +
#geom_line(data = FIXED_INDUSTRIAL, aes(x=date, y = value/2.42, color = "Real Fixed Investment: Industrial Equipment"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(80,125), breaks = c(85,90,95,100,105,110,115,120,125), expand = c(0,0)) +
ylab("Index, Jan 2019 = 100") +
ggtitle("Unfixed Problems") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data",subtitle = "Real Fixed Investment is Declining in Key Sectors") +
theme_apricitas + theme(legend.position = c(.70,.20)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2015-01-01")-(.1861*(today()-as.Date("2015-01-01"))), xmax = as.Date("2015-01-01")-(0.049*(today()-as.Date("2015-01-01"))), ymin = 80-(.3*45), ymax = 80) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
FIXED_INVESTMENT_Residential_Graph <- ggplot() + #indexed employment rate
geom_line(data = FIXED_RESIDENTIAL_2015, aes(x=date, y = value/5.96, color = "Real Fixed Investment: Residential"), size = 1.25) +
#geom_line(data = FIXED_INDUSTRIAL, aes(x=date, y = value/2.42, color = "Real Fixed Investment: Industrial Equipment"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(80,125), breaks = c(85,90,95,100,105,110,115,120,125), expand = c(0,0)) +
ylab("Index, Jan 2019 = 100") +
ggtitle("Unfixed Problems") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data",subtitle = "Real Fixed Investment is Declining in Key Sectors") +
theme_apricitas + theme(legend.position = c(.70,.20)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2015-01-01")-(.1861*(today()-as.Date("2015-01-01"))), xmax = as.Date("2015-01-01")-(0.049*(today()-as.Date("2015-01-01"))), ymin = 80-(.3*45), ymax = 80) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
FIXED_INVESTMENT_Residential_Graph <- ggplot() + #indexed employment rate
geom_line(data = FIXED_RESIDENTIAL_2015, aes(x=date, y = value/5.96, color = "Real Fixed Investment: Residential"), size = 1.25) +
#geom_line(data = FIXED_INDUSTRIAL, aes(x=date, y = value/2.42, color = "Real Fixed Investment: Industrial Equipment"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(80,125), breaks = c(85,90,95,100,105,110,115,120,125), expand = c(0,0)) +
ylab("Index, Jan 2019 = 100") +
ggtitle("Unfixed Problems") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data",subtitle = "Real Fixed Investment is Declining in Key Sectors") +
theme_apricitas + theme(legend.position = c(.70,.20)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2015-01-01")-(.1861*(today()-as.Date("2015-01-01"))), xmax = as.Date("2015-01-01")-(0.049*(today()-as.Date("2015-01-01"))), ymin = 80-(.3*45), ymax = 80) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = FIXED_INVESTMENT_Residential_Graph, "Fixed Residential.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
FIXED_INVESTMENT_Residential_Graph <- ggplot() + #indexed employment rate
geom_line(data = FIXED_RESIDENTIAL, aes(x=date, y = value/5.96, color = "Real Fixed Investment: Residential"), size = 1.25) +
#geom_line(data = FIXED_INDUSTRIAL, aes(x=date, y = value/2.42, color = "Real Fixed Investment: Industrial Equipment"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(80,125), breaks = c(85,90,95,100,105,110,115,120,125), expand = c(0,0)) +
ylab("Index, Jan 2019 = 100") +
ggtitle("Unfixed Problems") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data",subtitle = "Real Fixed Investment is Declining in Key Sectors") +
theme_apricitas + theme(legend.position = c(.70,.20)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2015-01-01")-(.1861*(today()-as.Date("2015-01-01"))), xmax = as.Date("2015-01-01")-(0.049*(today()-as.Date("2015-01-01"))), ymin = 80-(.3*45), ymax = 80) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = FIXED_INVESTMENT_Residential_Graph, "Fixed Residential.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
GDPMonthlyContribBEA_Graph <- ggplot(RGDP_Contributions, aes(fill=name, x=date, y=value/100)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
#geom_point(data = RGDPQuarterly, aes(x=date, y = value/100), size = 3, fill ="black", color = "black", shape = 23) +
#guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.04,0.09), breaks = c(-0.04,-.02,0,0.02,0.04,0.06,0.08), expand = c(0,0)) +
ylab("Contributions, Percent, Seasonally Adjusted at Annual Rates") +
ggtitle("Contributions to GDP Growth") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "") +
theme_apricitas + theme(legend.position = c(.67,.85)) +
#scale_color_manual(name = NULL, values = "black") +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","black"), breaks = c("Consumption","Investment","Net Exports","Government")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-09-01")-(.1861*(today()-as.Date("2020-09-01"))), xmax = as.Date("2020-09-01")-(0.049*(today()-as.Date("2020-09-01"))), ymin = -0.04-(.3*.13), ymax = -0.04) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = GDPMonthlyContribBEA_Graph, "Monthly GDP.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggsave(dpi = "retina",plot = GDPMonthlyContribBEA_Graph, "GDP Contributions BEA.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggplot(ContribQuarterlyBind, aes(fill=series_id, x=date, y=value/100)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
geom_point(data = RGDPQuarterly, aes(x=date, y = value/100), size = 3, fill ="black", color = "black", shape = 23) +
guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.04,0.09), breaks = c(-0.04,-.02,0,0.02,0.04,0.06,0.08), expand = c(0,0)) +
ylab("Contributions, Percent, Seasonally Adjusted at Annual Rates") +
ggtitle("What's Got You Down?") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "A Drop In Consumption Growth and Negative Investment/Inventories Growth Pulled GDP Down") +
theme_apricitas + theme(legend.position = c(.92,.85)) +
scale_color_manual(name = NULL, values = "black") +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","black"), breaks = c("Consumption","Investment","Net Exports","Government")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-09-01")-(.1861*(today()-as.Date("2020-09-01"))), xmax = as.Date("2020-09-01")-(0.049*(today()-as.Date("2020-09-01"))), ymin = -0.04-(.3*.13), ymax = -0.04) +
coord_cartesian(clip = "off")
ggplot(ContribQuarterlyBind, aes(fill=series_id, x=date, y=value/100)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
geom_point(data = RGDPQuarterly, aes(x=date, y = value/100), size = 3, fill ="black", color = "black", shape = 23) +
guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.04,0.09), breaks = c(-0.04,-.02,0,0.02,0.04,0.06,0.08), expand = c(0,0)) +
ylab("Contributions, Percent, Seasonally Adjusted at Annual Rates") +
ggtitle("What's Got You Down?") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "A Drop In Consumption Growth and Negative Investment/Inventories Growth Pulled GDP Down") +
theme_apricitas + theme(legend.position = c(.62,.85)) +
scale_color_manual(name = NULL, values = "black") +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","black"), breaks = c("Consumption","Investment","Net Exports","Government")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-09-01")-(.1861*(today()-as.Date("2020-09-01"))), xmax = as.Date("2020-09-01")-(0.049*(today()-as.Date("2020-09-01"))), ymin = -0.04-(.3*.13), ymax = -0.04) +
coord_cartesian(clip = "off")
ggplot(ContribQuarterlyBind, aes(fill=series_id, x=date, y=value/100)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
geom_point(data = RGDPQuarterly, aes(x=date, y = value/100), size = 3, fill ="black", color = "black", shape = 23) +
guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.04,0.09), breaks = c(-0.04,-.02,0,0.02,0.04,0.06,0.08), expand = c(0,0)) +
ylab("Contributions, Percent, Seasonally Adjusted at Annual Rates") +
ggtitle("What's Got You Down?") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "A Drop In Consumption Growth and Negative Investment/Inventories Growth Pulled GDP Down") +
theme_apricitas + theme(legend.position = c(.72,.85)) +
scale_color_manual(name = NULL, values = "black") +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","black"), breaks = c("Consumption","Investment","Net Exports","Government")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-09-01")-(.1861*(today()-as.Date("2020-09-01"))), xmax = as.Date("2020-09-01")-(0.049*(today()-as.Date("2020-09-01"))), ymin = -0.04-(.3*.13), ymax = -0.04) +
coord_cartesian(clip = "off")
ggplot(ContribQuarterlyBind, aes(fill=series_id, x=date, y=value/100)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
geom_point(data = RGDPQuarterly, aes(x=date, y = value/100), size = 3, fill ="black", color = "black", shape = 23) +
guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.04,0.09), breaks = c(-0.04,-.02,0,0.02,0.04,0.06,0.08), expand = c(0,0)) +
ylab("Contributions, Percent, Seasonally Adjusted at Annual Rates") +
ggtitle("What's Got You Down?") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "A Drop In Consumption Growth and Negative Investment/Inventories Growth Pulled GDP Down") +
theme_apricitas + theme(legend.position = c(.67,.85)) +
scale_color_manual(name = NULL, values = "black") +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","black"), breaks = c("Consumption","Investment","Net Exports","Government")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-09-01")-(.1861*(today()-as.Date("2020-09-01"))), xmax = as.Date("2020-09-01")-(0.049*(today()-as.Date("2020-09-01"))), ymin = -0.04-(.3*.13), ymax = -0.04) +
coord_cartesian(clip = "off")
ggplot(ContribQuarterlyBind, aes(fill=series_id, x=date, y=value/100)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
geom_point(data = RGDPQuarterly, aes(x=date, y = value/100), size = 3, fill ="black", color = "black", shape = 23) +
guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.04,0.09), breaks = c(-0.04,-.02,0,0.02,0.04,0.06,0.08), expand = c(0,0)) +
ylab("Contributions, Percent, Seasonally Adjusted at Annual Rates") +
ggtitle("Contributions to US GDP") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "A Drop In Consumption Growth and Negative Investment/Inventories Growth Pulled GDP Down") +
theme_apricitas + theme(legend.position = c(.67,.85)) +
scale_color_manual(name = NULL, values = "black") +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","black"), breaks = c("Consumption","Investment","Net Exports","Government")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-09-01")-(.1861*(today()-as.Date("2020-09-01"))), xmax = as.Date("2020-09-01")-(0.049*(today()-as.Date("2020-09-01"))), ymin = -0.04-(.3*.13), ymax = -0.04) +
coord_cartesian(clip = "off")
GDPQuarterlyContrib_Graph <- ggplot(ContribQuarterlyBind, aes(fill=series_id, x=date, y=value/100)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
geom_point(data = RGDPQuarterly, aes(x=date, y = value/100), size = 3, fill ="black", color = "black", shape = 23) +
guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.04,0.09), breaks = c(-0.04,-.02,0,0.02,0.04,0.06,0.08), expand = c(0,0)) +
ylab("Contributions, Percent, Seasonally Adjusted at Annual Rates") +
ggtitle("Contributions to US GDP") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "A Drop In Consumption Growth and Negative Investment/Inventories Growth Pulled GDP Down") +
theme_apricitas + theme(legend.position = c(.67,.85)) +
scale_color_manual(name = NULL, values = "black") +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","black"), breaks = c("Consumption","Investment","Net Exports","Government")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-09-01")-(.1861*(today()-as.Date("2020-09-01"))), xmax = as.Date("2020-09-01")-(0.049*(today()-as.Date("2020-09-01"))), ymin = -0.04-(.3*.13), ymax = -0.04) +
coord_cartesian(clip = "off")
ggplot(ContribQuarterlyBind, aes(fill=series_id, x=date, y=value/100)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
geom_point(data = RGDPQuarterly, aes(x=date, y = value/100), size = 3, fill ="black", color = "black", shape = 23) +
guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.04,0.09), breaks = c(-0.04,-.02,0,0.02,0.04,0.06,0.08), expand = c(0,0)) +
ylab("Contributions, Percent, Seasonally Adjusted at Annual Rates") +
ggtitle("Contributions to US GDP") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "All Major Components Contributed to Positive GDP in Q4") +
theme_apricitas + theme(legend.position = c(.67,.85)) +
scale_color_manual(name = NULL, values = "black") +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","black"), breaks = c("Consumption","Investment","Net Exports","Government")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-09-01")-(.1861*(today()-as.Date("2020-09-01"))), xmax = as.Date("2020-09-01")-(0.049*(today()-as.Date("2020-09-01"))), ymin = -0.04-(.3*.13), ymax = -0.04) +
coord_cartesian(clip = "off")
GDPQuarterlyContrib_Graph <- ggplot(ContribQuarterlyBind, aes(fill=series_id, x=date, y=value/100)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
geom_point(data = RGDPQuarterly, aes(x=date, y = value/100), size = 3, fill ="black", color = "black", shape = 23) +
guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.04,0.09), breaks = c(-0.04,-.02,0,0.02,0.04,0.06,0.08), expand = c(0,0)) +
ylab("Contributions, Percent, Seasonally Adjusted at Annual Rates") +
ggtitle("Contributions to US GDP") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "All Major Components Contributed to Positive GDP in Q4") +
theme_apricitas + theme(legend.position = c(.67,.85)) +
scale_color_manual(name = NULL, values = "black") +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","black"), breaks = c("Consumption","Investment","Net Exports","Government")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-09-01")-(.1861*(today()-as.Date("2020-09-01"))), xmax = as.Date("2020-09-01")-(0.049*(today()-as.Date("2020-09-01"))), ymin = -0.04-(.3*.13), ymax = -0.04) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = GDPQuarterlyContrib_Graph, "Quarterly GDP.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
DSPI <- fredr(series_id = "DSPI",observation_start = as.Date("2018-01-01")) #downloading Disposable Personal Income data
pacman::p_load(bea.R,janitor,cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
DSPI <- fredr(series_id = "DSPI",observation_start = as.Date("2018-01-01")) #downloading Disposable Personal Income data
POUT <- fredr(series_id = "A068RC1",observation_start = as.Date("2018-01-01")) #downloading Personal Outlays
DSPITrend <- data.frame(date = c(seq(as.Date("2020-01-01"), tail(DSPI$date, n=1), "months")), trend = 16622.8*1.003274^(0:(length(seq(from = as.Date("2020-01-01"), to = tail(DSPI$date, n=1), by = 'month')) - 1))) #trend variable is just compounding income/outlays monthly at a 4% annual rate
POUTTrend <- data.frame(date = c(seq(as.Date("2020-01-01"), tail(POUT$date, n=1), "months")), trend = 15328.8*1.003274^(0:(length(seq(from = as.Date("2020-01-01"), to = tail(POUT$date, n=1), by = 'month')) - 1)))
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), size = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Personal Income Remains on Trend, But Spending is Above Trend as Excess Savings Decrease") +
theme_apricitas + theme(legend.position = c(.30,.80)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*1600), xmax = as.Date("2018-01-01")-(0.049*1600), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
theme_apricitas <- theme_ft_rc() + #setting the "apricitas" custom theme that I use for my blog
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
ggplot() +
geom_line(data = NGDP, aes(x=date, y = value/1000, color = "Nominal Gross Domestic Product"), size = 1.25) +
geom_line(data = NGDPTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Annual NGDP Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T"),limits = c(19,26), breaks = c(19,20,21,22,23,24,25,26), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("Off Trend") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Nominal Gross Domestic Product is Significantly Above its Pre-Pandemic Trend") +
theme_apricitas + theme(legend.position = c(.30,.7)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#FFE98F","#00A99D","#00A99D"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 19-(.3*7), ymax = 19) +
coord_cartesian(clip = "off")
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), size = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Personal Income Remains on Trend, But Spending is Above Trend as Excess Savings Decrease") +
theme_apricitas + theme(legend.position = c(.30,.80)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*1600), xmax = as.Date("2018-01-01")-(0.049*1600), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), size = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Personal Income Remains on Trend, But Spending is Above Trend as Excess Savings Decrease") +
theme_apricitas + theme(legend.position = c(.30,.80)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), size = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Personal Income Remains on Trend, But Spending is Above Trend as Excess Savings Decrease") +
theme_apricitas + theme(legend.position = c(.32,.85)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), size = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Personal Income Remains on Trend, But Spending is Above Trend as Excess Savings Decrease") +
theme_apricitas + theme(legend.position = c(.31,.85)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
Personal_Income_Graph <- ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), size = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Personal Income Remains on Trend, But Spending is Above Trend as Excess Savings Decrease") +
theme_apricitas + theme(legend.position = c(.31,.85)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
setwd("~/GitHub/Apricitas/Repeat Use Charts/GDP Releases/Q4 2022")
ggsave(dpi = "retina",plot = Personal_Income_Graph, "Personal Income.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), size = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Personal Income Remains on Trend, But Spending is Above Trend as Excess Savings Decrease") +
theme_apricitas + theme(legend.position = c(.31,.85)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), linewidth = 0.75, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), linewidth = 0.75, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Personal Income Remains on Trend, But Spending is Above Trend as Excess Savings Decrease") +
theme_apricitas + theme(legend.position = c(.31,.85)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), lwd = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), linewidth = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), linewidth = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Personal Income Remains on Trend, But Spending is Above Trend as Excess Savings Decrease") +
theme_apricitas + theme(legend.position = c(.31,.85)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), linewidth = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
Personal_Income_Graph <- ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = DSPI, aes(x=date, y = value/1000, color = "Personal Income"), size = 1.25) +
geom_line(data = POUT, aes(x=date, y = value/1000 , color = "Personal Outlays"), size = 1.25) +
geom_line(data = DSPITrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Income Growth Trend"), linewidth = 1.25, linetype = "dashed") +
geom_line(data = POUTTrend, aes(x=date, y = trend/1000, color = "Pre-Covid 4% Personal Outlays Growth Trend"), linewidth = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(12.5,22.5), breaks = c(12.5,15,17.5,20,22.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("The Bottom Line") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Personal Income Remains on Trend, But Spending is Above Trend as Excess Savings Decrease") +
theme_apricitas + theme(legend.position = c(.31,.85)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2,2), linewidth = c(1.25,1.25,.75,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 12.5-(.3*10), ymax = 12.5) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = Personal_Income_Graph, "Personal Income.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
DSPImerge <- merge(DSPI, DSPITrend, by = "date")
POUTmerge <- merge(POUT, POUTTrend, by = "date")
CUMSUMDSPImerge <- DSPImerge
CUMSUMPOUTmerge <- POUTmerge
CUMSUMDSPImerge$value <- cumsum(CUMSUMDSPImerge$value/12)
CUMSUMDSPImerge$trend <- cumsum(CUMSUMDSPImerge$trend/12)
CUMSUMPOUTmerge$value <- cumsum(CUMSUMPOUTmerge$value/12)
CUMSUMPOUTmerge$trend <- cumsum(CUMSUMPOUTmerge$trend/12)
CUMSUMDSPImerge$total <- (CUMSUMDSPImerge$value-CUMSUMDSPImerge$trend)-(CUMSUMPOUTmerge$value-CUMSUMPOUTmerge$trend) #graphing total excess savings
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = CUMSUMDSPImerge, aes(x = date, y = total/1000, color = "Estimated 'Excess' Savings"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(0,2.75), breaks = c(0.5,1,1.5,2,2.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("Breaking the (Piggy) Bank") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Excess Savings are down Nearly $500 Billion as Americans Spend More Money") +
theme_apricitas + theme(legend.position = c(.25,.90)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = 0-(.3*2.75), ymax = 0) +
coord_cartesian(clip = "off")
ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = CUMSUMDSPImerge, aes(x = date, y = total/1000, color = "Estimated 'Excess' Savings"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(0,2.75), breaks = c(0.5,1,1.5,2,2.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("Breaking the (Piggy) Bank") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Excess Savings are down Nearly $500 Billion as Americans Spend More Money") +
theme_apricitas + theme(legend.position = c(.20,.90)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = 0-(.3*2.75), ymax = 0) +
coord_cartesian(clip = "off")
Total_Excess_Savings_Graph <- ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = CUMSUMDSPImerge, aes(x = date, y = total/1000, color = "Estimated 'Excess' Savings"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(0,2.75), breaks = c(0.5,1,1.5,2,2.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("Breaking the (Piggy) Bank") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Excess Savings are down Nearly $500 Billion as Americans Spend More Money") +
theme_apricitas + theme(legend.position = c(.20,.90)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = 0-(.3*2.75), ymax = 0) +
coord_cartesian(clip = "off")
Total_Excess_Savings_Graph <- ggplot() + #plotting personal income and outlays against income and outlays 4% pre-covid trendlines
geom_line(data = CUMSUMDSPImerge, aes(x = date, y = total/1000, color = "Estimated 'Excess' Savings"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::dollar_format(suffix = "T", accuracy = 0.5),limits = c(0,2.75), breaks = c(0.5,1,1.5,2,2.5), expand = c(0,0)) +
ylab("Trillions of Dollars") +
ggtitle("Breaking the (Piggy) Bank") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Excess Savings are down Nearly $750 Billion as Americans Spend More Money") +
theme_apricitas + theme(legend.position = c(.20,.90)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#00A99D","#EE6055","#FFE98F","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = 0-(.3*2.75), ymax = 0) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = Cumulative_Savings_Graph, "Cumulative Savings.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = Total_Excess_Savings_Graph, "Total Excess Savings.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
