geom_line(data=RatiosMSA2000, aes(x=date_semi,y=NYC,color= "New York City"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Houston,color= "Houston"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Chicago,color= "Chicago"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Seattle,color= "Seattle"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Atlanta,color= "Atlanta"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_yearly,y=Boston,color= "Boston"), size = 1.25) +
ggtitle("Ratio of Shelter Price Indexes to the CPI All Items Less Shelter Price Index") +
labs(caption = "Graph created by @JosephPolitano using BLS data") +
#labs(caption = "testas") +
#ggmain("Ratio of Shelter Price Indexes to CPI All-Items Less Shelter Price Index")
scale_x_date(limits = Start.endMSA2000) +
ylim(0.8,1.75) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Ratio") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
ggplot() +
geom_line(data=Ratios, aes(x=DATE,y=CUSR0000SAH1_CUUR0000SA0L2,color= "Ratio of 'Shelter' and 'All Items Less Shelter' Price Indexes"), size = 1.25) +
scale_x_date(limits = Start.end) +
#ylim(-3,4) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Ratio") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
Start.end <- c(as.Date("2000-01-01"),as.Date("2021-04-01"))
ggplot() +
geom_line(data=Ratios, aes(x=DATE,y=CUSR0000SAH1_CUUR0000SA0L2,color= "Ratio of 'Shelter' and 'All Items Less Shelter' Price Indexes"), size = 1.25) +
scale_x_date(limits = Start.end) +
#ylim(-3,4) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Ratio") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
ggplot() +
geom_line(data=RatiosMSA2000, aes(x=date_monthly,y=SF,color= "San Francisco"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_monthly,y=LA,color= "Los Angeles"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_monthly,y=USA,color= "USA"), size = 2) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=NYC,color= "New York City"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Houston,color= "Houston"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Chicago,color= "Chicago"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Seattle,color= "Seattle"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Atlanta,color= "Atlanta"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_yearly,y=Boston,color= "Boston"), size = 1.25) +
ggtitle("Ratio of Shelter Price Indexes to the CPI All Items Less Shelter Price Index") +
labs(caption = "Graph created by @JosephPolitano using BLS data") +
#labs(caption = "testas") +
#ggmain("Ratio of Shelter Price Indexes to CPI All-Items Less Shelter Price Index")
scale_x_date(limits = Start.endMSA2000) +
ylim(0.8,1.75) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Ratio") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
ggplot() +
geom_line(data=RatiosMSA2000, aes(x=date_monthly,y=SF,color= "San Francisco"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_monthly,y=LA,color= "Los Angeles"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_monthly,y=USA,color= "USA"), size = 2) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=NYC,color= "New York City"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Houston,color= "Houston"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Chicago,color= "Chicago"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Seattle,color= "Seattle"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_semi,y=Atlanta,color= "Atlanta"), size = 1.25) +
geom_line(data=RatiosMSA2000, aes(x=date_yearly,y=Boston,color= "Boston"), size = 1.25) +
ggtitle("Ratio of Shelter Price Indexes to the CPI All Items Less Shelter Price Index") +
labs(caption = "Graph created by @JosephPolitano using BLS data") +
#labs(caption = "testas") +
#ggmain("Ratio of Shelter Price Indexes to CPI All-Items Less Shelter Price Index")
scale_x_date(limits = Start.endMSA2000) +
#ylim(0.8,1.75) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Ratio") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
ggplot() +
geom_line(data=HousingPerCapita, aes(x=observation_date,y=Housing_Starts_Per_Capita,color= "Monthly Privately-Owned Housing Starts Per Capita"), size = 1.25) +
#scale_x_date(limits = Start.end) +
ylim(0,0.0125) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Housing Starts Per Capita") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
ggplot() +
geom_line(data=HousingPerCapita, aes(x=observation_date,y=Housing_Starts_Per_Capita,color= "Monthly Privately-Owned Housing Starts Per Capita"), size = 1.25) +
#scale_x_date(limits = Start.end) +
ylim(0,0.0125) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Housing Starts Per Capita") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
ggplot() +
geom_line(data=Ratios, aes(x=DATE,y=CUSR0000SAH1_CUUR0000SA0L2,color= "Ratio of 'Shelter' and 'All Items Less Shelter' Price Indexes"), size = 1.25) +
scale_x_date(limits = Start.end) +
#ylim(-3,4) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Ratio") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
ggplot() +
geom_line(data=Ratios, aes(x=DATE,y=CUSR0000SAH1_CUUR0000SA0L2,color= "Ratio of 'Shelter' and 'All Items Less Shelter' Price Indexes"), size = 1.25) +
scale_x_date(limits = Start.end) +
ylim(1,1.4) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Ratio") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
ggplot() +
geom_line(data=Ratios, aes(x=DATE,y=CUSR0000SAH1_CUUR0000SA0L2,color= "Ratio of 'Shelter' and 'All Items Less Shelter' Price Indexes"), size = 1.25) +
#scale_x_date(limits = Start.end) +
#ylim(-3,4) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Ratio") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
ggplot() +
geom_line(data=Ratios, aes(x=DATE,y=CUSR0000SAH1_CUUR0000SA0L2,color= "Ratio of 'Shelter' and 'All Items Less Shelter' Price Indexes"), size = 1.25) +
scale_x_date(limits = Start.end) +
ylim(1,1.4) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Ratio") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
Vacancy_Rate <- import("C:/Users/Joseph/Documents/SubStack/Fix Inflation - With Housing/Rental and Homeowner Vacancy Rate.csv")
View(Vacancy_Rate)
Vacancy_Rate$Date <-as.Date(Vacancy_Rate$Date,"%m/%d/%Y")#forcing date on the CPI Data using lubridate
Vacancy_Rate$DATE <-as.Date(Vacancy_Rate$DATE,"%m/%d/%Y")#forcing date on the CPI Data using lubridate
Vacancy_Rate$DATE <-as.IDate(Vacancy_Rate$DATE)#forcing Idate on the CPI data
ggplot() +
geom_line(data=Vacancy_Rate, aes(x=Date,y=RHVRUSQ156N,color= "Homeowner Vacancy Rate"), size = 1.25) +
geom_line(data=Vacancy_Rate, aes(x=Date,y=RRVRUSQ156N,color= "Rental Vacancy Rate"), size = 1.25) +
#scale_x_date(limits = Start.end) +
#ylim(0,0.0125) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Vacancy Rate (%)") +
ggtitle("US Residential Vacancy Rates") +
labs(caption = "Graph created by @JosephPolitano using CPS data") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist()+
scale_color_economist(name="")
ggplot() +
geom_line(data=Vacancy_Rate, aes(x=Date,y=RHVRUSQ156N,color= "Homeowner Vacancy Rate"), size = 1.25) +
geom_line(data=Vacancy_Rate, aes(x=Date,y=RRVRUSQ156N,color= "Rental Vacancy Rate"), size = 1.25) +
#scale_x_date(limits = Start.end) +
#ylim(0,0.0125) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Vacancy Rate (%)") +
ggtitle("US Residential Vacancy Rates") +
labs(caption = "Graph created by @JosephPolitano using CPS data") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist() +
scale_color_economist(name="")
ggplot() +
geom_line(data=Vacancy_Rate, aes(x=DATE,y=RHVRUSQ156N,color= "Homeowner Vacancy Rate"), size = 1.25) +
geom_line(data=Vacancy_Rate, aes(x=DATE,y=RRVRUSQ156N,color= "Rental Vacancy Rate"), size = 1.25) +
#scale_x_date(limits = Start.end) +
#ylim(0,0.0125) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Vacancy Rate (%)") +
ggtitle("US Residential Vacancy Rates") +
labs(caption = "Graph created by @JosephPolitano using CPS data") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist() +
scale_color_economist(name="")
ggplot() +
geom_line(data=Vacancy_Rate, aes(x=DATE,y=RHVRUSQ156N,color= "Rental Vacancy Rate"), size = 1.25) +
geom_line(data=Vacancy_Rate, aes(x=DATE,y=RRVRUSQ156N,color= "Homeowner Vacancy Rate"), size = 1.25) +
#scale_x_date(limits = Start.end) +
#ylim(0,0.0125) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Vacancy Rate (%)") +
ggtitle("US Residential Vacancy Rates") +
labs(caption = "Graph created by @JosephPolitano using CPS data") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist() +
scale_color_economist(name="")
ggplot() +
geom_line(data=Vacancy_Rate, aes(x=DATE,y=RHVRUSQ156N,color= "Homeowner Vacancy Rate"), size = 1.25) +
geom_line(data=Vacancy_Rate, aes(x=DATE,y=RRVRUSQ156N,color= "Rental Vacancy Rate"), size = 1.25) +
#scale_x_date(limits = Start.end) +
#ylim(0,0.0125) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Vacancy Rate (%)") +
ggtitle("US Residential Vacancy Rates") +
labs(caption = "Graph created by @JosephPolitano using CPS data") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist() +
scale_color_economist(name="")
ggplot() +
geom_line(data=Vacancy_Rate, aes(x=DATE,y=RHVRUSQ156N,color= "Homeowner Vacancy Rate"), size = 1.25) +
geom_line(data=Vacancy_Rate, aes(x=DATE,y=RRVRUSQ156N,color= "Rental Vacancy Rate"), size = 1.25) +
#scale_x_date(limits = Start.end) +
ylim(0,12) +
#xlim(2000,2021) +
xlab("Date") +
ylab("Vacancy Rate (%)") +
ggtitle("US Residential Vacancy Rates") +
labs(caption = "Graph created by @JosephPolitano using CPS data") +
#scale_color_manual(name="", values = c("clrscheme" = "red","black")) +
#scale_fill_manual(name="", values=c("clrscheme"= "red","black")) +
theme_economist() +
scale_color_economist(name="")
View(CPIHousing)
#calculating yearly housing and shelter inflation
CPIHousing$CPIHousingINF <- CPIHousing$Housing/lag(CPIHousing$Housing)-1
CPIHousing$CPIShelterINF <- CPIHousing$Shelter/lag(CPIHousing$Shelter)-1
#Calculating housing and shelter inflation's contribution to overall inflation
CPIHousing$CPIHousingCONT <- CPIHousing$CPIHousingINF*(CPIHousing$`Housing Weights`/100)
CPIHousing$CPIShelterCONT <- CPIHousing$CPIShelterINF*(CPIHousing$`Shelter Weights`/100)
#creating an index for Housing and Shelter's Contribution to Inflation
CPIHousing$CPIHousingCONTIndex <- CPIHousing$CPIHousingCONT*lag(CPIHousing$CPI)
CPIHousing$CPIHousingCONTIndex[1] <- 100 #have to set the first number to 100
CPIHousing$CPIHousingCONTIndex <- cumsum(CPIHousing$CPIHousingCONTIndex) #cumsum adds together all the previous numbers
CPIHousing$CPIShelterCONTIndex <- CPIHousing$CPIShelterCONT*lag(CPIHousing$CPI)
CPIHousing$CPIShelterCONTIndex[1] <- 100
CPIHousing$CPIShelterCONTIndex <- cumsum(CPIHousing$CPIShelterCONTIndex)
View(CPIHousing)
ip <- as.data.frame(installed.packages())
head(ip)
# if you use MRO, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("MRO", ip$LibPath))
# we don't want to remove base or recommended packages either\
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
# determine the library where the packages are installed
path.lib <- unique(ip$LibPath)
# create a vector with all the names of the packages you want to remove
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
# remove the packages
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
pacman::p_load(magick,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
# Clear console
cat("\014")  # ctrl+L
rm(list = ls())
dev.off()
FOMC_Projections_UNRATE <- fredr(series_id = c("UNRATECTMLR")) #downloading outstanding student loan balance from FRED
UNRATE <- fredr(series_id = c("UNRATE")) #downloading net wealth
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 11, color = "white")) #using the FT theme and white axis lines for a "theme_apricitas"
pacman::p_load(magick,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 11, color = "white")) #using the FT theme and white axis lines for a "theme_apricitas"
library(hrbrthemes)
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 11, color = "white")) #using the FT theme and white axis lines for a "theme_apricitas"
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 11, color = "white")) #using the FT theme and white axis lines for a "theme_apricitas"
apricitas_logo <- GET("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png")
pic <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png")
pacman::p_load(magick,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
pic <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png")
pic <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png")
apricitas_logo <- readPNG(apricitas_logo$content)
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 11, color = "white")) #using the FT theme and white axis lines for a "theme_apricitas"
pic <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png")
library(hrbrthemes)
pacman::p_load(magick,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 11, color = "white")) #using the FT theme and white axis lines for a "theme_apricitas"
library(hrbrthemes)
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 11, color = "white")) #using the FT theme and white axis lines for a "theme_apricitas"
?theme_ft_rc()
#The Fault in R-Stars
library(pacman)
pacman::p_load(magick,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
dev.off()
# Clear console
cat("\014")  # ctrl+L
rm(list = ls())
dev.off()
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 95-(.3*17), ymax = 95) +
coord_cartesian(clip = "off")
CPIUSEDCARS <- fredr(series_id = "CUSR0000SETA02",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Consumer Price Index (CPI) Used Cars and Trucks data
CPINEWCARS <- fredr(series_id = "CUSR0000SETA01",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading CPI New Vehicles data
CPIRENT <- fredr(series_id = "CUSR0000SEHA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading CPI Rent of Primary Residence data in percent change format
CPIOERENT <- fredr(series_id = "CUSR0000SEHC",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading CPI Owners' Equivalent Rent of Residences data in percent change format
CPI <- fredr(series_id = "CPIAUCSL",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading CPI All Items data
PCE <- fredr(series_id = "PCE",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Personal Consumption Expenditures (PCE) data
PCEGD <- fredr(series_id = "DGDSRC1",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading PCE Goods data
PCESV <- fredr(series_id = "PCES",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading PCE Services data
PPIIDC <- fredr(series_id = "PPIIDC",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Producer Price Index: Industrial Commodities data
NFC_PROFIT <- fredr(series_id = "A463RD3Q052SBEA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Profit per unit of Gross Value Added for Nonfinancial Corporations data
NFC_PRICE <- fredr(series_id = "A455RD3Q052SBEA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Price per unit of Gross Value Added for Nonfinancial Corporations data
ECISERV <- fredr(series_id = "CIS201S000000000I",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading Employment Cost Index (ECI) services data
ECIGOOD <- fredr(series_id = "CIU201G000000000I",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading ECI goods data
PCESERV <- fredr(series_id = "DSERRG3M086SBEA",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading PCE services
PCEGOOD <- fredr(series_id = "DGDSRG3M086SBEA",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading PCE goods
DSPI <- fredr(series_id = "DSPI",observation_start = as.Date("2018-01-01")) #downloading Disposable Personal Income data
POUT <- fredr(series_id = "A068RC1",observation_start = as.Date("2018-01-01")) #downloading Personal Outlays
#manually adding 2% CPI growth trend for later chart on above-trend CPI
CPI$CPITREND <- c(seq(0,0,length.out = 13), 258.824*1.001652^(0:20)) #the sequence of zeroes is for the part of the chart where the trendline is excluded, and the second sequence is compounding CPI monthly at a 2% annual rate
#formatting data for the later chart on wage-price spirals
Wage_Price_Merge <- do.call("rbind", list(ECISERV,ECIGOOD,PCESERV,PCEGOOD)) #binding ECI and PCE data for service and goods sector
#renaming series IDs in the merged data set to plain language explanations
Wage_Price_Merge$series_id <- gsub("CIS201S000000000I","Services Compensation (ECI)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("CIU201G000000000I","Goods Compensation (ECI)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("DSERRG3M086SBEA","Services Prices (PCE)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("DGDSRG3M086SBEA","Goods Prices (PCE)",Wage_Price_Merge$series_id)
#formatting data for the later chart on corporate profit margins
PROFIT_MARGIN <- merge(NFC_PROFIT, NFC_PRICE, by = "date") #merging price and profit margin data per unit of gross value added for nonfinancial corporations
PROFIT_MARGIN <- subset(PROFIT_MARGIN, select = c("date","value.x","value.y")) #deleting unneeded variables from the data frame
colnames(PROFIT_MARGIN) <- c("date","NFC_PROFIT","NFC_PRICE") #renaming vairables for ease of use
#manually adding 4% personal income and outlays growth trend line for later chart on personal income and outlays
DSPITrend <- data.frame(date = c(seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")), trend = 16622.8*1.003274^(0:21)) #trend variable is just compounding income/outlays monthly at a 4% annual rate
POUTTrend <- data.frame(date = c(seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")), trend = 15328.8*1.003274^(0:21))
theme_apricitas <- theme_ft_rc() + #setting the "apricitas" custom theme that I use for my blog
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
CPI_Graph <- ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 95-(.3*17), ymax = 95) +
coord_cartesian(clip = "off")
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 95-(.3*17), ymax = 95) +
coord_cartesian(clip = "off")
library(pacman)
pacman::p_load(magick,cowplot,knitr,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
fredr_set_key("96786b5abc3a13aa838f928bf645a572") #setting FRED API key for data download. Normally I would set this in the R environment, but I am manually setting it here for ease of use
#Downloading Data from FRED
CPIUSEDCARS <- fredr(series_id = "CUSR0000SETA02",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Consumer Price Index (CPI) Used Cars and Trucks data
CPINEWCARS <- fredr(series_id = "CUSR0000SETA01",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading CPI New Vehicles data
CPIRENT <- fredr(series_id = "CUSR0000SEHA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading CPI Rent of Primary Residence data in percent change format
CPIOERENT <- fredr(series_id = "CUSR0000SEHC",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading CPI Owners' Equivalent Rent of Residences data in percent change format
CPI <- fredr(series_id = "CPIAUCSL",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading CPI All Items data
PCE <- fredr(series_id = "PCE",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Personal Consumption Expenditures (PCE) data
PCEGD <- fredr(series_id = "DGDSRC1",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading PCE Goods data
PCESV <- fredr(series_id = "PCES",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading PCE Services data
PPIIDC <- fredr(series_id = "PPIIDC",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Producer Price Index: Industrial Commodities data
NFC_PROFIT <- fredr(series_id = "A463RD3Q052SBEA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Profit per unit of Gross Value Added for Nonfinancial Corporations data
NFC_PRICE <- fredr(series_id = "A455RD3Q052SBEA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Price per unit of Gross Value Added for Nonfinancial Corporations data
ECISERV <- fredr(series_id = "CIS201S000000000I",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading Employment Cost Index (ECI) services data
ECIGOOD <- fredr(series_id = "CIU201G000000000I",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading ECI goods data
PCESERV <- fredr(series_id = "DSERRG3M086SBEA",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading PCE services
PCEGOOD <- fredr(series_id = "DGDSRG3M086SBEA",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading PCE goods
DSPI <- fredr(series_id = "DSPI",observation_start = as.Date("2018-01-01")) #downloading Disposable Personal Income data
POUT <- fredr(series_id = "A068RC1",observation_start = as.Date("2018-01-01")) #downloading Personal Outlays
#manually adding 2% CPI growth trend for later chart on above-trend CPI
CPI$CPITREND <- c(seq(0,0,length.out = 13), 258.824*1.001652^(0:20)) #the sequence of zeroes is for the part of the chart where the trendline is excluded, and the second sequence is compounding CPI monthly at a 2% annual rate
#formatting data for the later chart on wage-price spirals
Wage_Price_Merge <- do.call("rbind", list(ECISERV,ECIGOOD,PCESERV,PCEGOOD)) #binding ECI and PCE data for service and goods sector
#renaming series IDs in the merged data set to plain language explanations
Wage_Price_Merge$series_id <- gsub("CIS201S000000000I","Services Compensation (ECI)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("CIU201G000000000I","Goods Compensation (ECI)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("DSERRG3M086SBEA","Services Prices (PCE)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("DGDSRG3M086SBEA","Goods Prices (PCE)",Wage_Price_Merge$series_id)
#formatting data for the later chart on corporate profit margins
PROFIT_MARGIN <- merge(NFC_PROFIT, NFC_PRICE, by = "date") #merging price and profit margin data per unit of gross value added for nonfinancial corporations
PROFIT_MARGIN <- subset(PROFIT_MARGIN, select = c("date","value.x","value.y")) #deleting unneeded variables from the data frame
colnames(PROFIT_MARGIN) <- c("date","NFC_PROFIT","NFC_PRICE") #renaming vairables for ease of use
#manually adding 4% personal income and outlays growth trend line for later chart on personal income and outlays
DSPITrend <- data.frame(date = c(seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")), trend = 16622.8*1.003274^(0:21)) #trend variable is just compounding income/outlays monthly at a 4% annual rate
POUTTrend <- data.frame(date = c(seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")), trend = 15328.8*1.003274^(0:21))
theme_apricitas <- theme_ft_rc() + #setting the "apricitas" custom theme that I use for my blog
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 95-(.3*17), ymax = 95) +
coord_cartesian(clip = "off")
ggplot() + #plotting Personal Consumption Expenditures as well as PCE Goods/Services
geom_line(data=PCE, aes(x=date,y= (value/141.04) ,color= "Total Personal Consumption Expenditures"), size = 1.25) +
geom_line(data=PCEGD, aes(x=date,y= (value/43.46) ,color= "Goods Personal Consumption Expenditures"), size = 1.25) +
geom_line(data=PCESV, aes(x=date,y= (value/97.73) ,color= "Services Personal Consumption Expenditures"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(83,135), breaks = c(90,100,110,120,130), expand = c(0,0)) +
ylab("Personal Consumption Expenditures: January 2019 = 100") +
ggtitle("Good to Go?") +
labs(caption = "Graph created by @JosephPolitano using BEA data",subtitle = "Spending on Goods Shot Up after the Pandemic Hit, but is Now Stalling") +
theme_apricitas + theme(legend.position = c(.40,.80)) +
scale_color_manual(name= "January 2019 = 100",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 83-(.3*47), ymax = 83) +
coord_cartesian(clip = "off")
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 100-(.3*110), ymax = 100) +
coord_cartesian(clip = "off")
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 100-(.3*10), ymax = 100) +
coord_cartesian(clip = "off")
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 100-(.3*10), ymax = 100) +
coord_cartesian(clip = "off")
setwd("~/GitHub/Apricitas/Repeat Use Charts/CPI Releases")
#Saving png images of all graphs
ggsave(dpi = "retina",plot = CPI_New_Used_Car_Vehicles_Graph, "CPI CARS.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
CPI_Graph <- ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% CPI Trend"), size = 1.25, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(limits = c(100,110), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "CPI is Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "January 2019 = 100",breaks = c("CPI","2% CPI Trend"),values = c("#FFE98F","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,2), lwd = c(1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 100-(.3*10), ymax = 100) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = CPI_Graph, "CPI.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
