Black_Epop <- rbind(Black_Epop1,Black_Epop2) %>% mutate(period = gsub("M","",period)) %>% mutate(date = as.Date(as.yearmon(paste(year, period), "%Y %m")))
White_Epop1 <- bls_api("LNU02300063", startyear = 1994, endyear = 2013, Sys.getenv("BLS_KEY"))
White_Epop2 <- bls_api("LNU02300063", startyear = 2014, endyear = 2022, Sys.getenv("BLS_KEY")) %>% select(-latest)
White_Epop <- rbind(White_Epop1,White_Epop2) %>% mutate(period = gsub("M","",period)) %>% mutate(date = as.Date(as.yearmon(paste(year, period), "%Y %m")))
Black_White_Epop <- rbind(Black_Epop %>% mutate(race = "Black"),White_Epop %>% mutate(race = "White")) %>%
select(value,date,race) %>%
pivot_wider(names_from = race, values_from = value) %>%
mutate(gap = White-Black)
EPOP_L_NSA=EPOP_L_NSA[order(nrow(EPOP_L_NSA):1),]
MULTIPLE_JOBHOLDERS <- fredr(series_id = "LNS12026619",observation_start = as.Date("2018-01-01")) #downloading Multiple Jobholders data
SELF_EMPLOYED <- fredr(series_id = "LNS12027714",observation_start = as.Date("2018-01-01")) #downloading Self Employed data
AGRICULTURAL <- fredr(series_id = "LNS12034560",observation_start = as.Date("2018-01-01")) #downloading Agricultural Workers
PAYEMS <- fredr(series_id = "PAYEMS",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Nonfarm Payrolls
ELEV <- fredr(series_id = "CE16OV",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Employment Levels
CPSADJ <- bls_api("LNS16000000", startyear = 2019) %>% #headline cpiadj
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
MULTIPLE_32022 <- fredr(series_id = "LNS12026619",observation_start = as.Date("2022-04-01"), units = "chg")%>%
select(value,date) %>%
mutate(CUMSUM = cumsum(value))%>%
mutate(source = "Multiple Jobholders")
SELF_32022 <- fredr(series_id = "LNS12027714",observation_start = as.Date("2022-04-01"), units = "chg")%>%
select(value,date) %>%
mutate(CUMSUM = cumsum(value))%>%
mutate(source = "Unincorporated Self Employed")
AGRICULTURAL_32022 <- fredr(series_id = "LNS12034560",observation_start = as.Date("2022-04-01"), units = "chg")%>%
select(value,date) %>%
mutate(CUMSUM = cumsum(value))%>%
mutate(source = "Employment Level, Agricultural and Related Industries")
PAYEMS_32022 <- fredr(series_id = "PAYEMS",observation_start = as.Date("2022-04-01"), units = "chg")%>%
select(value,date) %>%
mutate(CUMSUM = cumsum(value))%>%
mutate(source = "Nonfarm Payrolls")
ELEV_32022 <- fredr(series_id = "CE16OV",observation_start = as.Date("2022-04-01"), units = "chg") %>%
select(value,date) %>%
mutate(CUMSUM = cumsum(value))%>%
mutate(source = "Employment Level")
#
CPSADJ_32022 <- subset(CPSADJ, date > as.Date("2022-02-01")) %>%
mutate(value = rev(value)) %>%
mutate(date = rev(date)) %>%
select(value,date) %>%
mutate(value = c(value-lag(.$value))) %>%
subset(date > as.Date("2022-03-01")) %>%
mutate(CUMSUM = cumsum(value)) %>%
mutate(source = "Household Survey Adjusted to Nonfarm Payrolls Concepts")
#Merging nonfarm payrolls, cps adjusted to nonfarm payrolls, and employment levels growth since March 2022
PAYEMS_ELEV_CPSADJ_32022 <- rbind(PAYEMS_32022,ELEV_32022,CPSADJ_32022) %>%
subset(date > as.Date(today()-70))
DISCREPANCY_MEGA_MERGE <- rbind(PAYEMS_ELEV_CPSADJ_32022,MULTIPLE_32022,SELF_32022,AGRICULTURAL_32022) %>%
subset(date > as.Date(today()-70)) %>%
select(date,CUMSUM,source) %>%
pivot_wider(names_from=c(source), values_from = CUMSUM) %>%
mutate(`Agriculture and Related Industries` = -`Employment Level, Agricultural and Related Industries`) %>%
mutate(`Remaining Discrepancy`=`Nonfarm Payrolls`-`Household Survey Adjusted to Nonfarm Payrolls Concepts`) %>%
mutate(`Other Concept Differences` = + `Household Survey Adjusted to Nonfarm Payrolls Concepts` - (`Employment Level` + `Multiple Jobholders`- `Unincorporated Self Employed` - `Employment Level, Agricultural and Related Industries`)) %>%
mutate(`Unincorporated Self Employed` = -`Unincorporated Self Employed`)%>%
select(-`Household Survey Adjusted to Nonfarm Payrolls Concepts`,-`Nonfarm Payrolls`,-`Employment Level`,-`Employment Level, Agricultural and Related Industries`) %>%
pivot_longer(cols = c(`Multiple Jobholders`:`Other Concept Differences`)) %>%
mutate(factor = as.numeric(c("1","1","1","1","1","2","2","2","2","2"))) %>%
mutate(name = factor(name,levels = c("Remaining Discrepancy","Other Concept Differences","Unincorporated Self Employed","Multiple Jobholders","Agriculture and Related Industries")))
PAYEMS_ELEV_CPSADJ_32022_Graph <- ggplot(data = PAYEMS_ELEV_CPSADJ_32022, aes(x = date, y = CUMSUM/1000, fill = source)) + #plotting permanent and temporary job losers
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = position_dodge(), color = NA) +
xlab("Date") +
ylab("Growth Since March 2022") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 0.5), breaks = c(0,.5,1,1.5,2), limits = c(-0.2,2.1), expand = c(0,0)) +
ggtitle("Growth Since March 2022") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Different Sources Give Wildly Different Stories of the Labor Market Since March") +
theme_apricitas + theme(legend.position = c(.40,.90),axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-07-01")-(.1861*(today()-as.Date("2022-07-01"))), xmax = as.Date("2022-07-01")-(0.049*(today()-as.Date("2022-07-01"))), ymin = -0.2-(.3*2.3), ymax = -0.2) +
coord_cartesian(clip = "off")
TOTAL_DISCREPANCY_32022_Graph <- ggplot(data = DISCREPANCY_MEGA_MERGE, aes(x = factor, y = value/1000, fill = name)) + #plotting permanent and temporary job losers
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_col(stat = "identity", position = "stack", color = NA, width = 0.5) +
xlab("Date") +
ylab("Contribution to Gap") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 0.5), breaks = c(0,.5,1,1.5,2), limits = c(-0.2,2.1), expand = c(0,0)) +
scale_x_continuous(limits = c(-0.5,2.25)) +
ggtitle("Breaking Down the Gap") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Gap Between Payrolls and Household Employment is Shrinking-as is the Discrepancy") +
theme_apricitas + theme(legend.position = c(.23,.60), axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= NULL,values = c("#FFE98F","#9A348E","#EE6055","#00A99D","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-07-01")-(.1861*(today()-as.Date("2022-07-01"))), xmax = as.Date("2022-07-01")-(0.049*(today()-as.Date("2022-07-01"))), ymin = -0.2-(.3*2.3), ymax = -0.2) +
coord_cartesian(clip = "off")
MULTIPLE_JOBHOLDERS_Graph <- ggplot() + #plotting permanent and temporary job losers
geom_line(data=MULTIPLE_JOBHOLDERS, aes(x=date,y= value/1000,color= "Multiple Jobholders"), size = 1.25)+
xlab("Date") +
ylab("Millions of People") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(5,6,7,8,9,10), limits = c(5,9), expand = c(0,0)) +
ggtitle("Doubling Up") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Multiple-Jobholding is Up After Dropping Precipitously at the Start of COVID") +
theme_apricitas + theme(legend.position = c(.70,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 5-(.3*4), ymax = 5) +
coord_cartesian(clip = "off")
SELF_EMPLOYED_Graph <- ggplot() + #plotting permanent and temporary job losers
geom_line(data=SELF_EMPLOYED, aes(x=date,y= value/1000,color= "Unincorporated Self Employed"), size = 1.25)+
xlab("Date") +
ylab("Millions of People") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(8,9,10), limits = c(8,10.5), expand = c(0,0)) +
ggtitle("Freelance Flops") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Self-Employment is Falling After Spiking at the Beginning of COVID") +
theme_apricitas + theme(legend.position = c(.30,.89)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 8-(.3*2.5), ymax = 8) +
coord_cartesian(clip = "off")
AGRICULTURAL_Graph <- ggplot() + #plotting permanent and temporary job losers
geom_line(data=AGRICULTURAL, aes(x=date,y= value/1000,color= "Employment Level, Agricultural and Related Industries"), size = 1.25)+
xlab("Date") +
ylab("Millions of People") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 0.1), breaks = c(2,2.2,2.4,2.6,2.8,3), limits = c(2,2.6), expand = c(0,0)) +
ggtitle("Tending the Farm") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Agricultural Employment is Holding Approximately Steady") +
theme_apricitas + theme(legend.position = c(.65,.94)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 2-(.3*0.6), ymax = 2) +
coord_cartesian(clip = "off")
EMPLOYMENT_Graph <- ggplot() + #CPS with NFP adjusted concepts
geom_line(data = PAYEMS, aes(x=date, y = value/1000, color = "Nonfarm Payrolls"), size = 1.25) +
geom_line(data = CPSADJ, aes(x=date, y = value/1000, color = "Household Survey Adjusted to Nonfarm Payrolls Concepts"), size = 1.25) +
annotate(geom = "vline", x = as.Date("2022-03-01"), xintercept = as.Date("2022-03-01"), color = "white", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "March 2022", x = as.Date("2021-12-01"), y = 135, color ="white", size = 4) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(suffix = "M"),limits = c(120,160), breaks = c(120,130,140,150,160), expand = c(0,0)) +
ylab("Payrolls/Employees, Millions") +
ggtitle("Labor Market Mystery Hour") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "The Gap Persists Even When Household Survey Data is Adjusted to Payrolls Concepts") +
theme_apricitas + theme(legend.position = c(.45,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 120-(.3*40), ymax = 120) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
EMPLOYMENT_INDEX_Graph <- ggplot() + #indexed employment rate
geom_line(data = PAYEMS, aes(x=date, y = value/1521.28, color = "Nonfarm Payrolls (Establishment Survey)"), size = 1.25) +
geom_line(data = ELEV, aes(x=date, y = value/1586.53, color = "Employment Level (Household Survey)"), size = 1.25) +
annotate(geom = "vline", x = as.Date("2022-03-01"), xintercept = as.Date("2022-03-01"), color = "white", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "March 2022", x = as.Date("2021-12-01"), y = 90, color ="white", size = 4) +
xlab("Date") +
scale_y_continuous(limits = c(82,105), breaks = c(85,90,95,100,105), expand = c(0,0)) +
ylab("Index, Jan 2020 = 100") +
ggtitle("Labor Market Mystery Hour") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "The Establishment Survey Shows Positive Growth, but the Household Survey Shows a Stall") +
theme_apricitas + theme(legend.position = c(.50,.90)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#00A99D")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 82-(.3*23), ymax = 82) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = MULTIPLE_JOBHOLDERS_Graph, "Multiple Jobholders.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = SELF_EMPLOYED_Graph, "Self Employed.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = AGRICULTURAL_Graph, "Agricultural.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = EMPLOYMENT_Graph, "Employment.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = EMPLOYMENT_INDEX_Graph, "Employment Indexed.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = PAYEMS_ELEV_CPSADJ_32022_Graph, "Payems Elev CPSADJ.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
ggsave(dpi = "retina",plot = TOTAL_DISCREPANCY_32022_Graph, "Total Discrepancy.png", type = "cairo-png") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
PAYEMS <- fredr(series_id = "PAYEMS",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Nonfarm Payrolls
ELEV <- fredr(series_id = "CE16OV",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Employment Levels
CPSADJ <- bls_api("LNS16000000", startyear = 2019) %>% #headline cpSadj
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
DISCOURAGED <- bls_api("LNS15026645", startyear = 2019) %>% #discouraged workers
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
MARGINALLYATTACHED <- bls_api("LNS15026642", startyear = 2019) %>% #discouraged workers
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
WAREHOUSE <- fredr(series_id = "CES4349300001",observation_start = as.Date("2017-01-01"),realtime_start = NULL, realtime_end = NULL)
EPop <- fredr(series_id = "LNS12300060",observation_start = as.Date("1990-01-01"),realtime_start = NULL, realtime_end = NULL) #prime age epop data
#note: this section is only for when FRED does not update, and the dates must be changed each month
#EPopBLS <- bls_api("LNS12300060", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY")) #pulling most recent data from BLS API for EPOP
#EPop[nrow(EPop) + 1,] = list(as.Date("2021-12-01"),"X", EPopBLS$value[1], as.Date("2021-12-01"),as.Date("2021-10-01")) #adding new row with most recent data
LAH <- fredr(series_id = "USLAH",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Leisure and Hospitality Data
U1RATE <- fredr(series_id = "U1RATE",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
LGOVED <- fredr(series_id = "CES9093161101",observation_start = as.Date("2019-10-01"),realtime_start = NULL, realtime_end = NULL) #Local Government Education Data
PARTTIME <- fredr(series_id = "LNS12032194",observation_start = as.Date("2000-01-01"),realtime_start = NULL, realtime_end = NULL) #Part Time For Economic Reasons Level
TRNSPT <- fredr(series_id = "CES4300000001",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Transportation and Warehousing, All Employees
FOODSERV <- fredr(series_id = "CES7072000001",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Accomodation and Food Service, All Employees
NURSING <- fredr(series_id = "CES6562310001",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Accomodation and Food Service, All Employees
FOOD_EMP <- fredr(series_id = "CES7072200001",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Food Service and Drinking, All Employees
FOOD_SALES <- fredr(series_id = "MRTSSM722USS",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Retail Sales: Food Service and Drinking
ARTS <- fredr(series_id = "CES7071000001",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Arts,Entertainment, and Recreation, All Employees
COURIERS <- fredr(series_id = "CES4349200001",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Couriers and Messengers, All Employees
PWD <- fredr(series_id = "LNU02374597",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Couriers and Messengers, All Employees
PerformingArts <- fredr(series_id = "CES7071100001",observation_start = as.Date("2018-01-01"),realtime_start = NULL, realtime_end = NULL) #Couriers and Messengers, All Employees
MotionPictures <- fredr(series_id = "CES5051200001",observation_start = as.Date("2018-01-01"),realtime_start = NULL, realtime_end = NULL) #Couriers and Messengers, All Employees
LessThanHS <- fredr(series_id = "LNS14027659",observation_start = as.Date("1992-01-01"),realtime_start = NULL, realtime_end = NULL) #Couriers and Messengers, All Employees
UNRATEWhite <- fredr(series_id = "LNS14000003",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
UNRATEBlack <- fredr(series_id = "LNS14000006",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
UNRATEHispanic <- fredr(series_id = "LNS14000009",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
UNRATEAsian <- fredr(series_id = "LNU04032183",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
UNRATETeens <- fredr(series_id = "LNS14000012",observation_start = as.Date("1945-01-01"),realtime_start = NULL, realtime_end = NULL)
Total_Quits <- fredr(series_id = c("JTSQUL"), observation_start = as.Date("2019-01-01")) #downloading quits data
Total_Quits18 <- fredr(series_id = c("JTSQUL"), observation_start = as.Date("2018-01-01")) #downloading quits data
UNLEVEL <- fredr(series_id = c("UNEMPLOY"), observation_start = as.Date("2019-01-01")) #unemployment data
NILFWJN <- fredr(series_id = c("NILFWJN"), observation_start = as.Date("2019-01-01")) #NILF want jobs now
NILFWJN_2002 <- fredr(series_id = c("NILFWJN"), observation_start = as.Date("2002-01-01")) #NILF want jobs now
#taking prime age epop for men and women.
EPOP_MALE_1990 <- bls_api("LNS12300061", startyear = 1990) %>%
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
EPOP_MALE_2000 <- bls_api("LNS12300061", startyear = 2000) %>%
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
EPOP_MALE_2010 <- bls_api("LNS12300061", startyear = 2010) %>%
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
EPOP_MALE_2020 <- bls_api("LNS12300061", startyear = 2020) %>%
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(-latest)
EPOP_MALE <- rbind(EPOP_MALE_1990,EPOP_MALE_2000,EPOP_MALE_2010,EPOP_MALE_2020)
EPOP_FEMALE_1990 <- bls_api("LNS12300062", startyear = 1990) %>%
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
EPOP_FEMALE_2000 <- bls_api("LNS12300062", startyear = 2000) %>%
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
EPOP_FEMALE_2010 <- bls_api("LNS12300062", startyear = 2010) %>%
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
EPOP_FEMALE_2020 <- bls_api("LNS12300062", startyear = 2020) %>%
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
select(-latest)
EPOP_FEMALE <- rbind(EPOP_FEMALE_1990,EPOP_FEMALE_2000,EPOP_FEMALE_2010,EPOP_FEMALE_2020)
#Flows data
UNEMPLOYEMPLOY <- fredr(series_id = c("LNU07100000"), observation_start = as.Date("2000-01-01")) #unemployment flows to employment
NILFEMPLOY <- fredr(series_id = c("LNU07200000"), observation_start = as.Date("2000-01-01")) #NILF to employment
MARGINALEMPLOY <- fredr(series_id = c("LNU07300000"), observation_start = as.Date("2000-01-01")) #marginal flows to employment
Flows_to_Employment <- rbind(UNEMPLOYEMPLOY,NILFEMPLOY,MARGINALEMPLOY)
Flows_to_Employment <- merge(UNEMPLOYEMPLOY,NILFEMPLOY, by = "date") %>%
merge(MARGINALEMPLOY, by = "date")
Flows_to_Employment <- subset(Flows_to_Employment, select = c("date","value.x","value.y","value"))
colnames(Flows_to_Employment) <- c("date","Unemployment","Not in Labor Force","Marginal")
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
UNRATE <- fredr(series_id = c("UNRATE"), observation_start = as.Date("1950-01-01")) #unemployment rate
PERMJOBLOSERS <- fredr(series_id = c("LNS13026638"), observation_start = as.Date("2000-01-01")) #permanent job losers
LAYOFFJOBLOSERS <- fredr(series_id = c("LNS13023653"), observation_start = as.Date("2000-01-01")) #temporary job losers
Black_White_Employment_Graph <- ggplot() + #plotting black-white unemployment graph
geom_line(data=Black_White_Epop, aes(x=date,y= gap/100,color= "Black-White Prime Age (25-54) Employment Gap"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = .5),limits = c(0,.125),breaks = c(0,0.025,0.05,0.075,0.1,0.125), expand = c(0,0)) +
ggtitle("A Stronger Labor Market") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Black Employment Gap is at a Record Low") +
theme_apricitas + theme(legend.position = c(.35,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1994-01-01")-(.1861*10410), xmax = as.Date("1994-01-01")-(0.049*10410), ymin = 0-(.3*.125), ymax = 0) +
coord_cartesian(clip = "off")
Black_White_Epop <- ggplot() + #plotting black-white unemployment graph
geom_line(data=Black_White_Epop, aes(x=date,y= Black/100,color= "Black"), size = 1.25)+
geom_line(data=Black_White_Epop, aes(x=date,y= White/100,color= "White"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(.64,.85),breaks = c(.65,.70,.75,.80,.85), expand = c(0,0)) +
ggtitle("A Stronger Labor Market") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Black Employment Gap is at a Record Low") +
theme_apricitas + theme(legend.position = c(.77,.85)) +
scale_color_manual(name= "Prime Age (25-54) Employment Population Ratio",breaks = c("White","Black"),values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1994-01-01")-(.1861*10410), xmax = as.Date("1994-01-01")-(0.049*10410), ymin = .64-(.3*.21), ymax = .64) +
coord_cartesian(clip = "off")
Male_Female_Epop <- ggplot() + #plotting black-white unemployment graph
geom_line(data=EPOP_FEMALE, aes(x=date,y= value/100,color= "Women"), size = 1.25)+
geom_line(data=EPOP_MALE, aes(x=date,y= value/100,color= "Men"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(.63,.90),breaks = c(.65,.70,.75,.80,.85,.90), expand = c(0,0)) +
ggtitle("A Stronger Labor Market") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Gender Employment Gap is Near a Record Low") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= "Prime Age (25-54) Employment Population Ratio",breaks = c("Women","Men"),values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1990-01-01")-(.1861*(today()-as.Date("1990-01-01"))), xmax = as.Date("1990-01-01")-(0.049*(today()-as.Date("1990-01-01"))), ymin = .63-(.3*.27), ymax = .63) +
coord_cartesian(clip = "off")
PERM_TEMP_JOBLOSS_Graph <- ggplot() + #plotting permanent and temporary job losers
geom_line(data=PERMJOBLOSERS, aes(x=date,y= value/1000,color= "Permanent Job Losers"), size = 1.25)+
geom_line(data=LAYOFFJOBLOSERS, aes(x=date,y= value/1000,color= "Job Losers on Layoff"), size = 1.25)+
xlab("Date") +
ylab("Millions of People") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(0,5,10,15,20), limits = c(0,20), expand = c(0,0)) +
ggtitle("Rapid Rebound") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Policymakers Helped End a 2001-Size Jump in Permanent Job Losses") +
theme_apricitas + theme(legend.position = c(.70,.87)) +
scale_color_manual(name= "Unemployment Level",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*8158), xmax = as.Date("2000-01-01")-(0.049*8158), ymin = 0-(.3*20), ymax = 0) +
coord_cartesian(clip = "off")
UNRATE_Graph <- ggplot() + #plotting u1 unemployment rate
geom_line(data=UNRATE, aes(x=date,y= value/100,color= "Unemployment Rate"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(0,.15),breaks = c(0,0.05,0.1,0.15), expand = c(0,0)) +
ggtitle("Back in Business") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Unemployment Rate is Near Historic Lows") +
theme_apricitas + theme(legend.position = c(.65,.85)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1950-01-01")-(.1861*26420), xmax = as.Date("1950-01-01")-(0.049*26420), ymin = 0-(.3*.15), ymax = 0) +
coord_cartesian(clip = "off")
Flows_to_Employment_Graph <- ggplot() + #plotting u1 unemployment rate
geom_line(data=Flows_to_Employment, aes(x=date,y= Unemployment/(Unemployment +`Not in Labor Force` + Marginal),color= "Unemployment"), size = 1.25)+
geom_line(data=Flows_to_Employment, aes(x=date,y= `Not in Labor Force`/(Unemployment +`Not in Labor Force` + Marginal),color= "Not in Labor Force"), size = 1.25)+
geom_line(data=Flows_to_Employment, aes(x=date,y= Marginal/(Unemployment +`Not in Labor Force` + Marginal),color= "Marginal"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(0,1), expand = c(0,0)) +
ggtitle("Workers in Waiting") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Vast Majority of New Workers Come from Outside the Labor Force, not Unemployment") +
theme_apricitas + theme(legend.position = c(.65,.85)) +
scale_color_manual(name= "Share of Flows Into Employment From:",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9"), breaks = c("Not in Labor Force","Unemployment","Marginal")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*8158), xmax = as.Date("2000-01-01")-(0.049*8158), ymin = 0-(.3*1), ymax = 0) +
coord_cartesian(clip = "off")
NILFUnemploy_Graph <- ggplot() + #plotting total quits
geom_line(data=UNLEVEL, aes(x=date,y= value/1000,color= "Unemployed"), size = 1.25)+
geom_line(data=NILFWJN, aes(x=date,y= value/1000,color= "Not in Labor Force, Want a Job Now"), size = 1.25)+
xlab("Date") +
ylab("Millions of People") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(0,5,10,15,20,25), limits = c(0,25), expand = c(0,0)) +
ggtitle("Workers in Waiting") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "About as Many People are Not in the Labor Force but Want a Job as are Unemployed") +
theme_apricitas + theme(legend.position = c(.70,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9"), breaks = c("Unemployed","Not in Labor Force, Want a Job Now")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 0-(.3*25), ymax = 0) +
coord_cartesian(clip = "off")
NILF_Graph <- ggplot() + #plotting total quits
geom_line(data=NILFWJN_2002, aes(x=date,y= value/1000,color= "Not in Labor Force, Want a Job Now"), size = 1.25)+
xlab("Date") +
ylab("Millions of People") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(0,2,4,6,8,10), limits = c(0,10), expand = c(0,0)) +
ggtitle("Workers in Waiting") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "About 1M More People Are Outside the Labor Force But Want A Job Now Than Pre-Pandemic") +
theme_apricitas + theme(legend.position = c(.60,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2002-01-01")-(.1861*(today()-as.Date("2002-01-01"))), xmax = as.Date("2002-01-01")-(0.049*(today()-as.Date("2002-01-01"))), ymin = 0-(.3*10), ymax = 0) +
coord_cartesian(clip = "off")
WAREHOUSE_Graph <- ggplot() + #plotting total quits
geom_line(data=WAREHOUSE, aes(x=date,y= value/1000,color= "All Employees, Warehousing and Storage"), size = 1.25)+
xlab("Date") +
ylab("Millions of People") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 0.5), breaks = c(0.5,1,1.5,2), limits = c(0.5,2), expand = c(0,0)) +
ggtitle("Total Fulfillment") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Warehousing Employment Growth Has Stalled This Year") +
theme_apricitas + theme(legend.position = c(.40,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*(today()-as.Date("2017-01-01"))), ymin = 0.5-(.3*1.5), ymax = 0.5) +
coord_cartesian(clip = "off")
MARGINAL_DISCOURAGED_GRAPH <- ggplot() + #plotting total quits
geom_line(data=MARGINALLYATTACHED, aes(x=date,y= value/1000,color= "NILF, Marginally Attached"), size = 1.25)+
geom_line(data=DISCOURAGED, aes(x=date,y= value/1000,color= "NILF, Marginally Attached, Discouraged Workers"), size = 1.25)+
xlab("Date") +
ylab("Millions of People") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(0,1,2,3), limits = c(0,3), expand = c(0,0)) +
ggtitle("Workers in Waiting") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Number of Discouraged and Marginally Attached Workers is Near Pre-Pandemic Levels") +
theme_apricitas + theme(legend.position = c(.60,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 0-(.3*3), ymax = 0) +
coord_cartesian(clip = "off")
Total_Quits_Graph <- ggplot() + #plotting total quits
geom_line(data=Total_Quits, aes(x=date,y= value/1000,color= "Quits, Total Nonfarm"), size = 1.25)+
xlab("Date") +
ylab("Millions of Employees") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(2,3,4,5), limits = c(2,5), expand = c(0,0)) +
ggtitle("The Great Reshuffling") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "A Record Number of Americans are Quitting Their Jobs") +
theme_apricitas + theme(legend.position = c(.65,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*960), xmax = as.Date("2019-01-01")-(0.049*960), ymin = 2-(.3*3), ymax = 2) +
coord_cartesian(clip = "off")
Total_Quits_Layoffs_Graph <- ggplot() + #plotting total quits and layoffs
geom_line(data=Total_Quits18, aes(x=date,y= value/1000,color= "Quits, Total Nonfarm"), size = 1.25)+
geom_line(data=Total_Layoffs, aes(x=date,y= value/1000,color= "Layoffs and Discharges, Total Nonfarm"), size = 1.25)+
annotate(geom = "text", label = "Note: Discontinuity at March 2020, When Layoffs hit 13M", x = as.Date("2019-03-01"), y = 1.525, color ="white", size = 4, alpha = 0.75) +
xlab("Date") +
ylab("Millions of Employees") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(0,1,2,3,4,5), limits = c(0,5), expand = c(0,0)) +
ggtitle("The Great Reshuffling") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Number of Quits is Coming Down From Record Highs") +
theme_apricitas + theme(legend.position = c(.30,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*1619), xmax = as.Date("2018-01-01")-(0.049*1619), ymin = 0-(.3*5), ymax = 0) +
coord_cartesian(clip = "off")
Race_Graph <- ggplot() + #plotting u1 unemployment rate
geom_line(data=UNRATEWhite, aes(x=date,y= value/100,color= "Unemployment Rate - White"), size = 1.25)+
geom_line(data=UNRATEBlack, aes(x=date,y= value/100,color= "Unemployment Rate - Black or African American"), size = 1.25)+
geom_line(data=UNRATEHispanic, aes(x=date,y= value/100,color= "Unemployment Rate - Hispanic or Latino"), size = 1.25)+
geom_line(data=UNRATEAsian, aes(x=date,y= value/100,color= "Unemployment Rate - Asian"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(0,0.22), expand = c(0,0)) +
ggtitle("The Unequal Labor Market Recovery") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Racial Unemployment Gap is Closing, but Remains High") +
theme_apricitas + theme(legend.position = c(.75,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9"), breaks = c("Unemployment Rate - White","Unemployment Rate - Asian","Unemployment Rate - Hispanic or Latino","Unemployment Rate - Black or African American")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1011), xmax = as.Date("2019-01-01")-(0.049*1011), ymin = 0-(.3*.22), ymax = 0) +
coord_cartesian(clip = "off")
Teens_Graph <- ggplot() + #plotting u1 unemployment rate
geom_line(data=UNRATETeens, aes(x=date,y= value/100,color= "Unemployment Rate - 16-19 Yrs"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(0,0.35), expand = c(0,0)) +
ggtitle("Back in Action") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Unemployment Rate for Teenagers is at its Lowest Level in Decades") +
theme_apricitas + theme(legend.position = c(.45,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1948-01-01")-(.1861*27060), xmax = as.Date("1948-01-01")-(0.049*27060), ymin = 0.0-(.3*0.35), ymax = 0.0) +
coord_cartesian(clip = "off")
LessThanHS_Graph <- ggplot() + #plotting u1 unemployment rate
geom_line(data=LessThanHS, aes(x=date,y= value/100,color= "Unemployment Rate - Less Than a High School Diploma, 25 Yrs. & Over"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(0,0.225), expand = c(0,0)) +
ggtitle("Back in Action") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Unemployment for Workers Without A High School Diploma is at Record Lows") +
theme_apricitas + theme(legend.position = c(.45,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1992-01-01")-(.1861*10989), xmax = as.Date("1992-01-01")-(0.049*10989), ymin = 0.0-(.3*0.225), ymax = 0.0) +
coord_cartesian(clip = "off")
OwnIllness_Graph <- ggplot() + #plotting the number of people out due to illnesses
geom_line(data=OwnIllnessNoWork, aes(x=date,y= value/1000,color= "Employed But Not At Work, Own Illness"), size = 1.25)+
geom_line(data=OwnIllnessPartTime, aes(x=date,y= value/1000,color= "Work Part-time, Usually Work Full Time, Own Illness"), size = 1.25)+
xlab("Date") +
ylab("Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), limits = c(0,4.5), expand = c(0,0)) +
ggtitle("Omicron and the Labor Market") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Millions Were Out Sick or Had Reduced Hours Due to Omicron") +
theme_apricitas + theme(legend.position = c(.42,.9)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*1295), xmax = as.Date("2018-01-01")-(0.049*1295), ymin = 0-(.3*4.5), ymax = 0) +
coord_cartesian(clip = "off")
Black_White_Employment_Graph <- ggplot() + #plotting black-white unemployment graph
geom_line(data=Black_White_Epop, aes(x=date,y= gap/100,color= "Black-White Prime Age (25-54) Employment Gap"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = .5),limits = c(0,.125),breaks = c(0,0.025,0.05,0.075,0.1,0.125), expand = c(0,0)) +
ggtitle("A Stronger Labor Market") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Black Employment Gap is at a Record Low") +
theme_apricitas + theme(legend.position = c(.35,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1994-01-01")-(.1861*10410), xmax = as.Date("1994-01-01")-(0.049*10410), ymin = 0-(.3*.125), ymax = 0) +
coord_cartesian(clip = "off")
Black_White_Employment_Graph <- ggplot() + #plotting black-white unemployment graph
geom_line(data=Black_White_Epop, aes(x=date,y= gap/100,color= "Black-White Prime Age (25-54) Employment Gap"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = .5),limits = c(0,.125),breaks = c(0,0.025,0.05,0.075,0.1,0.125), expand = c(0,0)) +
ggtitle("A Stronger Labor Market") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Black Employment Gap is at a Record Low") +
theme_apricitas + theme(legend.position = c(.35,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1994-01-01")-(.1861*10410), xmax = as.Date("1994-01-01")-(0.049*10410), ymin = 0-(.3*.125), ymax = 0) +
coord_cartesian(clip = "off")
Black_White_Employment_Graph <- ggplot() + #plotting black-white unemployment graph
geom_line(data=Black_White_Epop, aes(x=date,y= gap/100,color= "Black-White Prime Age (25-54) Employment Gap"), size = 1.25)+
xlab("Date") +
ylab("%") +
scale_y_continuous(labels = scales::percent_format(accuracy = .5),limits = c(0,.125),breaks = c(0,0.025,0.05,0.075,0.1,0.125), expand = c(0,0)) +
ggtitle("A Stronger Labor Market") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Black Employment Gap is at a Record Low") +
theme_apricitas + theme(legend.position = c(.35,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1994-01-01")-(.1861*10410), xmax = as.Date("1994-01-01")-(0.049*10410), ymin = 0-(.3*.125), ymax = 0) +
coord_cartesian(clip = "off")
OwnIllness_Graph <- ggplot() + #plotting the number of people out due to illnesses
geom_line(data=OwnIllnessNoWork, aes(x=date,y= value/1000,color= "Employed But Not At Work, Own Illness"), size = 1.25)+
geom_line(data=OwnIllnessPartTime, aes(x=date,y= value/1000,color= "Work Part-time, Usually Work Full Time, Own Illness"), size = 1.25)+
xlab("Date") +
ylab("Millions") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), limits = c(0,4.5), expand = c(0,0)) +
ggtitle("Omicron and the Labor Market") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Millions Were Out Sick or Had Reduced Hours Due to Omicron") +
theme_apricitas + theme(legend.position = c(.42,.9)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*1295), xmax = as.Date("2018-01-01")-(0.049*1295), ymin = 0-(.3*4.5), ymax = 0) +
coord_cartesian(clip = "off")
pacman::p_load(cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
library(blscrapeR)
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare=Childcare[order(nrow(Childcare):1),]
Childcare$date <- seq(as.Date("2018-01-01"), as.Date("2022-02-01"), "months")
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare=Childcare[order(nrow(Childcare):1),]
Childcare$date <- seq(as.Date("2018-01-01"), as.Date("2022-02-01"), "months")
OwnIllnessPartTime <- bls_api("LNU02028296", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
OwnIllnessPartTime=OwnIllnessPartTime[order(nrow(OwnIllnessNoWork):1),]
OwnIllnessPartTime <- bls_api("LNU02028296", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
OwnIllnessPartTime=OwnIllnessPartTime[order(nrow(OwnIllnessNoWork):1),]
pacman::p_load(cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
install.packages("cli")
install_github("keberwein/blscrapeR")
library(blscrapeR)
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare=Childcare[order(nrow(Childcare):1),]
Childcare$date <- seq(as.Date("2018-01-01"), as.Date("2022-02-01"), "months")
install.packages("cli")
pacman::p_load(cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
install.packages("cli")
install_github("keberwein/blscrapeR")
library(blscrapeR)
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare=Childcare[order(nrow(Childcare):1),]
Childcare$date <- seq(as.Date("2018-01-01"), as.Date("2022-02-01"), "months")
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare=Childcare[order(nrow(Childcare):1),]
Childcare$date <- seq(as.Date("2018-01-01"), as.Date("2022-02-01"), "months")
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare=Childcare[order(nrow(Childcare):1),]
Childcare$date <- seq(as.Date("2018-01-01"), as.Date("2022-02-01"), "months")
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare=Childcare[order(nrow(Childcare):1),]
Childcare$date <- seq(as.Date("2018-01-01"), as.Date("2022-02-01"), "months")
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare=Childcare[order(nrow(Childcare):1),]
Childcare$date <- seq(as.Date("2018-01-01"), as.Date("2022-02-01"), "months")
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
install_github("keberwein/blscrapeR")
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
library(blscrapeR)
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare=Childcare[order(nrow(Childcare):1),]
Childcare$date <- seq(as.Date("2018-01-01"), as.Date("2022-02-01"), "months")
Childcare <- bls_api("LNU02096055", startyear = 2018, endyear = 2022, Sys.getenv("BLS_KEY"))
Childcare=Childcare[order(nrow(Childcare):1),]
Childcare$date <- seq(as.Date("2018-01-01"), as.Date("2022-02-01"), "months")
