xlab("Date") +
#scale_y_continuous(labels = scales::number_format(accuracy = .2),limits = c(-10,10), expand = c(0,0), breaks = c(-0.6,-0.4,-0.2,0,0.2)) +
ylab("Balance") +
ggtitle("Germany's Slowdown") +
labs(caption = "Graph created by @JosephPolitano using Eurostat Data",subtitle = "German Employment Expectations Are Weak Even as Sectors Like Retail Trade Recover") +
theme_apricitas + theme(legend.position = c(.80,.20)) +
scale_color_manual(name= "Employment Expectations, Next 3M",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-01-01")-(.1861*(today()-as.Date("2022-01-01"))), xmax = as.Date("2022-01-01")-(0.049*(today()-as.Date("2022-01-01"))), ymin = -0.6-(.3*0.8), ymax = -0.6) +
coord_cartesian(clip = "off")
EMP_EXP_graph <- ggplot() + #plotting regular vs non-regular employment
geom_line(data=EMP_EXP, aes(x=time,y= `BS-CEME-BAL`,color="Construction"), size = 1.25) +
geom_line(data=EMP_EXP, aes(x=time,y= `BS-IEME-BAL`,color="Industry"), size = 1.25) +
geom_line(data=EMP_EXP, aes(x=time,y= `BS-REM-BAL`,color="Retail Trade"), size = 1.25) +
geom_line(data=EMP_EXP, aes(x=time,y= `BS-SEEM-BAL`,color="Services"), size = 1.25) +
annotate(geom = "hline",y = 0,yintercept = 0, size = 0.5,color = "white") +
xlab("Date") +
#scale_y_continuous(labels = scales::number_format(accuracy = .2),limits = c(-10,10), expand = c(0,0), breaks = c(-0.6,-0.4,-0.2,0,0.2)) +
ylab("Balance") +
ggtitle("Germany's Slowdown") +
labs(caption = "Graph created by @JosephPolitano using Eurostat Data",subtitle = "German Employment Expectations Are Weak Even as Sectors Like Retail Trade Recover") +
theme_apricitas + theme(legend.position = c(.80,.20)) +
scale_color_manual(name= "Employment Expectations, Next 3M",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-01-01")-(.1861*(today()-as.Date("2022-01-01"))), xmax = as.Date("2022-01-01")-(0.049*(today()-as.Date("2022-01-01"))), ymin = -0.6-(.3*0.8), ymax = -0.6) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = EMP_EXP_graph, "Emp Exp.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
FOREIGN_REPO_graph <-  ggplot(data = subset(FOREIGN_REPO, date > as.Date("2020-01-01")), aes(x = date, y = value/1000, fill = "Federal Reserve Foreign Official Repo Agreements")) + #plotting Deposits, Insured and Uninsured
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Billions of Dollars, Wednesday Level") +
scale_y_continuous(labels = scales::dollar_format(accuracy = 1, suffix = "B"), breaks = c(0,10,20,30,40,50,60,70), limits = c(0,70), expand = c(0,0)) +
ggtitle("Fed Foreign Lending") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "The Fed Lent $60B to Foreign and International Monetary Authorities After CS's Takeover") +
theme_apricitas + theme(legend.position = c(.4,.825)) +#, axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= NULL,values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = 0-(.3*70), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
setwd("~/GitHub/Apricitas/Silicon Valley Bank")
ggsave(dpi = "retina",plot = FOREIGN_REPO_graph, "Foreign Repo Graph.png", type = "cairo-png") #cairo gets rid of anti aliasing
FOREIGN_REPO <- read.csv("https://www.federalreserve.gov/datadownload/Output.aspx?rel=H41&series=6469d791421717c45c635898573f771f&lastobs=&from=01/01/2019&to=12/31/2023&filetype=csv&label=omit&layout=seriescolumn") %>%
.[-1,] %>%
`colnames<-`(c("date","value")) %>%
mutate(date = as.Date(date)) %>%
mutate_if(is.character, as.numeric)
ggplot(data = subset(FOREIGN_REPO, date > as.Date("2020-01-01")), aes(x = date, y = value/1000, fill = "Federal Reserve Foreign Official Repo Agreements")) + #plotting Deposits, Insured and Uninsured
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Billions of Dollars, Wednesday Level") +
scale_y_continuous(labels = scales::dollar_format(accuracy = 1, suffix = "B"), breaks = c(0,10,20,30,40,50,60,70), limits = c(0,70), expand = c(0,0)) +
ggtitle("Fed Foreign Lending") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "The Fed Lent $60B to Foreign and International Monetary Authorities After CS's Takeover") +
theme_apricitas + theme(legend.position = c(.4,.825)) +#, axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= NULL,values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = 0-(.3*70), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
FOREIGN_REPO_graph <-  ggplot(data = subset(FOREIGN_REPO, date > as.Date("2020-01-01")), aes(x = date, y = value/1000, fill = "Federal Reserve Foreign Official Repo Agreements")) + #plotting Deposits, Insured and Uninsured
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Billions of Dollars, Wednesday Level") +
scale_y_continuous(labels = scales::dollar_format(accuracy = 1, suffix = "B"), breaks = c(0,10,20,30,40,50,60,70), limits = c(0,70), expand = c(0,0)) +
ggtitle("Fed Foreign Lending") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "The Fed Lent $60B to Foreign and International Monetary Authorities After CS's Takeover") +
theme_apricitas + theme(legend.position = c(.4,.825)) +#, axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= NULL,values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-01-01")-(.1861*(today()-as.Date("2020-01-01"))), xmax = as.Date("2020-01-01")-(0.049*(today()-as.Date("2020-01-01"))), ymin = 0-(.3*70), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = FOREIGN_REPO_graph, "Foreign Repo Graph.png", type = "cairo-png") #cairo gets rid of anti aliasing
FED_EMERGENCY_LOANS <- read.csv("https://www.federalreserve.gov/datadownload/Output.aspx?rel=H41&series=a66e338ec176dd641c333de890fd7816&lastobs=100&from=&to=&filetype=csv&label=omit&layout=seriescolumn") %>%
.[-1,] %>%
`colnames<-`(c("date","Lending to FDIC Bridge Banks (SVB, Signature)","Bank Term Funding Program","Discount Window")) %>%
mutate(date = as.Date(date)) %>%
subset(date > as.Date("2023-01-01")) %>%
pivot_longer(cols = `Lending to FDIC Bridge Banks (SVB, Signature)`:`Discount Window`) %>%
mutate(value = as.numeric(value)) %>%
mutate(name = factor(name,levels = c("Bank Term Funding Program","Lending to FDIC Bridge Banks (SVB, Signature)","Discount Window")))
ggplot(data = FED_EMERGENCY_LOANS, aes(x = date, y = value/1000, fill = name)) + #plotting Deposits, Insured and Uninsured
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
#annotate("segment", y = 20, yend = 20, x = as.Date("2023-03-11"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 109, yend = 109, x = as.Date("2023-03-11"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 109, yend = 20, x = as.Date("2023-03-06"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 64.5, yend = 64.5, x = as.Date("2023-03-06"), xend = as.Date("2023-03-04"), color = "white", size = 1.25) +
#annotate("text", label = "First Republic", y = 104.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Discount Window", y = 84.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Borrowing Range", y = 64.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "(Based on Company", y = 44.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Press Release)", y = 24.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Billions of Dollars, Wednesday Level") +
scale_y_continuous(labels = scales::dollar_format(accuracy = 1, suffix = "B"), breaks = c(0,50,100,150,200,250,300,350), limits = c(0,350), expand = c(0,0)) +
ggtitle("Fed Emergency Lending") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "The Fed is Lending Billions to Banks After SVB's Failure") +
theme_apricitas + theme(legend.position = c(.4,.825)) +#, axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= "Selected Federal Reserve Loans",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Discount Window","Lending to FDIC Bridge Banks (SVB, Signature)","Bank Term Funding Program")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2023-01-04")-(.1861*(today()-as.Date("2023-01-04"))), xmax = as.Date("2023-01-04")-(0.049*(today()-as.Date("2023-01-04"))), ymin = 0-(.3*350), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot(data = FED_EMERGENCY_LOANS, aes(x = date, y = value/1000, fill = name)) + #plotting Deposits, Insured and Uninsured
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
#annotate("segment", y = 20, yend = 20, x = as.Date("2023-03-11"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 109, yend = 109, x = as.Date("2023-03-11"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 109, yend = 20, x = as.Date("2023-03-06"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 64.5, yend = 64.5, x = as.Date("2023-03-06"), xend = as.Date("2023-03-04"), color = "white", size = 1.25) +
#annotate("text", label = "First Republic", y = 104.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Discount Window", y = 84.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Borrowing Range", y = 64.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "(Based on Company", y = 44.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Press Release)", y = 24.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Billions of Dollars, Wednesday Level") +
scale_y_continuous(labels = scales::dollar_format(accuracy = 1, suffix = "B"), breaks = c(0,50,100,150,200,250,300,350), limits = c(0,350), expand = c(0,0)) +
ggtitle("Fed Emergency Lending") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "The Fed is Lending Billions to Banks After SVB's Failure") +
theme_apricitas + theme(legend.position = c(.3,.825)) +#, axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= "Selected Federal Reserve Loans",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Discount Window","Lending to FDIC Bridge Banks (SVB, Signature)","Bank Term Funding Program")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2023-01-04")-(.1861*(today()-as.Date("2023-01-04"))), xmax = as.Date("2023-01-04")-(0.049*(today()-as.Date("2023-01-04"))), ymin = 0-(.3*350), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot(data = FED_EMERGENCY_LOANS, aes(x = date, y = value/1000, fill = name)) + #plotting Deposits, Insured and Uninsured
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
#annotate("segment", y = 20, yend = 20, x = as.Date("2023-03-11"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 109, yend = 109, x = as.Date("2023-03-11"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 109, yend = 20, x = as.Date("2023-03-06"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 64.5, yend = 64.5, x = as.Date("2023-03-06"), xend = as.Date("2023-03-04"), color = "white", size = 1.25) +
#annotate("text", label = "First Republic", y = 104.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Discount Window", y = 84.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Borrowing Range", y = 64.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "(Based on Company", y = 44.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Press Release)", y = 24.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Billions of Dollars, Wednesday Level") +
scale_y_continuous(labels = scales::dollar_format(accuracy = 1, suffix = "B"), breaks = c(0,50,100,150,200,250,300,350), limits = c(0,350), expand = c(0,0)) +
ggtitle("Fed Emergency Lending") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "The Fed is Lending Billions to Banks After SVB's Failure") +
theme_apricitas + theme(legend.position = c(.35,.825)) +#, axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= "Selected Federal Reserve Loans",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Discount Window","Lending to FDIC Bridge Banks (SVB, Signature)","Bank Term Funding Program")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2023-01-04")-(.1861*(today()-as.Date("2023-01-04"))), xmax = as.Date("2023-01-04")-(0.049*(today()-as.Date("2023-01-04"))), ymin = 0-(.3*350), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
FED_EMERGENCY_LOANS_graph <- ggplot(data = FED_EMERGENCY_LOANS, aes(x = date, y = value/1000, fill = name)) + #plotting Deposits, Insured and Uninsured
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
#annotate("segment", y = 20, yend = 20, x = as.Date("2023-03-11"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 109, yend = 109, x = as.Date("2023-03-11"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 109, yend = 20, x = as.Date("2023-03-06"), xend = as.Date("2023-03-06"), color = "white", size = 1.25) +
#annotate("segment", y = 64.5, yend = 64.5, x = as.Date("2023-03-06"), xend = as.Date("2023-03-04"), color = "white", size = 1.25) +
#annotate("text", label = "First Republic", y = 104.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Discount Window", y = 84.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Borrowing Range", y = 64.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "(Based on Company", y = 44.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
#annotate("text", label = "Press Release)", y = 24.5, x = as.Date("2023-02-22"), color = "white", size = 5) +
geom_bar(stat = "identity", position = "stack", color = NA) +
xlab("Date") +
ylab("Billions of Dollars, Wednesday Level") +
scale_y_continuous(labels = scales::dollar_format(accuracy = 1, suffix = "B"), breaks = c(0,50,100,150,200,250,300,350), limits = c(0,350), expand = c(0,0)) +
ggtitle("Fed Emergency Lending") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "The Fed is Lending Billions to Banks After SVB's Failure") +
theme_apricitas + theme(legend.position = c(.35,.825)) +#, axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= "Selected Federal Reserve Loans",values = c("#FFE98F","#EE6055","#00A99D","#A7ACD9","#9A348E","#3083DC","#6A4C93"), breaks = c("Discount Window","Lending to FDIC Bridge Banks (SVB, Signature)","Bank Term Funding Program")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2023-01-04")-(.1861*(today()-as.Date("2023-01-04"))), xmax = as.Date("2023-01-04")-(0.049*(today()-as.Date("2023-01-04"))), ymin = 0-(.3*350), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = FED_EMERGENCY_LOANS_graph, "Fed Emergency Graph.png", type = "cairo-png") #cairo gets rid of anti aliasing
setwd("~/GitHub/Apricitas/Germany")
ggplot() + #plotting regular vs non-regular employment
geom_line(data=industry_nat_gas, aes(x=date,y= value/1000,color="Industry (Including Electricity Generation)"), size = 1.25) +
geom_line(data=household_nat_gas, aes(x=date,y= value/1000,color="Households and Non-Industrial Businesses"), size = 1.25) +
annotate(geom = "hline",y = 0,yintercept = 0, size = 0.5,color = "white") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = .2),limits = c(-0.6,0.2), expand = c(0,0), breaks = c(-0.6,-0.4,-0.2,0,0.2)) +
ylab("Deviation From 2018-2021 Average, TWh/Day") +
ggtitle("Germany and The Energy Crisis") +
labs(caption = "Graph created by @JosephPolitano using Bundesnetzagentur Data",subtitle = "Gas Consumption For German Industry and Households Has Fallen Amidst the Energy Crisis") +
theme_apricitas + theme(legend.position = c(.65,.875)) +
scale_color_manual(name= "German Gas Consumption, Deviation from 2018-2021 Average",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-01-01")-(.1861*(today()-as.Date("2022-01-01"))), xmax = as.Date("2022-01-01")-(0.049*(today()-as.Date("2022-01-01"))), ymin = -0.6-(.3*0.8), ymax = -0.6) +
coord_cartesian(clip = "off")
ggplot() + #plotting regular vs non-regular employment
geom_line(data=industry_nat_gas, aes(x=date,y= value/1000,color="Industry (Including Electricity Generation)"), size = 1.25) +
geom_line(data=household_nat_gas, aes(x=date,y= value/1000,color="Households and Non-Industrial Businesses"), size = 1.25) +
annotate(geom = "hline",y = 0,yintercept = 0, size = 0.5,color = "white") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = .2, suffix = "TWh"),limits = c(-0.6,0.2), expand = c(0,0), breaks = c(-0.6,-0.4,-0.2,0,0.2)) +
ylab("Deviation From 2018-2021 Average, TWh/Day") +
ggtitle("Germany and The Energy Crisis") +
labs(caption = "Graph created by @JosephPolitano using Bundesnetzagentur Data",subtitle = "Gas Consumption For German Industry and Households Has Fallen Amidst the Energy Crisis") +
theme_apricitas + theme(legend.position = c(.65,.875)) +
scale_color_manual(name= "German Gas Consumption, Deviation from 2018-2021 Average",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-01-01")-(.1861*(today()-as.Date("2022-01-01"))), xmax = as.Date("2022-01-01")-(0.049*(today()-as.Date("2022-01-01"))), ymin = -0.6-(.3*0.8), ymax = -0.6) +
coord_cartesian(clip = "off")
NAT_GAS_graph <- ggplot() + #plotting regular vs non-regular employment
geom_line(data=industry_nat_gas, aes(x=date,y= value/1000,color="Industry (Including Electricity Generation)"), size = 1.25) +
geom_line(data=household_nat_gas, aes(x=date,y= value/1000,color="Households and Non-Industrial Businesses"), size = 1.25) +
annotate(geom = "hline",y = 0,yintercept = 0, size = 0.5,color = "white") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = .2, suffix = "TWh"),limits = c(-0.6,0.2), expand = c(0,0), breaks = c(-0.6,-0.4,-0.2,0,0.2)) +
ylab("Deviation From 2018-2021 Average, TWh/Day") +
ggtitle("Germany and The Energy Crisis") +
labs(caption = "Graph created by @JosephPolitano using Bundesnetzagentur Data",subtitle = "Gas Consumption For German Industry and Households Has Fallen Amidst the Energy Crisis") +
theme_apricitas + theme(legend.position = c(.65,.875)) +
scale_color_manual(name= "German Gas Consumption, Deviation from 2018-2021 Average",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2022-01-01")-(.1861*(today()-as.Date("2022-01-01"))), xmax = as.Date("2022-01-01")-(0.049*(today()-as.Date("2022-01-01"))), ymin = -0.6-(.3*0.8), ymax = -0.6) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = NAT_GAS_graph, "Germany Nat Gas Consumption.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ggplot() + #plotting regular vs non-regular employment
geom_line(data=ELECTRIC, aes(x=date,y= value/1000000,color="Germany Realized General Electricity Consumption, Rolling 30 Day Average"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = .01, suffix = "TWh"),limits = c(1.2,1.45), breaks = c(1.2,1.25,1.3,1.35,1.4,1.45) expand = c(0,0)) +
ELECTRIC <- as.data.frame(readSDMX("https://www.bundesbank.de/statistic-rmi/StatisticDownload?tsId=BBDE1.D.DE.Y.VERS.P2XD35165.C.S.ABA.A&its_fileFormat=sdmx&mode=its"))  %>%
.[order(nrow(.):1),] %>%
transmute(date = as.Date(TIME_PERIOD),value = as.numeric(OBS_VALUE)) %>%
mutate(value = c(rep(0,29),rollmean(value,30))) %>%
subset(date >= as.Date("2018-01-01"))
ggplot() + #plotting regular vs non-regular employment
geom_line(data=ELECTRIC, aes(x=date,y= value/1000000,color="Germany Realized General Electricity Consumption, Rolling 30 Day Average"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = .01, suffix = "TWh"),limits = c(1.2,1.45), breaks = c(1.2,1.25,1.3,1.35,1.4,1.45), expand = c(0,0)) +
ylab("Rolling 30 Day Average, TWh") +
ggtitle("Germany and The Energy Crisis") +
labs(caption = "Graph created by @JosephPolitano using DeStatis Data",subtitle = "Electricity Consumption in Germany Has Fallen 10% Amidst The Energy Crisis") +
theme_apricitas + theme(legend.position = c(.5,.1)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 1.2-(.3*.25), ymax = 1.2) +
coord_cartesian(clip = "off")
ELECTRIC_graph <- ggplot() + #plotting regular vs non-regular employment
geom_line(data=ELECTRIC, aes(x=date,y= value/1000000,color="Germany Realized General Electricity Consumption, Rolling 30 Day Average"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = .01, suffix = "TWh"),limits = c(1.2,1.45), breaks = c(1.2,1.25,1.3,1.35,1.4,1.45), expand = c(0,0)) +
ylab("Rolling 30 Day Average, TWh") +
ggtitle("Germany and The Energy Crisis") +
labs(caption = "Graph created by @JosephPolitano using DeStatis Data",subtitle = "Electricity Consumption in Germany Has Fallen 10% Amidst The Energy Crisis") +
theme_apricitas + theme(legend.position = c(.5,.1)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 1.2-(.3*.25), ymax = 1.2) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = ELECTRIC_graph, "Germany Electricity Consumption.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
setwd("~/GitHub/Apricitas/Repeat Use Charts/Employment Releases/020323")
DATA_PROCESSING <- bls_api("CES5051800001", startyear = 2005, registrationKey = "BLS_KEY") %>% #data processing employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
SOFTWARE_PUBLISHERS <- bls_api("CES5051320001", startyear = 2005, registrationKey = "BLS_KEY") %>% #software employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
SEARCH_PORTALS <- bls_api("CES5051929001", startyear = 2005, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
MEDIA_SOCIAL <- bls_api("CES5051620001", startyear = 2005, registrationKey = "BLS_KEY") %>% #internet employment
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
ggplot() + #plotting weekly initial claims for 2014-2019
geom_line(data=DATA_PROCESSING, aes(x=date,y= value,color= "Computing Infrastructure, Data Processing, Web Hosting, & Related"), size = 1.25)+
geom_line(data=SOFTWARE_PUBLISHERS, aes(x=date,y= value,color= "Software Publishers"), size = 1.25) +
geom_line(data=SEARCH_PORTALS, aes(x=date,y= value,color= "Web Search Portals and All Other Information Services"), size = 1.25) +
geom_line(data=MEDIA_SOCIAL, aes(x=date,y= value,color= "Media Streaming Distribution Services, Social Networks, & Related"), size = 1.25) +
xlab("Date") +
ylab("All Employees") +
scale_y_continuous(labels = scales::number_format(suffix = "k"), limits = c(0,675), expand = c(0,0)) +
ggtitle("Tech-Cession?") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Employment is Stalling in Key Digital Tech Sectors") +
theme_apricitas + theme(legend.position = c(.385,.835), legend.text = element_text(size = 13)) +
scale_color_manual(name= "All Employees",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9"), breaks = c("Software Publishers","Computing Infrastructure, Data Processing, Web Hosting, & Related","Media Streaming Distribution Services, Social Networks, & Related","Web Search Portals and All Other Information Services")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2005-01-01")-(.1861*(today()-as.Date("2005-01-01"))), xmax = as.Date("2005-01-01")-(0.049*(today()-as.Date("2005-01-01"))), ymin = 0-(.3*650), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
TECH_EMPLOYMENT_Graph <- ggplot() + #plotting weekly initial claims for 2014-2019
geom_line(data=DATA_PROCESSING, aes(x=date,y= value,color= "Computing Infrastructure, Data Processing, Web Hosting, & Related"), size = 1.25)+
geom_line(data=SOFTWARE_PUBLISHERS, aes(x=date,y= value,color= "Software Publishers"), size = 1.25) +
geom_line(data=SEARCH_PORTALS, aes(x=date,y= value,color= "Web Search Portals and All Other Information Services"), size = 1.25) +
geom_line(data=MEDIA_SOCIAL, aes(x=date,y= value,color= "Media Streaming Distribution Services, Social Networks, & Related"), size = 1.25) +
xlab("Date") +
ylab("All Employees") +
scale_y_continuous(labels = scales::number_format(suffix = "k"), limits = c(0,675), expand = c(0,0)) +
ggtitle("Tech-Cession?") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "Employment is Stalling in Key Digital Tech Sectors") +
theme_apricitas + theme(legend.position = c(.385,.835), legend.text = element_text(size = 13)) +
scale_color_manual(name= "All Employees",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9"), breaks = c("Software Publishers","Computing Infrastructure, Data Processing, Web Hosting, & Related","Media Streaming Distribution Services, Social Networks, & Related","Web Search Portals and All Other Information Services")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2005-01-01")-(.1861*(today()-as.Date("2005-01-01"))), xmax = as.Date("2005-01-01")-(0.049*(today()-as.Date("2005-01-01"))), ymin = 0-(.3*650), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = TECH_EMPLOYMENT_Graph, "Tech Employment Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
cat("\014")  # ctrl+L
rm(list = ls())
cat("\014")  # ctrl+L
rm(list = ls())
dev.off()
#Downloading PMI Numbers—NOTE: MUST BE MANUALLY UPDATED IN THE CSV FILE WITH EACH MONTH'S NEW DATA
#Make sure to keep dates in the YYYY-MM-DD format in the CSV if using Excel to Edit
PMI <- read.csv("https://raw.githubusercontent.com/Miles-byte/Miller-Resource-Group-Charts/main/PMI.csv") %>%
mutate(Date = as.Date(Date))
setwd("~/GitHub/Miller Resource Group Charts/Miller-Resource-Group-Charts")
#Loading lots of default packages
pacman::p_load(transformr,artyfarty,quantmod,tidyquant,datetime,yearmon,lubridate,readr,stringi,jsonlite,cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
#Loading "artyfarty" which allows for some nicer plot themes
install_github('datarootsio/artyfarty')
library("artyfarty")
#Downloading Blue and White Logos
miller_blue_logo <- image_read("https://github.com/Miles-byte/Miller-Resource-Group-Charts/blob/9434a49b489ad26b2542ed6409107cd1a419021d/miller_blue.png?raw=true")
miller_blue_logo_rast <- rasterGrob(miller_blue_logo, interpolate=TRUE)
miller_white_logo <- image_read("https://github.com/Miles-byte/Miller-Resource-Group-Charts/blob/9434a49b489ad26b2542ed6409107cd1a419021d/miller_white.png?raw=true")
miller_white_logo_rast <- rasterGrob(miller_white_logo, interpolate=TRUE)
#Downloading industrial production numbers and taking a 3/12MMA and annual growth rates in 3/12MMA
INDPRO <- fredr(series_id = "INDPRO", observation_start = as.Date("1999-02-01"))%>%
mutate(value12MMA = c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,rollmean(value, 12))) %>%
mutate(value3MMA = c(NA,NA,rollmean(value, 3))) %>%
mutate(Growth12MMA = value12MMA/lag(value12MMA,12)-1) %>%
mutate(Growth3MMA = value3MMA/lag(value3MMA,12)-1) %>%
drop_na()
INDPRO_INDEX_Graph <- ggplot() + #plotting Industrial Production 12MMT Index
#annotate("hline", y = 0, yintercept = 0, color = "gray", size = .5) +
geom_bar(data=INDPRO, aes(x=date,y= value12MMA*12-900,fill= "Industrial Production, 12M Moving Total"), stat = "identity", color = NA, width = 31)+
xlab("Date") +
ylab("Index, 2017 = 1200") +
scale_y_continuous(labels = c(900,1000,1100,1200,1300), expand = c(0,0), limits = c(0,400), breaks = c(0,100,200,300,400)) +
ggtitle("Industrial Production") +
theme_scientific() +
scale_fill_manual(name= NULL,values = c("#08323f","#EF6E24","#068D9D","#6D9DC5")) +
theme(legend.text = element_text(size = 15), plot.title = element_text(size = 30), legend.position = "top")+
annotation_custom(miller_white_logo_rast, xmin = as.Date("2002-01-01")-(.1861*(today()-as.Date("2002-01-01"))), xmax = as.Date("2002-01-01")-(0.049*(today()-as.Date("2002-01-01"))), ymin = 500-(.3*200), ymax = 500) +
coord_cartesian(clip = "off")
INDPRO_GROWTH_Graph <- ggplot() + #plotting Industrial Production Growth
annotate("hline", y = 0, yintercept = 0, color = "gray", size = .5) +
geom_line(data=INDPRO, aes(x=date,y= Growth12MMA,color= "Annual Change in 12M Moving Total"), size = 1.25)+
geom_line(data=INDPRO, aes(x=date,y= Growth3MMA,color= "Annual Change in 3M Moving Total"), size = 1.25)+
xlab("Date") +
ylab("Percent Growth") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), expand = c(0,0)) +
ggtitle("Industrial Production") +
theme_scientific() +
scale_color_manual(name= NULL,values = c("#08323f","#EF6E24","#068D9D","#6D9DC5")) +
theme(legend.text = element_text(size = 15), plot.title = element_text(size = 34), legend.position = "top") +
annotation_custom(miller_white_logo_rast, xmin = as.Date("2002-01-01")-(.1861*(today()-as.Date("2002-01-01"))), xmax = as.Date("2002-01-01")-(0.049*(today()-as.Date("2002-01-01"))), ymin = .22-(.3*0.15), ymax = .22) +
coord_cartesian(clip = "off")
#Saving Industrial Production Charts
ggsave(dpi = "retina",plot = INDPRO_INDEX_Graph, "INDPRO Index.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = INDPRO_GROWTH_Graph, "INDPRO Growth.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
#Downloading GDP numbers and taking a annual growth rate
GDP <- fredr(series_id = "GDPC1", observation_start = as.Date("2000-01-01"))%>%
mutate(growth = value/lag(value,4)-1) %>%
drop_na()
GDP_INDEX_Graph <- ggplot() + #plotting GDP index
#annotate("hline", y = 0, yintercept = 0, color = "gray", size = .5) +
geom_bar(data=GDP, aes(x=date,y= value/1000-12,fill= "US Real GDP, Trillions of 2012 Dollars"), stat = "identity", color = NA, width = 95)+
xlab("Date") +
ylab("Trillions of 2012 Dollars") +
scale_y_continuous(labels = c("$12T","$14T","$16T","$18T","$20T","$22T","$24T","$26T"), breaks = c(0,2,4,6,8,10,12,14), expand = c(0,0), limits = c(0, max(GDP$value)/1000-11)) +
ggtitle("Real GDP") +
theme_scientific() +
scale_fill_manual(name= NULL,values = c("#08323f","#EF6E24","#068D9D","#6D9DC5")) +
theme(legend.text = element_text(size = 14.5), plot.title = element_text(size = 34), legend.position = "top") +
annotation_custom(miller_white_logo_rast, xmin = as.Date("2002-01-01")-(.1861*(today()-as.Date("2002-01-01"))), xmax = as.Date("2002-01-01")-(0.049*(today()-as.Date("2002-01-01"))), ymin = 12-(.3*6), ymax = 12) +
coord_cartesian(clip = "off")
GDP_GROWTH_Graph <- ggplot() + #plotting GDP growth
annotate("hline", y = 0, yintercept = 0, color = "gray", size = .5) +
geom_line(data=GDP, aes(x=date,y= growth,color= "Annual Change in Real GDP"), size = 1.25)+
xlab("Date") +
ylab("Percent Growth") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), expand = c(0,0)) +
ggtitle("Real GDP Growth") +
theme_scientific() +
scale_color_manual(name= NULL,values = c("#08323f","#EF6E24","#068D9D","#6D9DC5")) +
theme(legend.text = element_text(size = 14.5), plot.title = element_text(size = 34), legend.position = "top") +
annotation_custom(miller_white_logo_rast, xmin = as.Date("2002-01-01")-(.1861*(today()-as.Date("2002-01-01"))), xmax = as.Date("2002-01-01")-(0.049*(today()-as.Date("2002-01-01"))), ymin = .185-(.3*0.15), ymax = .185) +
coord_cartesian(clip = "off")
#Saving GDP charts
ggsave(dpi = "retina",plot = GDP_INDEX_Graph, "GDP Index.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = GDP_GROWTH_Graph, "GDP Growth.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
#Downloading Single-Family starts numbers, taking a 12MMA, and taking a annual growth rate of the 12MMA
SFSTARTS <- fredr(series_id = "HOUST1F", observation_start = as.Date("1998-02-01"))%>%
mutate(value = c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,rollmean(value, 12))) %>%
mutate(growth = (value-lag(value,12))/lag(value,12)) %>%
drop_na()
STARTS_INDPRO_Graph <- ggplot() + #plotting Single-Family starts against Industrial Production
annotate("hline", y = 0, yintercept = 0, color = "gray", size = .5) +
geom_line(data=INDPRO, aes(x=date,y= Growth12MMA,color= "Industrial Production, 12MMT"), size = 1.25)+
geom_line(data=SFSTARTS, aes(x=date + 365,y= growth,color= "Single-Family Housing Starts, 12MMT, Offset 1yr"), size = 1.25)+
xlab("Date") +
ylab("Percent Growth") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), expand = c(0,0)) +
ggtitle("Housing Starts & Production") +
theme_scientific() +
scale_color_manual(name= NULL,values = c("#08323f","#EF6E24","#068D9D","#6D9DC5")) +
theme(legend.text = element_text(size = 15), plot.title = element_text(size = 34), legend.position = "top") +
annotation_custom(miller_white_logo_rast, xmin = as.Date("2002-01-01")-(.1861*(today()-as.Date("2002-01-01"))), xmax = as.Date("2002-01-01")-(0.049*(today()-as.Date("2002-01-01"))), ymin = .475-(.3*0.35), ymax = .475) +
coord_cartesian(clip = "off")
#Saving Single-Family Starts Charts
ggsave(dpi = "retina",plot = STARTS_INDPRO_Graph, "Starts Indpro.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
#Downloading Retail Sales numbers, taking a 12MMA and 3MMA, and taking a annual growth rate of the 12MMA & 3MMA
RETAIL <- fredr(series_id = "RSAFS", observation_start = as.Date("1999-02-01"))%>%
mutate(value12MMA = c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,rollmean(value, 12))) %>%
mutate(value3MMA = c(NA,NA,rollmean(value, 3))) %>%
mutate(Growth12MMA = value12MMA/lag(value12MMA,12)-1) %>%
mutate(Growth3MMA = value3MMA/lag(value3MMA,12)-1) %>%
drop_na()
RETAIL_INDEX_Graph <- ggplot() + #plotting retail sales index
geom_bar(data=RETAIL, aes(x=date,y= value12MMA/1000000*12-3,fill= "Retail Sales: Retail Trade and Food Services, 12 Month Moving Total"), stat = "identity", color = NA, width = 32)+
xlab("Date") +
ylab("Trillions of Dollars") +
scale_y_continuous(labels = c("$3T","$4T","$5T","$6T","$7T","$8T","9T","10T","11T","12T"), breaks = c(0,1,2,3,4,5,6,7,8,9), expand = c(0,0), limits = c(0, max(RETAIL$value12MMA)/1000000*12-2.5)) +
ggtitle("Total Retail Sales") +
theme_monokai() + theme(plot.background = element_rect(fill = "#08323f"), panel.border = element_blank(), axis.line = element_line(color = "#08323f"), panel.background = element_rect(fill = "#08323f", color = NA),legend.position = "top", legend.key = element_rect(fill = "#08323f"),legend.background = element_rect(fill = "#08323f")) +
theme(text = element_text(color = "white"), axis.title.x = element_text(color = "white"), axis.title.y = element_text(color = "white"), legend.text = element_text(color = "white", size = 15), axis.text.x = element_text(color = "white"), axis.text.y = element_text(color = "white"), plot.title = element_text(color = "white", size = 30)) +
scale_fill_manual(name= NULL,values = c("#EF6E24","#ffffff","#068D9D","#6D9DC5")) +
annotation_custom(miller_blue_logo_rast, xmin = as.Date("2002-01-01")-(.1861*(today()-as.Date("2002-01-01"))), xmax = as.Date("2002-01-01")-(0.049*(today()-as.Date("2002-01-01"))), ymin = 7.25-(.3*2.5), ymax = 7.25) +
coord_cartesian(clip = "off")
RETAIL_GROWTH_Graph <- ggplot() + #plotting retail sales growth
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_line(data=RETAIL, aes(x=date,y= Growth12MMA,color= "Annual Change in 12M Moving Total"), size = 1.25)+
geom_line(data=RETAIL, aes(x=date,y= Growth3MMA,color= "Annual Change in 3M Moving Total"), size = 1.25)+
xlab("Date") +
ylab("Percent Change") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), expand = c(0,0)) +
ggtitle("Total Retail Sales") +
theme_monokai() + theme(plot.background = element_rect(fill = "#08323f"), panel.border = element_blank(), axis.line = element_line(color = "#08323f"), panel.background = element_rect(fill = "#08323f", color = NA),legend.position = "top", legend.key = element_rect(fill = "#08323f"),legend.background = element_rect(fill = "#08323f")) +
theme(text = element_text(color = "white"), axis.title.x = element_text(color = "white"), axis.title.y = element_text(color = "white"), legend.text = element_text(color = "white", size = 15), axis.text.x = element_text(color = "white"), axis.text.y = element_text(color = "white"), plot.title = element_text(color = "white", size = 30)) +
scale_color_manual(name= NULL,values = c("#EF6E24","#ffffff","#068D9D","#6D9DC5")) +
annotation_custom(miller_blue_logo_rast, xmin = as.Date("2002-01-01")-(.1861*(today()-as.Date("2002-01-01"))), xmax = as.Date("2002-01-01")-(0.049*(today()-as.Date("2002-01-01"))), ymin = .525-(.3*0.35), ymax = .525) +
coord_cartesian(clip = "off")
#Saving Retail Sales Charts
ggsave(dpi = "retina",plot = RETAIL_INDEX_Graph, "Retail Index.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = RETAIL_GROWTH_Graph, "Retail Growth.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
#Downloading nondefense capital orders numbers, taking a 12MMA and 3MMA, and taking a annual growth rate of the 12MMA & 3MMA
NEWORDER <- fredr(series_id = "NEWORDER", observation_start = as.Date("1999-02-01"))%>%
mutate(value12MMA = c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,rollmean(value, 12))) %>%
mutate(value3MMA = c(NA,NA,rollmean(value, 3))) %>%
mutate(Growth12MMA = value12MMA/lag(value12MMA,12)-1) %>%
mutate(Growth3MMA = value3MMA/lag(value3MMA,12)-1) %>%
drop_na()
NEWORDER_INDEX_Graph <- ggplot() + #plotting nondefense capital orders index
geom_bar(data=NEWORDER, aes(x=date,y= value12MMA*12/1000-550,fill= "New Orders: Nondefense Capital Goods Ex Aircraft, 12MMT"), stat = "identity", color = NA, width = 32)+
xlab("Date") +
ylab("Billions of Dollars") +
scale_y_continuous(labels = c("$600B","$700B","$800B","$900B","$900B"), breaks = c(50,150,250,350,450), expand = c(0,0), limits = c(0, max(NEWORDER$value)*12/1000-500)) +
ggtitle("CapEx Spending") +
theme_monokai() + theme(plot.background = element_rect(fill = "#08323f"), panel.border = element_blank(), axis.line = element_line(color = "#08323f"), panel.background = element_rect(fill = "#08323f", color = NA),legend.position = "top", legend.key = element_rect(fill = "#08323f"),legend.background = element_rect(fill = "#08323f")) +
theme(text = element_text(color = "white"), axis.title.x = element_text(color = "white"), axis.title.y = element_text(color = "white"), legend.text = element_text(color = "white", size = 15), axis.text.x = element_text(color = "white"), axis.text.y = element_text(color = "white"), plot.title = element_text(color = "white", size = 30)) +
scale_fill_manual(name= NULL,values = c("#EF6E24","#ffffff","#068D9D","#6D9DC5")) +
annotation_custom(miller_blue_logo_rast, xmin = as.Date("2002-01-01")-(.1861*(today()-as.Date("2002-01-01"))), xmax = as.Date("2002-01-01")-(0.049*(today()-as.Date("2002-01-01"))), ymin = 520-(.3*200), ymax = 520) +
coord_cartesian(clip = "off")
NEWORDER_GROWTH_Graph <- ggplot() + #plotting nondefense capital orders index
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_line(data=NEWORDER, aes(x=date,y= Growth12MMA,color= "Annual Change in 12M Moving Total"), size = 1.25)+
geom_line(data=NEWORDER, aes(x=date,y= Growth3MMA,color= "Annual Change in 3M Moving Total"), size = 1.25)+
xlab("Date") +
ylab("Percent Change") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), expand = c(0,0)) +
ggtitle("CapEx Spending") +
theme_monokai() + theme(plot.background = element_rect(fill = "#08323f"), panel.border = element_blank(), axis.line = element_line(color = "#08323f"), panel.background = element_rect(fill = "#08323f", color = NA),legend.position = "top", legend.key = element_rect(fill = "#08323f"),legend.background = element_rect(fill = "#08323f")) +
theme(text = element_text(color = "white"), axis.title.x = element_text(color = "white"), axis.title.y = element_text(color = "white"), legend.text = element_text(color = "white", size = 15), axis.text.x = element_text(color = "white"), axis.text.y = element_text(color = "white"), plot.title = element_text(color = "white", size = 30)) +
scale_color_manual(name= NULL,values = c("#EF6E24","#ffffff","#068D9D","#6D9DC5")) +
annotation_custom(miller_blue_logo_rast, xmin = as.Date("2002-01-01")-(.1861*(today()-as.Date("2002-01-01"))), xmax = as.Date("2002-01-01")-(0.049*(today()-as.Date("2002-01-01"))), ymin = .34-(.3*0.35), ymax = .34) +
coord_cartesian(clip = "off")
#Saving Retail Sales Charts
ggsave(dpi = "retina",plot = NEWORDER_INDEX_Graph, "Neworder Index.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = NEWORDER_GROWTH_Graph, "Neworder Growth.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
#Downloading PMI Numbers—NOTE: MUST BE MANUALLY UPDATED IN THE CSV FILE WITH EACH MONTH'S NEW DATA
#Make sure to keep dates in the YYYY-MM-DD format in the CSV if using Excel to Edit
PMI <- read.csv("https://raw.githubusercontent.com/Miles-byte/Miller-Resource-Group-Charts/main/PMI.csv") %>%
mutate(Date = as.Date(Date))
PMI_Graph <- ggplot() + #plotting PMI and INDPRO data
annotate("hline", y = 0, yintercept = 0, color = "gray", size = .5) +
geom_line(data=subset(INDPRO, date >= as.Date("2004-12-01")), aes(x=date,y= Growth12MMA,color= "Industrial Production: Annual Change in 12MMT"), size = 1.25)+
geom_line(data=PMI, aes(x=Date+365,y= PMI/100-.50,color= "ISM Manufacturing PMI, Offset 1yr"), size = 1.25)+
xlab("Date") +
ylab("Percent Growth") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), expand = c(0,0), sec.axis = sec_axis(~.*100+(.50*100), name="PMI, >50 = Expansion", labels = scales::number_format())) +
ggtitle("Production & PMI") +
theme_scientific() +
scale_color_manual(name= NULL,values = c("#08323f","#EF6E24","#068D9D","#6D9DC5")) +
theme(legend.text = element_text(size = 14.5), plot.title = element_text(size = 34), legend.position = "top") +
annotation_custom(miller_white_logo_rast, xmin = as.Date("2006-01-01")-(.1861*(today()-as.Date("2006-01-01"))), xmax = as.Date("2006-01-01")-(0.049*(today()-as.Date("2006-01-01"))), ymin = .24-(.3*0.15), ymax = .24) +
coord_cartesian(clip = "off")
#Saving PMI Charts
ggsave(dpi = "retina",plot = PMI_Graph, "PMI Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
setwd("~/GitHub/Apricitas/Repeat Use Charts/Employment Releases/020323")
EPop <- fredr(series_id = "LNS12300060",observation_start = as.Date("1990-01-01"),realtime_start = NULL, realtime_end = NULL) #prime age epop data
theme_apricitas <- theme_ft_rc() +
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
EPop_Graph <- ggplot() + #plotting Emplyoment-population ratio
geom_line(data=EPop, aes(x=date,y= value/100,color= "Prime Age (25-54) Employment-Population Ratio"), size = 1.25)+
xlab("Date") +
ylab("Prime Age (25-54) Employment-Population Ratio, %") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("Well Below Full Employment") +
labs(caption = "Graph created by @JosephPolitano using BLS data") +
theme_apricitas + theme(legend.position = c(.68,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotate(geom = "hline", y = 0.819, yintercept = .819, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "Lowest Possible Estimate of 'Full Employment'", x = as.Date("1998-06-01"), y = 0.825, color ="#FFE98F", size = 5) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1990-01-01")-(.1861*11535), xmax = as.Date("1990-01-01")-(0.049*11535), ymin = 0.69-(.3*0.14), ymax = 0.69) +
coord_cartesian(clip = "off")
ggplot() + #plotting Emplyoment-population ratio
geom_line(data=EPop, aes(x=date,y= value/100,color= "Prime Age (25-54) Employment-Population Ratio"), size = 1.25)+
xlab("Date") +
ylab("Prime Age (25-54) Employment-Population Ratio, %") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("Well Below Full Employment") +
labs(caption = "Graph created by @JosephPolitano using BLS data") +
theme_apricitas + theme(legend.position = c(.68,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotate(geom = "hline", y = 0.819, yintercept = .819, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "Lowest Possible Estimate of 'Full Employment'", x = as.Date("1998-06-01"), y = 0.825, color ="#FFE98F", size = 5) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1990-01-01")-(.1861*11535), xmax = as.Date("1990-01-01")-(0.049*11535), ymin = 0.69-(.3*0.14), ymax = 0.69) +
coord_cartesian(clip = "off")
EPop_Graph <- ggplot() + #plotting Emplyoment-population ratio
geom_line(data=EPop, aes(x=date,y= value/100,color= "Prime Age (25-54) Employment-Population Ratio"), size = 1.25)+
xlab("Date") +
ylab("Prime Age (25-54) Employment-Population Ratio, %") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("Well Below Full Employment") +
labs(caption = "Graph created by @JosephPolitano using BLS data") +
theme_apricitas + theme(legend.position = c(.68,.87)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotate(geom = "hline", y = 0.819, yintercept = .819, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "Lowest Possible Estimate of 'Full Employment'", x = as.Date("1998-06-01"), y = 0.825, color ="#FFE98F", size = 5) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1990-01-01")-(.1861*11535), xmax = as.Date("1990-01-01")-(0.049*11535), ymin = 0.69-(.3*0.14), ymax = 0.69) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = EPop_Graph, "EPopUSA.png", type = "cairo-png") #cairo gets rid of anti aliasing
