Compensation <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Tight%20Monetary%20Policy%2C%20Not%20Loose%20Monetary%20Policy%2C%20has%20Caused%20Inequality/Compensation.csv")
Compensation$DATE <- as.Date(Compensation$DATE)#forcing date on characters
GDP$DATE <- as.Date(GDP$DATE)
Wages$DATE <- as.Date(Wages$DATE)
colnames(Wages) <- c("DATE","Wage_Pct") #changing colnames
colnames(Compensation) <- c("DATE","Compensation_Pct")
colnames(EPop) <- c("DATE","EPop")
ggplot() + #plotting nominal growth
geom_line(data=GDP, aes(x=DATE,y= GDP_PC1/100,color= "GDP"), size = 1.25) +
geom_line(data=Compensation, aes(x=DATE, y = Compensation_Pct/100, color = "Compensation"), size = 1.25) +
geom_line(data=Wages, aes(x=DATE,y= Wage_Pct/100, color = "Wages and Salaries"), size = 1.25) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
xlab("Date") +
ylab("Annual Percent Growth, Nominal USD") +
ggtitle("Nominal Growth Lagged the Pre-Crisis Trend") +
labs(caption = "Graph created by @JosephPolitano using BEA data") +
theme_apricitas +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotate(geom = "hline", y = mean(Comp_Mean$Compensation_Pct)/100, yintercept = mean(Comp_Mean$Compensation_Pct)/100, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "Pre-Crisis Trend", x = as.Date("1998-06-01"), y = mean(Comp_Mean$Compensation_Pct)/100-0.005, color ="#FFE98F",size = 3.5)
Comp_Mean <- Compensation[Compensation$DATE < "2007-11-01", ] #trimming to get mean compensation
ggplot() + #plotting nominal growth
geom_line(data=GDP, aes(x=DATE,y= GDP_PC1/100,color= "GDP"), size = 1.25) +
geom_line(data=Compensation, aes(x=DATE, y = Compensation_Pct/100, color = "Compensation"), size = 1.25) +
geom_line(data=Wages, aes(x=DATE,y= Wage_Pct/100, color = "Wages and Salaries"), size = 1.25) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
xlab("Date") +
ylab("Annual Percent Growth, Nominal USD") +
ggtitle("Nominal Growth Lagged the Pre-Crisis Trend") +
labs(caption = "Graph created by @JosephPolitano using BEA data") +
theme_apricitas +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotate(geom = "hline", y = mean(Comp_Mean$Compensation_Pct)/100, yintercept = mean(Comp_Mean$Compensation_Pct)/100, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "Pre-Crisis Trend", x = as.Date("1998-06-01"), y = mean(Comp_Mean$Compensation_Pct)/100-0.005, color ="#FFE98F",size = 3.5)
ggplot() + #plotting nominal growth
geom_line(data=GDP, aes(x=DATE,y= GDP_PC1/100,color= "GDP"), size = 1.25) +
geom_line(data=Compensation, aes(x=DATE, y = Compensation_Pct/100, color = "Compensation"), size = 1.25) +
geom_line(data=Wages, aes(x=DATE,y= Wage_Pct/100, color = "Wages and Salaries"), size = 1.25) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
xlab("Date") +
ylab("Annual Percent Growth, Nominal USD") +
ggtitle("Nominal Growth Lagged the Pre-Crisis Trend") +
labs(caption = "Graph created by @JosephPolitano using BEA data") +
theme_apricitas + theme(legend.position = c(.17,.30)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotate(geom = "hline", y = mean(Comp_Mean$Compensation_Pct)/100, yintercept = mean(Comp_Mean$Compensation_Pct)/100, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "Pre-Crisis Trend", x = as.Date("1998-06-01"), y = mean(Comp_Mean$Compensation_Pct)/100-0.005, color ="#FFE98F",size = 3.5)
ggplot() + #plotting nominal growth
geom_line(data=GDP, aes(x=DATE,y= GDP_PC1/100,color= "GDP"), size = 1.25) +
geom_line(data=Compensation, aes(x=DATE, y = Compensation_Pct/100, color = "Compensation"), size = 1.25) +
geom_line(data=Wages, aes(x=DATE,y= Wage_Pct/100, color = "Wages and Salaries"), size = 1.25) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.06,.1),  breaks = c(-0.05,0,.05,.1), expand = c(0,0)) +
xlab("Date") +
ylab("Annual Percent Growth, Nominal USD") +
ggtitle("Nominal Growth Lagged the Pre-Crisis Trend") +
labs(caption = "Graph created by @JosephPolitano using BEA data") +
theme_apricitas + theme(legend.position = c(.17,.30)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotate(geom = "hline", y = mean(Comp_Mean$Compensation_Pct)/100, yintercept = mean(Comp_Mean$Compensation_Pct)/100, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "Pre-Crisis Trend", x = as.Date("1998-06-01"), y = mean(Comp_Mean$Compensation_Pct)/100-0.005, color ="#FFE98F",size = 3.5) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1990-01-01")-(.1861*11323), xmax = as.Date("1990-01-01")-(0.049*11323), ymin = 0-(.3*.035), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting nominal growth
geom_line(data=GDP, aes(x=DATE,y= GDP_PC1/100,color= "GDP"), size = 1.25) +
geom_line(data=Compensation, aes(x=DATE, y = Compensation_Pct/100, color = "Compensation"), size = 1.25) +
geom_line(data=Wages, aes(x=DATE,y= Wage_Pct/100, color = "Wages and Salaries"), size = 1.25) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.06,.1),  breaks = c(-0.05,0,.05,.1), expand = c(0,0)) +
xlab("Date") +
ylab("Annual Percent Growth, Nominal USD") +
ggtitle("Nominal Growth Lagged the Pre-Crisis Trend") +
labs(caption = "Graph created by @JosephPolitano using BEA data") +
theme_apricitas + theme(legend.position = c(.17,.30)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotate(geom = "hline", y = mean(Comp_Mean$Compensation_Pct)/100, yintercept = mean(Comp_Mean$Compensation_Pct)/100, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "Pre-Crisis Trend", x = as.Date("1998-06-01"), y = mean(Comp_Mean$Compensation_Pct)/100-0.005, color ="#FFE98F",size = 3.5) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1990-01-01")-(.1861*11323), xmax = as.Date("1990-01-01")-(0.049*11323), ymin = -0.06-(.3*.16), ymax = -0.06) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting nominal growth
geom_line(data=GDP, aes(x=DATE,y= GDP_PC1/100,color= "GDP"), size = 1.25) +
geom_line(data=Compensation, aes(x=DATE, y = Compensation_Pct/100, color = "Compensation"), size = 1.25) +
geom_line(data=Wages, aes(x=DATE,y= Wage_Pct/100, color = "Wages and Salaries"), size = 1.25) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.06,.1),  breaks = c(-0.05,0,.05,.1), expand = c(0,0)) +
xlab("Date") +
ylab("Annual Percent Growth, Nominal USD") +
ggtitle("The Nominal Crisis") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "Nominal Growth Tanked After the GFC, Bringing Real Growth Down With it") +
theme_apricitas + theme(legend.position = c(.17,.30)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotate(geom = "hline", y = mean(Comp_Mean$Compensation_Pct)/100, yintercept = mean(Comp_Mean$Compensation_Pct)/100, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "Pre-Crisis Trend", x = as.Date("1998-06-01"), y = mean(Comp_Mean$Compensation_Pct)/100-0.005, color ="#FFE98F",size = 3.5) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1990-01-01")-(.1861*11323), xmax = as.Date("1990-01-01")-(0.049*11323), ymin = -0.06-(.3*.16), ymax = -0.06) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
TENYRTIPS <- fredr(series_id = "DFII10",observation_start = as.Date("2003-01-02"),realtime_start = NULL, realtime_end = NULL) #prime age epop data
ggplot() + #plotting federal deficit data
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 YR TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-.16,0.024), breaks = c(0,-0.05,-0.1,-0.15), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Deficit Finance") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Federal Budget Deficits Have Grown Since the Turn of the Millenium") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*7300), xmax = as.Date("2000-01-01")-(0.049*7300), ymin = -.16-(.3*.184), ymax = -.16) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting federal deficit data
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 YR TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.011,0.03), breaks = c(-0.01,0,0.02,0.03), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Deficit Finance") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Federal Budget Deficits Have Grown Since the Turn of the Millenium") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*7300), xmax = as.Date("2000-01-01")-(0.049*7300), ymin = -.16-(.3*.184), ymax = -.16) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting federal deficit data
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 YR TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.015,0.035), breaks = c(-0.01,0,0.02,0.03), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Deficit Finance") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Federal Budget Deficits Have Grown Since the Turn of the Millenium") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*7300), xmax = as.Date("2000-01-01")-(0.049*7300), ymin = -.16-(.3*.184), ymax = -.16) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting federal deficit data
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 YR TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.015,0.035), breaks = c(-0.01,0,0.01,0.02,0.03), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Deficit Finance") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Federal Budget Deficits Have Grown Since the Turn of the Millenium") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*7300), xmax = as.Date("2000-01-01")-(0.049*7300), ymin = -.16-(.3*.184), ymax = -.16) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting TIPS
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 Year TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.015,0.035), breaks = c(-0.01,0,0.01,0.02,0.03), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Deficit Finance") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Federal Budget Deficits Have Grown Since the Turn of the Millenium") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2003-01-01")-(.1861*7300), xmax = as.Date("2003-01-01")-(0.049*7300), ymin = -.015-(.3*.5), ymax = -.015) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting TIPS
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 Year TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.015,0.035), breaks = c(-0.01,0,0.01,0.02,0.03), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Deficit Finance") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Federal Budget Deficits Have Grown Since the Turn of the Millenium") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2003-01-01")-(.1861*6918), xmax = as.Date("2003-01-01")-(0.049*6918), ymin = -.015-(.3*.5), ymax = -.015) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting TIPS
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 Year TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.015,0.035), breaks = c(-0.01,0,0.01,0.02,0.03), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Deficit Finance") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Federal Budget Deficits Have Grown Since the Turn of the Millenium") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2003-01-01")-(.1861*6918), xmax = as.Date("2003-01-01")-(0.049*6918), ymin = -.015-(.3*.05), ymax = -.015) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
TENYRTIPS <- drop_na(TENYRTIPS)
ggplot() + #plotting TIPS
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 Year TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.015,0.035), breaks = c(-0.01,0,0.01,0.02,0.03), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Deficit Finance") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Federal Budget Deficits Have Grown Since the Turn of the Millenium") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2003-01-01")-(.1861*6918), xmax = as.Date("2003-01-01")-(0.049*6918), ymin = -.015-(.3*.05), ymax = -.015) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting TIPS
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 Year TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.015,0.035), breaks = c(-0.01,0,0.01,0.02,0.03), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Lower For Longer") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Real Interest Rates Continue To Slide Downwards") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2003-01-01")-(.1861*6918), xmax = as.Date("2003-01-01")-(0.049*6918), ymin = -.015-(.3*.05), ymax = -.015) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
TENYRTIPS_Graph <- ggplot() + #plotting TIPS
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 Year TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.015,0.035), breaks = c(-0.01,0,0.01,0.02,0.03), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Lower For Longer") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Real Interest Rates Continue To Slide Downwards") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2003-01-01")-(.1861*6918), xmax = as.Date("2003-01-01")-(0.049*6918), ymin = -.015-(.3*.05), ymax = -.015) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = Deficit_Graph, "Deficit.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = InterestPct, "InterestPct.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = JapanEUInterestGDP, "JPN EU Interest.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = Nominal_Growth, "Nominal Growth.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = TENYRTIPS, "Ten Year Tips.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
Deficit_Graph <- ggplot() + #plotting federal deficit data
geom_line(data=Deficit, aes(x=date,y= value/100 ,color= "Federal Budget Deficit, % of GDP"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-.16,0.024), breaks = c(0,-0.05,-0.1,-0.15), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Deficit Finance") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Federal Budget Deficits Have Grown Since the Turn of the Millenium") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*7300), xmax = as.Date("2000-01-01")-(0.049*7300), ymin = -.16-(.3*.184), ymax = -.16) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
InterestPct <- ggplot() + #plotting interest as a %of GDP
geom_line(data=fyoint, aes(x=DATE,y=OINT/GDP,color= "Interest"), size = 1.25) +
geom_line(data=fyoint, aes(x=DATE,y=(OINT-FRBREMIT)/GDP,color= "Interest Less Fed Remittances"), size = 1.25) +
xlab("Date") +
scale_x_date(limits = c(as.IDate("1947-01-01"),as.IDate("2020-01-01"))) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.5), expand = c(0,0),limits = c(0,0.035)) +
ylab("Percent of GDP") +
ggtitle("A Light Burden") +
labs(caption = "Graph created by @JosephPolitano using OMB and BEA data",subtitle = "Net Interest Expenses Have Remained Low Despite High Debt Levels") +
theme_apricitas + theme(legend.position = c(.30,.90)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1947-01-01")-(.1861*26663), xmax = as.Date("1947-01-01")-(0.049*26663), ymin = 0-(.3*.035), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
JapanEUInterestGDP <- ggplot() + #plotting Interest/GDP for many countries
geom_line(data=fyoint, aes(x=DATE,y=(OINT-FRBREMIT)/GDP,color= "USA"), size = 1.25) +
geom_line(data=EnglandDebt, aes(x=Date,y=IntAPFGDP,color= "UK"), size = 1.25) +
geom_line(data=GermanDebt, aes(x=Date,y=((NominalInterest-NominalRemit)/(NGDP*1000)), color = "Germany"),size = 1.25) +
geom_line(data=JPN_ITA_Int, aes(x=Date,y=JPNIntRemitGDP,color= "Japan"), size = 1.25) +
xlab("Date") +
scale_x_date(limits = c(as.IDate("1990-01-01"),as.IDate("2021-01-01"))) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(0,.035),  breaks = c(0,.01,.02,.03,0.04,0.05,0.06), expand = c(0,0)) +
ylab("Percent of GDP") +
ggtitle("The Easing Burden") +
labs(caption = "Graph created by @JosephPolitano using Dallas Fed, IMF, Bundesbank, Banca D'Italia, BoJ, and BoE data",subtitle = "Debt Servicing Costs for High-Income Nations Have Been Dropping") +
theme_apricitas + theme(legend.position = c(.17,.30)) +
scale_color_manual(name= "Net Interest as a % of GDP",values = c("#FFE98F","#00A99D","#9A348E","#A7ACD9","#EE6055"), breaks = c("USA","UK","Japan","Germany")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1990-01-01")-(.1861*11323), xmax = as.Date("1990-01-01")-(0.049*11323), ymin = 0-(.3*.035), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
Nominal_Growth <- ggplot() + #plotting nominal growth
geom_line(data=GDP, aes(x=DATE,y= GDP_PC1/100,color= "GDP"), size = 1.25) +
geom_line(data=Compensation, aes(x=DATE, y = Compensation_Pct/100, color = "Compensation"), size = 1.25) +
geom_line(data=Wages, aes(x=DATE,y= Wage_Pct/100, color = "Wages and Salaries"), size = 1.25) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.06,.1),  breaks = c(-0.05,0,.05,.1), expand = c(0,0)) +
xlab("Date") +
ylab("Annual Percent Growth, Nominal USD") +
ggtitle("The Nominal Crisis") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "Nominal Growth Tanked After the GFC, Bringing Real Growth Down With it") +
theme_apricitas + theme(legend.position = c(.17,.30)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotate(geom = "hline", y = mean(Comp_Mean$Compensation_Pct)/100, yintercept = mean(Comp_Mean$Compensation_Pct)/100, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "Pre-Crisis Trend", x = as.Date("1998-06-01"), y = mean(Comp_Mean$Compensation_Pct)/100-0.005, color ="#FFE98F",size = 3.5) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("1990-01-01")-(.1861*11323), xmax = as.Date("1990-01-01")-(0.049*11323), ymin = -0.06-(.3*.16), ymax = -0.06) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
TENYRTIPS_Graph <- ggplot() + #plotting TIPS
geom_line(data=TENYRTIPS, aes(x=date,y= value/100 ,color= "10 Year TIPS Yield"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(-0.015,0.035), breaks = c(-0.01,0,0.01,0.02,0.03), expand = c(0,0)) +
ylab("Federal Budget Deficit, % of GDP") +
ggtitle("Lower For Longer") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Real Interest Rates Continue To Slide Downwards") +
theme_apricitas + theme(legend.position = c(.60,.85)) +
scale_color_manual(name= NULL ,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2003-01-01")-(.1861*6918), xmax = as.Date("2003-01-01")-(0.049*6918), ymin = -.015-(.3*.05), ymax = -.015) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = Deficit_Graph, "Deficit.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = InterestPct, "InterestPct.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = JapanEUInterestGDP, "JPN EU Interest.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = Nominal_Growth, "Nominal Growth.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = TENYRTIPS, "Ten Year Tips.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = TENYRTIPS_Graph, "Ten Year Tips.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggplot() + #plotting corporate profit margins
geom_line(data=PROFIT_MARGIN, aes(x=date,y= NFC_PROFIT/NFC_PRICE ,color= "Nonfinancial Corporate Business Profit Margins"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(.11,.165), breaks = c(.11,.12,.13,.14,0.15,0.16), expand = c(0,0)) +
ylab("Margin, %") +
ggtitle("More Than Marginal Improvements") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "With Prices Rising Faster Than Wages, Corporate Profit Margins Have Jumped") +
theme_apricitas + theme(legend.position = c(.40,.80)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*900), xmax = as.Date("2019-01-01")-(0.049*900), ymin = .11-(.3*.055), ymax = .11) +
coord_cartesian(clip = "off")
CPIUSEDCARS <- fredr(series_id = "CUSR0000SETA02",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Consumer Price Index (CPI) Used Cars and Trucks data
CPINEWCARS <- fredr(series_id = "CUSR0000SETA01",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading CPI New Vehicles data
CPIRENT <- fredr(series_id = "CUSR0000SEHA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading CPI Rent of Primary Residence data in percent change format
CPIOERENT <- fredr(series_id = "CUSR0000SEHC",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading CPI Owners' Equivalent Rent of Residences data in percent change format
CPI <- fredr(series_id = "CPIAUCSL",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading CPI All Items data
PCE <- fredr(series_id = "PCE",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Personal Consumption Expenditures (PCE) data
PCEGD <- fredr(series_id = "DGDSRC1",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading PCE Goods data
PCESV <- fredr(series_id = "PCES",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading PCE Services data
PPIIDC <- fredr(series_id = "PPIIDC",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Producer Price Index: Industrial Commodities data
NFC_PROFIT <- fredr(series_id = "A463RD3Q052SBEA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Profit per unit of Gross Value Added for Nonfinancial Corporations data
NFC_PRICE <- fredr(series_id = "A455RD3Q052SBEA",observation_start = as.Date("2019-01-01"),observation_end = as.Date("2021-10-30")) #downloading Price per unit of Gross Value Added for Nonfinancial Corporations data
ECISERV <- fredr(series_id = "CIS201S000000000I",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading Employment Cost Index (ECI) services data
ECIGOOD <- fredr(series_id = "CIU201G000000000I",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading ECI goods data
PCESERV <- fredr(series_id = "DSERRG3M086SBEA",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading PCE services
PCEGOOD <- fredr(series_id = "DGDSRG3M086SBEA",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading PCE goods
DSPI <- fredr(series_id = "DSPI",observation_start = as.Date("2018-01-01")) #downloading Disposable Personal Income data
POUT <- fredr(series_id = "A068RC1",observation_start = as.Date("2018-01-01")) #downloading Personal Outlays
#manually adding 2% CPI growth trend for later chart on above-trend CPI
CPI$CPITREND <- c(seq(0,0,length.out = 13), 258.824*1.001652^(0:20)) #the sequence of zeroes is for the part of the chart where the trendline is excluded, and the second sequence is compounding CPI monthly at a 2% annual rate
#formatting data for the later chart on wage-price spirals
Wage_Price_Merge <- do.call("rbind", list(ECISERV,ECIGOOD,PCESERV,PCEGOOD)) #binding ECI and PCE data for service and goods sector
#renaming series IDs in the merged data set to plain language explanations
Wage_Price_Merge$series_id <- gsub("CIS201S000000000I","Services Compensation (ECI)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("CIU201G000000000I","Goods Compensation (ECI)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("DSERRG3M086SBEA","Services Prices (PCE)",Wage_Price_Merge$series_id)
Wage_Price_Merge$series_id <- gsub("DGDSRG3M086SBEA","Goods Prices (PCE)",Wage_Price_Merge$series_id)
#formatting data for the later chart on corporate profit margins
PROFIT_MARGIN <- merge(NFC_PROFIT, NFC_PRICE, by = "date") #merging price and profit margin data per unit of gross value added for nonfinancial corporations
PROFIT_MARGIN <- subset(PROFIT_MARGIN, select = c("date","value.x","value.y")) #deleting unneeded variables from the data frame
colnames(PROFIT_MARGIN) <- c("date","NFC_PROFIT","NFC_PRICE") #renaming vairables for ease of use
ggplot() + #plotting corporate profit margins
geom_line(data=PROFIT_MARGIN, aes(x=date,y= NFC_PROFIT/NFC_PRICE ,color= "Nonfinancial Corporate Business Profit Margins"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(.11,.165), breaks = c(.11,.12,.13,.14,0.15,0.16), expand = c(0,0)) +
ylab("Margin, %") +
ggtitle("More Than Marginal Improvements") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "With Prices Rising Faster Than Wages, Corporate Profit Margins Have Jumped") +
theme_apricitas + theme(legend.position = c(.40,.80)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*900), xmax = as.Date("2019-01-01")-(0.049*900), ymin = .11-(.3*.055), ymax = .11) +
coord_cartesian(clip = "off")
cat("\014")  # ctrl+L
rm(list = ls())
dev.off()
devtools::install_github("mattcowgill/jptheme")
pacman::p_load(remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
devtools::install_github("mattcowgill/jptheme")
CPI <- bls_api("CUSR0000SA0", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIUSEDCARS <- bls_api("CUSR0000SETA02", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPINEWCARS <- bls_api("CUSR0000SETA01", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIRENT <- bls_api("CUSR0000SEHA", startyear = 2019, endyear = 2021, calculations = TRUE, Sys.getenv("BLS_KEY"))
CPIORENT <- bls_api("CUSR0000SEHC", startyear = 2019, endyear = 2021, calculations = TRUE, Sys.getenv("BLS_KEY"))
CPIGAS <- bls_api("CUSR0000SETB01", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIPIPEDGAS <- bls_api("CUSR0000SEHF02", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPILODGINGHOME <- bls_api("CUSR0000SEHB", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIRENT$calculations <- str_sub(CPIRENT$calculations, start= -3)
CPIRENT$calculations <- as.numeric(CPIRENT$calculations)
CPIORENT$calculations <- str_sub(CPIORENT$calculations, start= -3)
CPIORENT$calculations <- as.numeric(CPIORENT$calculations)
CPI=CPI[order(nrow(CPI):1),] #blscraper puts rows in reverse order, so I am reversing them again here
CPIUSEDCARS=CPIUSEDCARS[order(nrow(CPIUSEDCARS):1),]
CPINEWCARS=CPINEWCARS[order(nrow(CPINEWCARS):1),]
CPIRENT=CPIRENT[order(nrow(CPIRENT):1),]
CPIORENT=CPIORENT[order(nrow(CPIORENT):1),]
CPIGAS=CPIGAS[order(nrow(CPIGAS):1),]
CPIPIPEDGAS=CPIPIPEDGAS[order(nrow(CPIPIPEDGAS):1),]
CPILODGINGHOME=CPILODGINGHOME[order(nrow(CPILODGINGHOME):1),]
CPI$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIUSEDCARS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPINEWCARS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIRENT$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIORENT$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIGAS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIPIPEDGAS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPILODGINGHOME$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
#CPIUSEDCARS <- fredr(series_id = "CUSR0000SETA02",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #prime age epop data
#CPINEWCARS <- fredr(series_id = "CUSR0000SETA01",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Leisure and Hospitality Data
#CPIRENT <- fredr(series_id = "CUSR0000SEHA",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #u1Rate Extended Unemployment Data
#CPIOERENT <- fredr(series_id = "CUSR0000SEHC",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #u1Rate Extended Unemployment Data
#CPI <- fredr(series_id = "CPIAUCSL",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
#PCE <- fredr(series_id = "PCE",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
#PCEGD <- fredr(series_id = "DGDSRC1",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
#PCESV <- fredr(series_id = "PCES",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
#PPIIDC <- fredr(series_id = "PPIIDC",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
#PROFIT_MARGIN <- fredr(series_id = "A463RD3Q052SBEA",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
WTI <- fredr(series_id = "DCOILWTICO",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
WTI <- drop_na(WTI)
PCEPIPCT <- fredr(series_id = "PCEPI",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #u1Rate Extended Unemployment Data
COREPCEPI <- fredr(series_id = "PCEPILFE",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #u1Rate Extended Unemployment Data
TRIMMEDPCEPI <- fredr(series_id = "PCETRIM12M159SFRBDAL",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
PCEPIIND <- fredr(series_id = "PCEPI",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% Target"), size = 1.25, linetype = "dashed") +
geom_line(data=PCEPIIND, aes(x=date,y= (value/1.0814) ,color= "PCEPI"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(100,111.2), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS and BEA data",subtitle = "The CPI and PCE Price Indexes are Way Above Trend") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= NULL,breaks = c("CPI","PCEPI","2% Target"),values = c("#FFE98F","#00A99D","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2), lwd = c(1.25,1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 100-(.3*11.2), ymax = 100) +
coord_cartesian(clip = "off")
CPI <- bls_api("CUSR0000SA0", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIUSEDCARS <- bls_api("CUSR0000SETA02", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPINEWCARS <- bls_api("CUSR0000SETA01", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIRENT <- bls_api("CUSR0000SEHA", startyear = 2019, endyear = 2021, calculations = TRUE, Sys.getenv("BLS_KEY"))
CPIORENT <- bls_api("CUSR0000SEHC", startyear = 2019, endyear = 2021, calculations = TRUE, Sys.getenv("BLS_KEY"))
CPIGAS <- bls_api("CUSR0000SETB01", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIPIPEDGAS <- bls_api("CUSR0000SEHF02", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPILODGINGHOME <- bls_api("CUSR0000SEHB", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIRENT$calculations <- str_sub(CPIRENT$calculations, start= -3)
CPIRENT$calculations <- as.numeric(CPIRENT$calculations)
CPIORENT$calculations <- str_sub(CPIORENT$calculations, start= -3)
CPIORENT$calculations <- as.numeric(CPIORENT$calculations)
CPI=CPI[order(nrow(CPI):1),] #blscraper puts rows in reverse order, so I am reversing them again here
CPIUSEDCARS=CPIUSEDCARS[order(nrow(CPIUSEDCARS):1),]
CPINEWCARS=CPINEWCARS[order(nrow(CPINEWCARS):1),]
CPIRENT=CPIRENT[order(nrow(CPIRENT):1),]
CPIORENT=CPIORENT[order(nrow(CPIORENT):1),]
CPIGAS=CPIGAS[order(nrow(CPIGAS):1),]
CPIPIPEDGAS=CPIPIPEDGAS[order(nrow(CPIPIPEDGAS):1),]
CPILODGINGHOME=CPILODGINGHOME[order(nrow(CPILODGINGHOME):1),]
CPI$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIUSEDCARS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPINEWCARS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIRENT$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIORENT$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIGAS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIPIPEDGAS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPILODGINGHOME$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
#CPIUSEDCARS <- fredr(series_id = "CUSR0000SETA02",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #prime age epop data
#CPINEWCARS <- fredr(series_id = "CUSR0000SETA01",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Leisure and Hospitality Data
#CPIRENT <- fredr(series_id = "CUSR0000SEHA",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #u1Rate Extended Unemployment Data
#CPIOERENT <- fredr(series_id = "CUSR0000SEHC",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #u1Rate Extended Unemployment Data
#CPI <- fredr(series_id = "CPIAUCSL",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
#PCE <- fredr(series_id = "PCE",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
#PCEGD <- fredr(series_id = "DGDSRC1",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
#PCESV <- fredr(series_id = "PCES",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
#PPIIDC <- fredr(series_id = "PPIIDC",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
#PROFIT_MARGIN <- fredr(series_id = "A463RD3Q052SBEA",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
WTI <- fredr(series_id = "DCOILWTICO",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
WTI <- drop_na(WTI)
PCEPIPCT <- fredr(series_id = "PCEPI",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #u1Rate Extended Unemployment Data
COREPCEPI <- fredr(series_id = "PCEPILFE",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #u1Rate Extended Unemployment Data
TRIMMEDPCEPI <- fredr(series_id = "PCETRIM12M159SFRBDAL",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
PCEPIIND <- fredr(series_id = "PCEPI",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
CPI <- bls_api("CUSR0000SA0", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
install_github("keberwein/blscrapeR")
library(blscrapeR)
CPI <- bls_api("CUSR0000SA0", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIUSEDCARS <- bls_api("CUSR0000SETA02", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPINEWCARS <- bls_api("CUSR0000SETA01", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIRENT <- bls_api("CUSR0000SEHA", startyear = 2019, endyear = 2021, calculations = TRUE, Sys.getenv("BLS_KEY"))
CPIORENT <- bls_api("CUSR0000SEHC", startyear = 2019, endyear = 2021, calculations = TRUE, Sys.getenv("BLS_KEY"))
CPIGAS <- bls_api("CUSR0000SETB01", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIPIPEDGAS <- bls_api("CUSR0000SEHF02", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPILODGINGHOME <- bls_api("CUSR0000SEHB", startyear = 2019, endyear = 2021, Sys.getenv("BLS_KEY"))
CPIRENT$calculations <- str_sub(CPIRENT$calculations, start= -3)
CPIRENT$calculations <- as.numeric(CPIRENT$calculations)
CPIORENT$calculations <- str_sub(CPIORENT$calculations, start= -3)
CPIORENT$calculations <- as.numeric(CPIORENT$calculations)
CPI=CPI[order(nrow(CPI):1),] #blscraper puts rows in reverse order, so I am reversing them again here
CPIUSEDCARS=CPIUSEDCARS[order(nrow(CPIUSEDCARS):1),]
CPINEWCARS=CPINEWCARS[order(nrow(CPINEWCARS):1),]
CPIRENT=CPIRENT[order(nrow(CPIRENT):1),]
CPIORENT=CPIORENT[order(nrow(CPIORENT):1),]
CPIGAS=CPIGAS[order(nrow(CPIGAS):1),]
CPIPIPEDGAS=CPIPIPEDGAS[order(nrow(CPIPIPEDGAS):1),]
CPILODGINGHOME=CPILODGINGHOME[order(nrow(CPILODGINGHOME):1),]
CPI$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIUSEDCARS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPINEWCARS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIRENT$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIORENT$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIGAS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPIPIPEDGAS$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
CPILODGINGHOME$date <- seq(as.Date("2019-01-01"), as.Date("2021-11-01"), "months")
WTI <- fredr(series_id = "DCOILWTICO",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
WTI <- drop_na(WTI)
PCEPIPCT <- fredr(series_id = "PCEPI",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #u1Rate Extended Unemployment Data
COREPCEPI <- fredr(series_id = "PCEPILFE",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #u1Rate Extended Unemployment Data
TRIMMEDPCEPI <- fredr(series_id = "PCETRIM12M159SFRBDAL",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
PCEPIIND <- fredr(series_id = "PCEPI",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #u1Rate Extended Unemployment Data
#manually adding 2% CPI growth trend for later chart on above-trend CPI
CPI$CPITREND <- c(seq(0,0,length.out = 13), 258.824*1.001652^(0:21)) #the sequence of zeroes is for the part of the chart where the trendline is excluded, and the second sequence is compounding CPI monthly at a 2% annual rate
DSPI <- fredr(series_id = "DSPI",observation_start = as.Date("2018-01-01")) #downloading Disposable Personal Income data
POUT <- fredr(series_id = "A068RC1",observation_start = as.Date("2018-01-01")) #downloading Personal Outlays
DSPITrend <- data.frame(date = c(seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")), trend = 16622.8*1.003274^(0:21)) #trend variable is just compounding income/outlays monthly at a 4% annual rate
POUTTrend <- data.frame(date = c(seq(as.Date("2020-01-01"), as.Date("2021-10-01"), "months")), trend = 15328.8*1.003274^(0:21))
ggplot() + #plotting CPI against 2% CPI trend
geom_line(data=CPI, aes(x=date,y= (value/2.52) ,color= "CPI"), size = 1.25) +
geom_line(data=CPI, aes(x=date,y= CPITREND/2.52 ,color= "2% Target"), size = 1.25, linetype = "dashed") +
geom_line(data=PCEPIIND, aes(x=date,y= (value/1.0814) ,color= "PCEPI"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(100,111.2), breaks = c(100,105,110), expand = c(0,0)) +
ylab("Consumer Price Index: January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS and BEA data",subtitle = "The CPI and PCE Price Indexes are Way Above Trend") +
theme_apricitas() + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= NULL,breaks = c("CPI","PCEPI","2% Target"),values = c("#FFE98F","#00A99D","#FFE98F","#EE6055","#A7ACD9","#9A348E"),guide=guide_legend(override.aes=list(linetype=c(1,1,2), lwd = c(1.25,1.25,.75)))) +
theme(legend.key.width =  unit(.82, "cm")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*1000), xmax = as.Date("2019-01-01")-(0.049*1000), ymin = 100-(.3*11.2), ymax = 100) +
coord_cartesian(clip = "off")
library(jptheme)
devtools::install_github("mattcowgill/jptheme")
library(jptheme)
devtools::install_github("mattcowgill/jptheme")
library(jptheme)
devtools::install_github("mattcowgill/jptheme")
devtools::install_github("mattcowgill/jptheme", dependencies = TRUE, upgrade = "always")
devtools::install_github("mattcowgill/jptheme", dependencies = TRUE, upgrade = "always")
p_unload(all)  # Remove all packages using the package manager
pacman::p_load(remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
devtools::install_github("mattcowgill/jptheme", dependencies = TRUE, upgrade = "always")
p_unload(all)  # Remove all packages using the package manager
devtools::install_github("mattcowgill/jptheme", dependencies = TRUE, upgrade = "always")
pacman::p_load(cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
devtools::install_github("mattcowgill/jptheme", dependencies = TRUE, upgrade = "always")
