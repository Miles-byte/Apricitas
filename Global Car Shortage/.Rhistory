pacman::p_load(eurostat,restatapi,bea.R,sidrar,htmltools,devtools,onsr,dplyr,seasonal,janitor,openxlsx,dplyr,BOJ,readxl,RcppRoll,DSSAT,tidyr,eia,cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
devtools::install_github("warint/statcanR")
library(statcanR)
CANADA_INDPRO <- statcan_data("36-10-0434-04", "eng") %>%
subset(`North American Industry Classification System (NAICS)`=="Motor vehicle manufacturing [3361]") %>%
subset(`Prices`=="Chained (2012) dollars") %>%
subset(`Seasonal adjustment`=="Seasonally adjusted at annual rates") %>%
subset(REF_DATE >= as.Date("2018-01-01"))
US_INDPRO <- fredr(series_id = "IPG3361S",observation_start = as.Date("2018-01-01"),realtime_start = NULL, realtime_end = NULL, aggregation_method = "m")
ggplot() + #plotting components of annual inflation
geom_line(data = CANADA_INDPRO, aes(x = REF_DATE, y = VALUE/VALUE[1]*100, color = "Canada"), size = 1.25) +
geom_line(data = US_INDPRO, aes(x = date, y = value/value[1]*100, color = "United States"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,130), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Canada, Chips, and the Car Shortage") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve and Statistics Canada data",subtitle = "Canadian Auto Production Has Suffered More Thanks to The Chip Shortage & EV Retooling") +
theme_apricitas + theme(legend.position = c(.22,.25)) +
scale_color_manual(name= "Industrial Production of Motor Vehicles",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*130), ymax = 0) +
coord_cartesian(clip = "off")
theme_apricitas <- theme_ft_rc() + #setting the "apricitas" custom theme that I use for my blog
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
US_CANADA_INDPRO_graph <- ggplot() + #plotting components of annual inflation
geom_line(data = CANADA_INDPRO, aes(x = REF_DATE, y = VALUE/VALUE[1]*100, color = "Canada"), size = 1.25) +
geom_line(data = US_INDPRO, aes(x = date, y = value/value[1]*100, color = "United States"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,130), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Canada, Chips, and the Car Shortage") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve and Statistics Canada data",subtitle = "Canadian Auto Production Has Suffered More Thanks to The Chip Shortage & EV Retooling") +
theme_apricitas + theme(legend.position = c(.22,.25)) +
scale_color_manual(name= "Industrial Production of Motor Vehicles",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*130), ymax = 0) +
coord_cartesian(clip = "off")
ggplot() + #plotting components of annual inflation
geom_line(data = CANADA_INDPRO, aes(x = REF_DATE, y = VALUE/VALUE[1]*100, color = "Canada"), size = 1.25) +
geom_line(data = US_INDPRO, aes(x = date, y = value/value[1]*100, color = "United States"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,130), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Canada, Chips, and the Car Shortage") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve and Statistics Canada data",subtitle = "Canadian Auto Production Has Suffered More Thanks to The Chip Shortage & EV Retooling") +
theme_apricitas + theme(legend.position = c(.22,.25)) +
scale_color_manual(name= "Industrial Production of Motor Vehicles",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*130), ymax = 0) +
coord_cartesian(clip = "off")
Assemblies <- fredr(series_id = "MVATOTASSS",observation_start = as.Date("2018-01-01"),realtime_start = NULL, realtime_end = NULL) %>%
mutate(Shortfall = 10.91-value) %>%
mutate(Cumulative_Shortfall = (cumsum(Shortfall)+4.5665)/12)
Assemblies_Graph <- ggplot() + #plotting auto assemblies
geom_line(data=Assemblies, aes(x=date,y= value, color = "US Total Motor Vehicle Assemblies"), size = 1.25)+
annotate(geom = "hline", y = 10.91, yintercept = 10.91, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "2019 Average", x = as.Date("2021-07-01"), y = 11.5, color ="#FFE98F") +
#geom_line(data=AssembliesNSA, aes(x=date,y= value, color = "Total Motor Vehicle Assemblies (NSA)"), size = 1.25)+
xlab("Date") +
ylab("Motor Vehicle Assemblies, Millions, Annual Rate") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), limits = c(0,14), breaks = c(0,4,8,12), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("Fixing the Assembly Line") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "Motor Vehicle Assemblies Remain Below Their Pre-Pandemic Average") +
theme_apricitas + theme(legend.position = c(0.75,0.32)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*14), ymax = 0) +
coord_cartesian(clip = "off")
Cumulative_Shortfall_Graph <- ggplot(subset(Assemblies, date > as.Date("2020-01-01")), aes(x = date, y = Cumulative_Shortfall, fill = "US Cumulative Shortfall in US Motor Vehicle Production")) + #plotting power generation
geom_bar(stat = "identity", position = "stack", color = NA, width = 32) +
xlab("Date") +
ylab("Millions of Motor Vehicles") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(0,1,2,3,4,5), limits = c(0,5), expand = c(0,0)) +
ggtitle("Falling Short") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Cumulative Shortfall in US Vehicle Production Sits at More Than 4.5 Million Units") +
theme_apricitas + theme(legend.position = c(.35,.95)) +
scale_fill_manual(name= NULL,values = c("#FFE98F","#9A348E","#EE6055","#00A99D","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-03-01")-(.1861*(today()-as.Date("2020-03-01"))), xmax = as.Date("2020-03-01")-(0.049*(today()-as.Date("2020-03-01"))), ymin = 0-(.3*5), ymax = 0) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = Assemblies_Graph, "US Assemblies Indpro.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = Cumulative_Shortfall_Graph, "US Cumulative Shortfall.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
BRAZIL_INDPRO <- get_sidra(api = "/t/7511/n1/all/v/11599/p/all/c542/129268,129269,129270,129271/d/v11599%205") %>%
select(Valor,`Mês (Código)`,`Grupos e classes industriais (Código)`) %>%
`colnames<-`(c("value","date","name")) %>%
mutate(date = as.Date(as.yearmon(date,"%Y%m"))) %>%
pivot_wider() %>%
subset(date >= as.Date("2018-01-01"))
ggplot() + #plotting mexico indpro
geom_line(data = BRAZIL_INDPRO, aes(x = date, y = `129268`/`129268`[3]*100, color = "Cars, Vans, and Utility Vehicles"), size = 1.25) +
geom_line(data = BRAZIL_INDPRO, aes(x = date, y = `129269`/`129269`[3]*100, color = "Trucks and Buses"), size = 1.25) +
#geom_line(data = BRAZIL_INDPRO, aes(x = date, y = `129270`/`129270`[1]*100, color = "Cabins, Bodies, and Trailers for Motor Vehicles"), size = 1.25) +
#geom_line(data = BRAZIL_INDPRO, aes(x = date, y = `129271`/`129271`[1]*100, color = "Parts and Accessories for Motor Vehicles"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,175), breaks = c(0,50,100,150), expand = c(0,0)) +
ylab("Index, Mar 2018 = 100") +
ggtitle("Brazil, Chips, and the Car Shortage") +
labs(caption = "Graph created by @JosephPolitano using IBGE data",subtitle = "Brazilian Car Production is Down—But Trucks and Buses Have More Than Recovered") +
theme_apricitas + theme(legend.position = c(.20,.2)) +
scale_color_manual(name= "Brazil: Industrial Production",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*175), ymax = 0) +
coord_cartesian(clip = "off")
Inventory <- fredr(series_id = "N864RX1Q020SBEA",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
Vehicle_Inventory_Graph <- ggplot() + #plotting real private auto inventories
geom_line(data=Inventory, aes(x=date,y= value,color= "Real Private Inventories: Retail trade: Motor vehicle and Parts Dealers"), size = 1.25)+
xlab("Date") +
ylab("Inventories, US Dollars") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"), limits = c(150,275), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("Dealership Inventories are Recovering") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "Vehicle Inventories Have Risen 12% From 2021 Lows") +
theme_apricitas + theme(legend.position = c(.46,.20)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
#annotate(geom = "hline", y = 0.819, yintercept = .819, color = "#FFE98F", linetype = "dashed", size = 1.25) +
#annotate(geom = "text", label = "Lowest Possible Estimate of 'Full Employment'", x = as.Date("1996-01-01"), y = 0.825, color ="#FFE98F") +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 150-(.3*125), ymax = 150) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting auto assemblies
geom_line(data=Assemblies, aes(x=date,y= value, color = "US Total Motor Vehicle Assemblies"), size = 1.25)+
annotate(geom = "hline", y = 10.91, yintercept = 10.91, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "2019 Average", x = as.Date("2021-07-01"), y = 11.5, color ="#FFE98F") +
#geom_line(data=AssembliesNSA, aes(x=date,y= value, color = "Total Motor Vehicle Assemblies (NSA)"), size = 1.25)+
xlab("Date") +
ylab("Motor Vehicle Assemblies, Millions, Annual Rate") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), limits = c(0,14), breaks = c(0,4,8,12), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("Fixing the Assembly Line") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "Motor Vehicle Assemblies Remain Below Their Pre-Pandemic Average") +
theme_apricitas + theme(legend.position = c(0.75,0.32)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*14), ymax = 0) +
coord_cartesian(clip = "off")
Assemblies_Graph <- ggplot() + #plotting auto assemblies
geom_line(data=Assemblies, aes(x=date,y= value, color = "US Total Motor Vehicle Assemblies"), size = 1.25)+
annotate(geom = "hline", y = 10.91, yintercept = 10.91, color = "#FFE98F", linetype = "dashed", size = 1.25) +
annotate(geom = "text", label = "2019 Average", x = as.Date("2021-07-01"), y = 11.5, color ="#FFE98F") +
#geom_line(data=AssembliesNSA, aes(x=date,y= value, color = "Total Motor Vehicle Assemblies (NSA)"), size = 1.25)+
xlab("Date") +
ylab("Motor Vehicle Assemblies, Millions, Annual Rate") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), limits = c(0,14), breaks = c(0,4,8,12), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("Fixing the Assembly Line") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve data", subtitle = "Motor Vehicle Assemblies Popped Above Their Pre-Pandemic Average") +
theme_apricitas + theme(legend.position = c(0.75,0.32)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*14), ymax = 0) +
coord_cartesian(clip = "off")
ggplot(subset(Assemblies, date > as.Date("2020-01-01")), aes(x = date, y = Cumulative_Shortfall, fill = "US Cumulative Shortfall in US Motor Vehicle Production")) + #plotting power generation
geom_bar(stat = "identity", position = "stack", color = NA, width = 32) +
xlab("Date") +
ylab("Millions of Motor Vehicles") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(0,1,2,3,4,5), limits = c(0,5), expand = c(0,0)) +
ggtitle("Falling Short") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Cumulative Shortfall in US Vehicle Production Sits at More Than 4.5 Million Units") +
theme_apricitas + theme(legend.position = c(.35,.95)) +
scale_fill_manual(name= NULL,values = c("#FFE98F","#9A348E","#EE6055","#00A99D","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-03-01")-(.1861*(today()-as.Date("2020-03-01"))), xmax = as.Date("2020-03-01")-(0.049*(today()-as.Date("2020-03-01"))), ymin = 0-(.3*5), ymax = 0) +
coord_cartesian(clip = "off")
Cumulative_Shortfall_Graph <- ggplot(subset(Assemblies, date > as.Date("2020-01-01")), aes(x = date, y = Cumulative_Shortfall, fill = "US Cumulative Shortfall in US Motor Vehicle Production")) + #plotting power generation
geom_bar(stat = "identity", position = "stack", color = NA, width = 32) +
xlab("Date") +
ylab("Millions of Motor Vehicles") +
scale_y_continuous(labels = scales::number_format(suffix = "M", accuracy = 1), breaks = c(0,1,2,3,4,5), limits = c(0,5), expand = c(0,0)) +
ggtitle("Falling Short") +
labs(caption = "Graph created by @JosephPolitano using BLS data", subtitle = "The Cumulative Shortfall in US Vehicle Production Sits at More Than 4.5 Million Units") +
theme_apricitas + theme(legend.position = c(.35,.95)) +
scale_fill_manual(name= NULL,values = c("#FFE98F","#9A348E","#EE6055","#00A99D","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2020-03-01")-(.1861*(today()-as.Date("2020-03-01"))), xmax = as.Date("2020-03-01")-(0.049*(today()-as.Date("2020-03-01"))), ymin = 0-(.3*5), ymax = 0) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = Cumulative_Shortfall_Graph, "US Cumulative Shortfall.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ggsave(dpi = "retina",plot = Assemblies_Graph, "US Assemblies Indpro.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
RETAIL_IS_MOTOR <- fredr(series_id = "MRTSIR441USS", observation_start = as.Date("2018-01-01"))
RETAIL_IS_EX_MOTOR <- fredr(series_id = "MRTSIR4400AUSS", observation_start = as.Date("2018-01-01"))
RETAIL_IS_MOTOR <- fredr(series_id = "MRTSIR441USS", observation_start = as.Date("2018-01-01"))
RETAIL_IS_EX_MOTOR <- fredr(series_id = "MRTSIR4400AUSS", observation_start = as.Date("2018-01-01"))
RETAIL_IS_MOTOR
ggplot() + #plotting components of annual inflation
geom_line(data = RETAIL_IS_MOTOR, aes(x = REF_DATE, y = value/value[1]*100, color = "Motor Vehicles and Parts"), size = 1.25) +
geom_line(data = RETAIL_IS_EX_MOTOR, aes(x = date, y = value/value[1]*100, color = "Excluding Motor Vehicles and Parts"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,130), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Canada, Chips, and the Car Shortage") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve and Statistics Canada data",subtitle = "Canadian Auto Production Has Suffered More Thanks to The Chip Shortage & EV Retooling") +
theme_apricitas + theme(legend.position = c(.22,.25)) +
scale_color_manual(name= "Industrial Production of Motor Vehicles",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*130), ymax = 0) +
coord_cartesian(clip = "off")
ggplot() + #plotting components of annual inflation
geom_line(data = RETAIL_IS_MOTOR, aes(x = date, y = value/value[1]*100, color = "Motor Vehicles and Parts"), size = 1.25) +
geom_line(data = RETAIL_IS_EX_MOTOR, aes(x = date, y = value/value[1]*100, color = "Excluding Motor Vehicles and Parts"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,130), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Canada, Chips, and the Car Shortage") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve and Statistics Canada data",subtitle = "Canadian Auto Production Has Suffered More Thanks to The Chip Shortage & EV Retooling") +
theme_apricitas + theme(legend.position = c(.22,.25)) +
scale_color_manual(name= "Industrial Production of Motor Vehicles",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*130), ymax = 0) +
coord_cartesian(clip = "off")
ggplot() + #plotting components of annual inflation
geom_line(data = RETAIL_IS_MOTOR, aes(x = date, y = value/value[1]*100, color = "Motor Vehicles and Parts"), size = 1.25) +
geom_line(data = RETAIL_IS_EX_MOTOR, aes(x = date, y = value/value[1]*100, color = "Excluding Motor Vehicles and Parts"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,150), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Canada, Chips, and the Car Shortage") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve and Statistics Canada data",subtitle = "Canadian Auto Production Has Suffered More Thanks to The Chip Shortage & EV Retooling") +
theme_apricitas + theme(legend.position = c(.22,.25)) +
scale_color_manual(name= "Industrial Production of Motor Vehicles",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*130), ymax = 0) +
coord_cartesian(clip = "off")
ggplot() + #plotting components of annual inflation
geom_line(data = RETAIL_IS_MOTOR, aes(x = date, y = value/value[1]*100, color = "Motor Vehicles and Parts"), size = 1.25) +
geom_line(data = RETAIL_IS_EX_MOTOR, aes(x = date, y = value/value[1]*100, color = "Excluding Motor Vehicles and Parts"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,160), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Canada, Chips, and the Car Shortage") +
labs(caption = "Graph created by @JosephPolitano using Federal Reserve and Statistics Canada data",subtitle = "Canadian Auto Production Has Suffered More Thanks to The Chip Shortage & EV Retooling") +
theme_apricitas + theme(legend.position = c(.22,.25)) +
scale_color_manual(name= "Industrial Production of Motor Vehicles",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*130), ymax = 0) +
coord_cartesian(clip = "off")
ggplot() + #plotting components of annual inflation
geom_line(data = RETAIL_IS_MOTOR, aes(x = date, y = value/value[1]*100, color = "Motor Vehicles and Parts"), size = 1.25) +
geom_line(data = RETAIL_IS_EX_MOTOR, aes(x = date, y = value/value[1]*100, color = "Excluding Motor Vehicles and Parts"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,160), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Canada, Chips, and the Car Shortage") +
labs(caption = "Graph created by @JosephPolitano using Census data",subtitle = "Canadian Auto Production Has Suffered More Thanks to The Chip Shortage & EV Retooling") +
theme_apricitas + theme(legend.position = c(.32,.25)) +
scale_color_manual(name= "Retail Inventory/Sales Ratio",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*130), ymax = 0) +
coord_cartesian(clip = "off")
ggplot() + #plotting components of annual inflation
geom_line(data = RETAIL_IS_MOTOR, aes(x = date, y = value/value[1]*100, color = "Motor Vehicles and Parts"), size = 1.25) +
geom_line(data = RETAIL_IS_EX_MOTOR, aes(x = date, y = value/value[1]*100, color = "Excluding Motor Vehicles and Parts"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,160), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Dealership Inventories are Recovering") +
labs(caption = "Graph created by @JosephPolitano using Census data",subtitle = "Canadian Auto Production Has Suffered More Thanks to The Chip Shortage & EV Retooling") +
theme_apricitas + theme(legend.position = c(.32,.25)) +
scale_color_manual(name= "Retail Inventory/Sales Ratio",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC"), breaks = c("Motor Vehicles and Parts","Exluding Motor Vehicles and Parts")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*160), ymax = 0) +
coord_cartesian(clip = "off")
ggplot() + #plotting components of annual inflation
geom_line(data = RETAIL_IS_MOTOR, aes(x = date, y = value/value[1]*100, color = "Motor Vehicles and Parts"), size = 1.25) +
geom_line(data = RETAIL_IS_EX_MOTOR, aes(x = date, y = value/value[1]*100, color = "Excluding Motor Vehicles and Parts"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,160), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Dealership Inventories are Recovering") +
labs(caption = "Graph created by @JosephPolitano using Census data",subtitle = "Canadian Auto Production Has Suffered More Thanks to The Chip Shortage & EV Retooling") +
theme_apricitas + theme(legend.position = c(.32,.25)) +
scale_color_manual(name= "Retail Inventory/Sales Ratio",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC"), breaks = c("Motor Vehicles and Parts","Excluding Motor Vehicles and Parts")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*160), ymax = 0) +
coord_cartesian(clip = "off")
ggplot() + #plotting components of annual inflation
geom_line(data = RETAIL_IS_MOTOR, aes(x = date, y = value/value[1]*100, color = "Motor Vehicles and Parts"), size = 1.25) +
geom_line(data = RETAIL_IS_EX_MOTOR, aes(x = date, y = value/value[1]*100, color = "Excluding Motor Vehicles and Parts"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,160), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Dealership Inventories are Recovering") +
labs(caption = "Graph created by @JosephPolitano using Census data",subtitle = "Inventory/Sales Have Normalized For Most Retailers, But are Still Slowly Recovering For Dealerships") +
theme_apricitas + theme(legend.position = c(.32,.25)) +
scale_color_manual(name= "Retail Inventory/Sales Ratio",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC"), breaks = c("Motor Vehicles and Parts","Excluding Motor Vehicles and Parts")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*160), ymax = 0) +
coord_cartesian(clip = "off")
RETAIL_IS_graph <- ggplot() + #plotting components of annual inflation
geom_line(data = RETAIL_IS_MOTOR, aes(x = date, y = value/value[1]*100, color = "Motor Vehicles and Parts"), size = 1.25) +
geom_line(data = RETAIL_IS_EX_MOTOR, aes(x = date, y = value/value[1]*100, color = "Excluding Motor Vehicles and Parts"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(0,160), breaks = c(0,25,50,75,100,125,150), expand = c(0,0)) +
ylab("Index, Jan 2018=100") +
ggtitle("Dealership Inventories are Recovering") +
labs(caption = "Graph created by @JosephPolitano using Census data",subtitle = "Inventory/Sales Have Normalized For Most Retailers, But are Still Slowly Recovering For Dealerships") +
theme_apricitas + theme(legend.position = c(.32,.25)) +
scale_color_manual(name= "Retail Inventory/Sales Ratio, Indexed to Jan 2018",values = c("#FFE98F","#00A99D","#EE6055","#9A348E","#A7ACD9","#3083DC"), breaks = c("Motor Vehicles and Parts","Excluding Motor Vehicles and Parts")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*160), ymax = 0) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = RETAIL_IS_graph, "Retail IS Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
NET_IMPORTS
NET_IMPORTS <- fredr(series_id = "AB63RX1Q020SBEA", observation_start = as.Date("2018-01-01"))
NET_IMPORTS
ggplot() + #plotting real private auto inventories
geom_line(data=NET_IMPORTS, aes(x=date,y= value*-1,color= "US, Net Real Imports of Motor Vehicles"), size = 1.25)+
xlab("Date") +
ylab("Billions of Chained 2012 US Dollars") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"), limits = c(150,275), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("Dealership Inventories are Recovering") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "Vehicle Inventories Have Risen 12% From 2021 Lows") +
theme_apricitas + theme(legend.position = c(.46,.20)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
#annotate(geom = "hline", y = 0.819, yintercept = .819, color = "#FFE98F", linetype = "dashed", size = 1.25) +
#annotate(geom = "text", label = "Lowest Possible Estimate of 'Full Employment'", x = as.Date("1996-01-01"), y = 0.825, color ="#FFE98F") +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 150-(.3*125), ymax = 150) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting real private auto inventories
geom_line(data=NET_IMPORTS, aes(x=date,y= value*-1,color= "US, Net Real Imports of Motor Vehicles"), size = 1.25)+
xlab("Date") +
ylab("Billions of Chained 2012 US Dollars") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"), limits = c(0,175), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("Dealership Inventories are Recovering") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "Vehicle Inventories Have Risen 12% From 2021 Lows") +
theme_apricitas + theme(legend.position = c(.46,.20)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
#annotate(geom = "hline", y = 0.819, yintercept = .819, color = "#FFE98F", linetype = "dashed", size = 1.25) +
#annotate(geom = "text", label = "Lowest Possible Estimate of 'Full Employment'", x = as.Date("1996-01-01"), y = 0.825, color ="#FFE98F") +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 150-(.3*125), ymax = 150) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting real private auto inventories
geom_line(data=NET_IMPORTS, aes(x=date,y= value*-1,color= "US Net Real Imports of Motor Vehicles"), size = 1.25)+
xlab("Date") +
ylab("Billions of Chained 2012 US Dollars") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"), limits = c(0,175), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("Dealership Inventories are Recovering") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "Vehicle Inventories Have Risen 12% From 2021 Lows") +
theme_apricitas + theme(legend.position = c(.46,.20)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
#annotate(geom = "hline", y = 0.819, yintercept = .819, color = "#FFE98F", linetype = "dashed", size = 1.25) +
#annotate(geom = "text", label = "Lowest Possible Estimate of 'Full Employment'", x = as.Date("1996-01-01"), y = 0.825, color ="#FFE98F") +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*175), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting real private auto inventories
geom_line(data=NET_IMPORTS, aes(x=date,y= value*-1,color= "US Net Real Imports of Motor Vehicles"), size = 1.25)+
xlab("Date") +
ylab("Billions of Chained 2012 US Dollars") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"), limits = c(0,175), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("Dealership Inventories are Recovering") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "Vehicle Inventories Have Risen 12% From 2021 Lows") +
theme_apricitas + theme(legend.position = c(.46,.20)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
#annotate(geom = "hline", y = 0.819, yintercept = .819, color = "#FFE98F", linetype = "dashed", size = 1.25) +
#annotate(geom = "text", label = "Lowest Possible Estimate of 'Full Employment'", x = as.Date("1996-01-01"), y = 0.825, color ="#FFE98F") +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*175), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
NET_IMPORTS_Graph <- ggplot() + #plotting real private auto inventories
geom_line(data=NET_IMPORTS, aes(x=date,y= value*-1,color= "US Net Real Imports of Motor Vehicles"), size = 1.25)+
xlab("Date") +
ylab("Billions of Chained 2012 US Dollars") +
scale_y_continuous(labels = scales::dollar_format(suffix = "B"), limits = c(0,175), expand = c(0,0)) +
#scale_x_date(limits = c(as.Date("2020-01-01"),as.Date("2021-8-01"))) +
ggtitle("US Vehicle Imports Have Recovered") +
labs(caption = "Graph created by @JosephPolitano using BEA data", subtitle = "US Vehicle Imports Hit a New Record High in Q1 2023") +
theme_apricitas + theme(legend.position = c(.46,.20)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9")) +
#annotate(geom = "hline", y = 0.819, yintercept = .819, color = "#FFE98F", linetype = "dashed", size = 1.25) +
#annotate(geom = "text", label = "Lowest Possible Estimate of 'Full Employment'", x = as.Date("1996-01-01"), y = 0.825, color ="#FFE98F") +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*175), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = NET_IMPORTS_Graph, "Net Imports Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #CAIRO GETS RID OF THE ANTI ALIASING ISSUE
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv")
pacman::p_load(seasonal,eurostat,restatapi,bea.R,sidrar,htmltools,devtools,onsr,dplyr,seasonal,janitor,openxlsx,dplyr,BOJ,readxl,RcppRoll,DSSAT,tidyr,eia,cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv")
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
ts(., start = c(2004,1), frequency = 4)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
ts(., start = c(2004,1), frequency = 4) %>%
seas()
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
ts(., start = c(2004,1), frequency = 4) %>%
seas() %>%
final() %>%
as.data.frame(value = melt(.)) %>%
mutate(date = seq(from = as.Date("2004-04-01"), to = as.Date("2004-04-01"),by = "3 months"))
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
ts(., start = c(2004,1), frequency = 4) %>%
seas() %>%
final() %>%
as.data.frame(value = melt(.)) %>%
mutate(date = seq(from = as.Date("2004-04-01"), to = as.Date("2023-04-01"),by = "3 months"))
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
ts(., start = c(2004,1), frequency = 4)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
ts(origin, start = c(2004,1), frequency = 4)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
ts(origin)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
ts(origin)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin)
data <- rnorm(20)
data
# Convert it into a time series, splitting into quarters
time_series_data <- ts(data, frequency = 4, start = c(2023, 1))
time_series_data
AUTO_LOAN_ORIGINS <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
mutate(origin = as.numeric(origin))
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
mutate(origin = as.numeric(origin)) %>%
ts(., frequency = 4, start = c(2004, 1))
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin)
AUTO_LOAN_ORIGINS <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv")
View(AUTO_LOAN_ORIGINS)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
mutate(origin = as.numeric(origin)) %>%
ts(., frequency = 4, start = c(2004, 1))
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv")
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin) %>%
mutate(origin = as.numeric(origin))
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin)
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Global%20Car%20Shortage/AUTO_LOAN_ORIGIN.csv") %>%
select(origin)
