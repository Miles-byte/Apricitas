pacman::p_load(jsonlite,INEbaseR,seasonal,cbsodataR,rsdmx,dplyr,seasonal,wiesbaden,insee,ggspatial,rnaturalearthdata,rnaturalearth,sf,ecb,eurostat,censusapi,cli,remotes,magick,cowplot,knitr,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
theme_apricitas <- theme_ft_rc() + #setting the "apricitas" custom theme that I use for my blog
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
test_login(genesis=c(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD")))
save_credentials(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD"))
FRANCE_FOOD_CONSUMPTION <- get_idbank_list("CONSO-MENAGES-2014") %>% # France Food ex-Tobacco Consumption
filter(PRODUIT_CONSO_MENAGES_label_en == "Food excepting tobacco") %>%
add_insee_title() %>%
pull(idbank) %>%
get_insee_idbank(.) %>%
add_insee_metadata() %>%
transmute(date = DATE, value = OBS_VALUE) %>%
subset(date >= as.Date("2018-01-01")) %>%
arrange(date) %>%
mutate(value = value/value[23]*100)
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
#Downloading Netherlands Consumption data
NETHERLANDS_FOOD_CONSUMPTION <- cbs_get_data('82608ENG') %>%
subset(ConsumptionByHouseholds == "A047875") %>%
filter(str_detect(`Periods`, fixed("MM", ignore_case = TRUE))) %>%
transmute(value = Indices_1) %>%
ts(., start = c(2000,1), frequency = 12) %>%
seas() %>%
final() %>%
as.data.frame(value = melt(.)) %>%
transmute(date = seq.Date(from = as.Date("2000-01-01"), by = "month", length.out = nrow(.)), value = x/x[239]*100) %>%
subset(date >= as.Date("2018-01-01"))
GERMANY_FOOD_CONSUMPTION <- retrieve_data(tablename = "81000BV016", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPVK") %>%
subset(WERT05 == "X13JDKSB") %>%
subset(CC93Z1 == "CC01-01") %>%
select(JAHR, QUARTG, VGR102_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), value = VGR102_val) %>%
arrange(date) %>%
subset(date >= as.Date("2018-01-01")) %>%
mutate(value = value/value[8]*100)
EU_FOOD_CONSUMPTION_GRAPH <- ggplot() + #plotting energy intensive manufacturing
geom_line(data=ITALY_FOOD_CONSUMPTION, aes(x=date+45,y= value,color="Italy, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco"), size = 1.25) +
geom_line(data=FRANCE_FOOD_CONSUMPTION, aes(x=date+15,y= value,color="France, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco"), size = 1.25) +
#geom_line(data=NETHERLANDS_FOOD_CONSUMPTION, aes(x=date,y= value,color="Netherlands, Real Consumption of Food, Drink, and Tobacco"), size = 1.25) +
geom_line(data=GERMANY_FOOD_CONSUMPTION, aes(x=date+45,y= value,color="Germany, Real Consumption of Food, Drink, and Tobacco"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(90,110), expand = c(0,0)) +
ylab("Index, Nov/Q4 2019 = 100") +
ggtitle("The European Food Crisis") +
labs(caption = "Graph created by @JosephPolitano using INSEE, ISTAT, and DeStatis Data",subtitle = "Rising Food Prices Have Forced European Households to Cut Back on Food Consumption") +
theme_apricitas + theme(legend.position = c(.42,.14)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Germany, Real Consumption of Food, Drink, and Tobacco","France, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco","Italy, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 90-(.3*20), ymax = 90) +
coord_cartesian(clip = "off")
setwd("~/GitHub/Apricitas/EU")
ggsave(dpi = "retina",plot = EU_FOOD_CONSUMPTION_GRAPH, "EU Food Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
httr::set_config(httr::config(timeout = 30))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
EU_FOOD_CONSUMPTION_GRAPH <- ggplot() + #plotting energy intensive manufacturing
geom_line(data=ITALY_FOOD_CONSUMPTION, aes(x=date+45,y= value,color="Italy, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco"), size = 1.25) +
geom_line(data=FRANCE_FOOD_CONSUMPTION, aes(x=date+15,y= value,color="France, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco"), size = 1.25) +
#geom_line(data=NETHERLANDS_FOOD_CONSUMPTION, aes(x=date,y= value,color="Netherlands, Real Consumption of Food, Drink, and Tobacco"), size = 1.25) +
geom_line(data=GERMANY_FOOD_CONSUMPTION, aes(x=date+45,y= value,color="Germany, Real Consumption of Food, Drink, and Tobacco"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(90,110), expand = c(0,0)) +
ylab("Index, Nov/Q4 2019 = 100") +
ggtitle("The European Food Crisis") +
labs(caption = "Graph created by @JosephPolitano using INSEE, ISTAT, and DeStatis Data",subtitle = "Rising Food Prices Have Forced European Households to Cut Back on Food Consumption") +
theme_apricitas + theme(legend.position = c(.42,.14)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Germany, Real Consumption of Food, Drink, and Tobacco","France, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco","Italy, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 90-(.3*20), ymax = 90) +
coord_cartesian(clip = "off")
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
httr::set_config(httr::config(timeout = 30))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
httr::set_config(httr::config(timeout = 50))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
httr::set_config(httr::config(timeout = 1000))
setwd("~/GitHub/Apricitas/EU")
pacman::p_load(jsonlite,INEbaseR,seasonal,cbsodataR,rsdmx,dplyr,seasonal,wiesbaden,insee,ggspatial,rnaturalearthdata,rnaturalearth,sf,ecb,eurostat,censusapi,cli,remotes,magick,cowplot,knitr,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
devtools::install_github("oddworldng/INEbaseR")
theme_apricitas <- theme_ft_rc() + #setting the "apricitas" custom theme that I use for my blog
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
test_login(genesis=c(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD")))
save_credentials(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD"))
UK_GDP <- read.csv("https://www.ons.gov.uk/generator?format=csv&uri=/economy/grossdomesticproductgdp/timeseries/abmi/ukea") %>%
`colnames<-`(c("time","values")) %>%
transmute(time = as.Date(as.yearqtr(time, "%Y Q%q")), values) %>%
subset(., values > 1)  %>%
mutate_if(is.character,as.numeric) %>%
subset(time >= as.Date("2019-07-01")) %>%
mutate(geo = "GB") %>%
group_by(geo) %>%
mutate(CAGR = (values / first(values)) ^ (1 / ((row_number() - 1) / 4)) - 1) %>%
filter(time == max(time))
DE_GDP <- read.csv("https://api.statistiken.bundesbank.de/rest/download/BBKRT/Q.DE.Y.A.AG1.CA010.A.I?format=csv&lang=en") %>%
select(ncol(.)) %>%
mutate_at(vars(ncol(.)), as.numeric) %>%
drop_na() %>%
slice(-(1:2)) %>%
setNames("values") %>%
mutate(time = seq.Date(from = as.Date("1991-01-01"), by = "3 months", length.out = nrow(.))) %>%
subset(time >= as.Date("2019-07-01")) %>%
mutate(geo = "DE") %>%
group_by(geo) %>%
mutate(CAGR = (values / first(values)) ^ (1 / ((row_number() - 1) / 4)) - 1) %>%
filter(time == max(time))
EU_GDP <- get_eurostat("namq_10_gdp")
IT_GDP <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_156_DF_DCCN_SQCQ_3,1.0/Q...../ALL/?detail=full&startPeriod=2019-07-01&dimensionAtObservation=TIME_PERIOD")) %>%
subset(NOTE_VALUATION == "VAL__L_2015_N2") %>%
subset(EDITION == EDITION[nrow(.)]) %>%
transmute(values = obsValue, time = as.Date(as.yearqtr(obsTime, "%Y-Q%q"))) %>%
mutate(geo = "IT") %>%
group_by(geo) %>%
mutate(CAGR = (values / first(values)) ^ (1 / ((row_number() - 1) / 4)) - 1) %>%
filter(time == max(time))
AL_GDP <- read.csv("http://databaza.instat.gov.al/sq/feca8039-955f-45fd-afc7-9fd78a2a1690") %>%
.[-2,] %>%
transpose() %>%
transmute(time = seq.Date(from = as.Date("2007-04-01"), by = "3 months", length = nrow(.)), values = as.numeric(V1), geo = "AL") %>%
drop_na() %>%
group_by(geo) %>%
mutate(CAGR = (values / first(values)) ^ (1 / ((row_number() - 1) / 4)) - 1) %>%
filter(time == max(time))
IS_GDP <- EU_GDP %>%
subset(unit == "CLV10_MEUR" & s_adj == "SA" & na_item == "B1GQ" & geo %in% c("IS")) %>%
select(geo, time, values) %>%
subset(time >= as.Date("2019-07-01")) %>%
arrange(geo, time) %>%
group_by(geo) %>%
mutate(CAGR = (values / first(values)) ^ (1 / ((row_number() - 1) / 4)) - 1) %>%
filter(time == max(time))
ME_GDP <- EU_GDP %>%
subset(unit == "CLV10_MEUR" & na_item == "B1GQ" & geo %in% c("ME")) %>%
select(geo, time, values) %>%
pivot_wider(names_from = geo, values_from = values) %>%
arrange(time) %>%
select(-time) %>%
ts(., start = c(2006,1), frequency = 4) %>%
seas() %>%
final() %>%
as.data.frame(value = melt(.)) %>%
transmute(time = seq(from = as.Date("2006-01-01"), by = "3 month", length = nrow(.)), values = x, geo = "ME") %>%
subset(time >= as.Date("2019-07-01")) %>%
arrange(geo, time) %>%
group_by(geo) %>%
mutate(CAGR = (values / first(values)) ^ (1 / ((row_number() - 1) / 4)) - 1) %>%
filter(time == max(time))
BA_GDP <- EU_GDP %>%
subset(unit == "CLV10_MEUR" & na_item == "B1GQ" & geo %in% c("BA")) %>%
select(geo, time, values) %>%
pivot_wider(names_from = geo, values_from = values) %>%
arrange(time) %>%
select(-time) %>%
ts(., start = c(2006,1), frequency = 4) %>%
seas() %>%
final() %>%
as.data.frame(value = melt(.)) %>%
transmute(time = seq(from = as.Date("2006-01-01"), by = "3 month", length = nrow(.)), values = x, geo = "BA") %>%
subset(time >= as.Date("2019-07-01")) %>%
arrange(geo, time) %>%
group_by(geo) %>%
mutate(CAGR = (values / first(values)) ^ (1 / ((row_number() - 1) / 4)) - 1) %>%
filter(time == max(time))
XK_GDP <- read.csv("https://askdata.rks-gov.net/sq/8980eb97-7d70-456d-be5c-30a9a576e31f") %>%
transpose() %>%
mutate(V1 = as.numeric(V1)) %>%
drop_na() %>%
arrange(desc(row_number())) %>%
ts(., start = c(2011,1), frequency = 4) %>%
seas() %>%
final() %>%
as.data.frame(value = melt(.)) %>%
transmute(time = seq.Date(from = as.Date("2011-01-01"), by = "3 months", length = nrow(.)), values = as.numeric(x), geo = "XK") %>%
drop_na() %>%
group_by(geo) %>%
mutate(CAGR = (values / first(values)) ^ (1 / ((row_number() - 1) / 4)) - 1) %>%
filter(time == max(time))
EU_GDP_CAGR <- EU_GDP %>%
subset(unit == "CLV10_MEUR" & s_adj == "SCA" & na_item == "B1GQ") %>%
select(geo, time, values) %>%
subset(time >= as.Date("2019-07-01")) %>%
arrange(geo, time) %>%
group_by(geo) %>%
mutate(CAGR = (values / first(values)) ^ (1 / ((row_number() - 1) / 4)) - 1) %>%
filter(time == max(time)) %>%
subset(!(geo %in% c("UK","DE","IT"))) %>%
mutate(geo = gsub("EL","GR",geo)) %>%
rbind(.,IS_GDP,UK_GDP,AL_GDP,ME_GDP,BA_GDP,XK_GDP,DE_GDP,IT_GDP)
EU_SHP <- ne_countries(scale = "medium", returnclass = "sf") %>%
subset(., continent == "Europe" | sovereignt %in% c("Turkey","Cyprus","Malta")) %>%
mutate(iso_a2 = ifelse(sovereignt == "Kosovo", "XK", iso_a2)) %>%
st_transform(., crs = 3035) %>%
st_as_sf() %>%
mutate(geo = iso_a2)
# EU_SHP <- get_eurostat_geospatial(resolution = 20,
#                                  nuts_level = 0,
#                                  year = 2021) %>%
#   st_transform(., crs = 3035) %>%
#   st_as_sf()
EU_GDP_CAGR_SHP <- inner_join(EU_GDP_CAGR, EU_SHP, by = "geo") %>%
select(geometry, CAGR) %>%
mutate(CAGR_bucket = cut(CAGR, breaks = c(-Inf, 0, 0.01, 0.02, 0.03, Inf), labels = c("<0", "0-0.01", "0.01-0.02", "0.02-0.03", "0.03+"))) %>%
st_as_sf()
EU_GDP_CAGR_SHP_GRAPH <- ggplot() +
geom_sf(data = EU_GDP_CAGR_SHP, color = NA, aes(fill = CAGR_bucket)) +
geom_sf(data = EU_GDP_CAGR_SHP, color = "black", fill = NA, lwd = 0.35) + # Black borders for states
scale_fill_manual(values = c("#EE6055","#F5B041","#FFE98F", "#AED581", "#00A99D"),
na.value = "grey50",
guide = "legend",
labels = c("<0%", "0-1%", "1-2%", "2-3%", "3%+")) +
ggtitle("  Annualized Real GDP
Growth Since Q3 2019") +
scale_x_continuous(limits = c(2800000, 7150000)) +
scale_y_continuous(limits = c(1380000, 5300000)) +
theme(plot.title = element_text(size = 24)) +
labs(caption = "Graph created by @JosephPolitano using Eurostat data") +
labs(fill = NULL) +
theme_apricitas + theme(legend.position = c(.75,.65), panel.grid.major=element_blank(), axis.line = element_blank(), axis.text.x = element_blank(),axis.text.y = element_blank(),plot.margin= grid::unit(c(0, 0, 0, 0), "in"), legend.key = element_blank())
ggsave(dpi = "retina",plot = EU_GDP_CAGR_SHP_GRAPH, "EU GDP Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
INSEE_dataset_list = get_dataset_list()
FRANCE_GDP_INSEE_list_selected <-
get_idbank_list("CNT-2014-PIB-EQB-RF") %>% # Gross domestic product balance
filter(OPERATION_label_en == "GDP - Gross domestic product") %>%
filter(FREQ == "T") %>% #quarter
add_insee_title() %>% #add titles
filter(cleFlow == "T.CNT-EQUILIBRE_PIB.SO.PIB.SO.VALEUR_ABSOLUE.FE.L.EUROS.CVS-CJO")#GDP
FRANCE_GDP_INSEE <- FRANCE_GDP_INSEE_list_selected %>%
pull(idbank) %>%
get_insee_idbank(.) %>%
add_insee_metadata() %>%
transmute(date = DATE, value = OBS_VALUE) %>%
subset(date >= as.Date("2018-01-01")) %>%
arrange(date) %>%
mutate(value = value/value[7]*100)
GERMANY_GDP_BUNDESBANK <- read.csv("https://api.statistiken.bundesbank.de/rest/download/BBKRT/Q.DE.Y.A.AG1.CA010.A.I?format=csv&lang=en") %>%
select(ncol(.)) %>%
mutate_at(vars(ncol(.)), as.numeric) %>%
drop_na() %>%
slice(-(1:2)) %>%
setNames("value") %>%
mutate(date = seq.Date(from = as.Date("1991-01-01"), by = "3 months", length.out = nrow(.))) %>%
subset(date >= as.Date("2018-01-01")) %>%
mutate(value = value/value[7]*100)
ITALY_GDP_ISTAT <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_156_DF_DCCN_SQCQ_3,1.0/Q...../ALL/?detail=full&startPeriod=2018-01-01&dimensionAtObservation=TIME_PERIOD")) %>%
subset(NOTE_VALUATION == "VAL__L_2015_N2") %>%
subset(EDITION == EDITION[nrow(.)]) %>%
transmute(value = obsValue, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q"))) %>%
mutate(value = value/value[7]*100)
EU_GDP_EUROSTAT <- EU_GDP %>%
filter(unit == "CLV10_MEUR" & s_adj == "SCA" & na_item == "B1GQ" & geo == "EU27_2020" & time >= as.Date("2018-01-01")) %>%
transmute(value = values, date = as.Date(as.yearqtr(time, "%Y-Q%q"))) %>%
arrange(date) %>%
mutate(value = value/value[7]*100)
SPAIN_DIR <- fromJSON("https://servicios.ine.es/wstempus/js/EN/OPERACIONES_DISPONIBLES")
SPAIN_PUB_LIST <- get_publications(lang = "en", det = 2)
SPAIN_TEST_GDP_TABLES <- get_tables(code = "237",lang = "en")
SPAIN_GDP_TABLE <- get_series(30679, resource = "table", lang = "en")
SPAIN_GDP_INE <- get_series("CNTR4851", resource = "data", nlast = 500, lang = "en") %>%
.$Data %>%
transmute(date = seq.Date(from = as.Date("1995-01-01"), by = "3 months", length.out = nrow(.)), value = Valor) %>%
subset(date >= as.Date("2018-01-01")) %>%
mutate(value = value/value[7]*100)
EU_MAIN_GDP <- ggplot() +
geom_line(data = SPAIN_GDP_INE, aes(x=date, y = value, color = "Spain"), size = 1.25) +
geom_line(data = ITALY_GDP_ISTAT, aes(x=date, y = value, color = "Italy"), size = 1.25) +
geom_line(data = FRANCE_GDP_INSEE, aes(x=date, y = value, color = "France"), size = 1.25) +
geom_line(data = GERMANY_GDP_BUNDESBANK, aes(x=date, y = value, color = "Germany"), size = 1.25) +
geom_line(data = EU_GDP_EUROSTAT, aes(x=date, y = value, color = "European Union"), size = 2.25) +
annotate("text",label = "Pre-COVID GDP", x = as.Date("2019-01-01"), y =101, color = "white", size = 4) +
annotate("hline", y = 100, yintercept = 100, color = "white", size = 1, linetype = "dashed") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(75,105), expand = c(0,0)) +
ylab("Index, Q3 2019 = 100") +
ggtitle("Eurozone GDP Growth") +
labs(caption = "Graph created by @JosephPolitano using INSEE, ISTAT, DeStatis, INE, and Eurostat Data",subtitle = "Major Economies are Slightly Larger than Pre-Pandemic but Trailing Eurozone Average Growth") +
theme_apricitas + theme(legend.position = c(.62,.24)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("European Union","Germany","France","Italy","Spain"), guide = guide_legend(override.aes = list(lwd = c(2.25,1.25, 1.25, 1.25, 1.25)))) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 75-(.3*30), ymax = 75) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = EU_MAIN_GDP, "EU Main GDP Growth Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
FRANCE_FOOD_CONSUMPTION <- get_idbank_list("CONSO-MENAGES-2014") %>% # France Food ex-Tobacco Consumption
filter(PRODUIT_CONSO_MENAGES_label_en == "Food excepting tobacco") %>%
add_insee_title() %>%
pull(idbank) %>%
get_insee_idbank(.) %>%
add_insee_metadata() %>%
transmute(date = DATE, value = OBS_VALUE) %>%
subset(date >= as.Date("2018-01-01")) %>%
arrange(date) %>%
mutate(value = value/value[23]*100)
httr::set_config(httr::config(timeout = 1000))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
#Downloading Netherlands Consumption data
NETHERLANDS_FOOD_CONSUMPTION <- cbs_get_data('82608ENG') %>%
subset(ConsumptionByHouseholds == "A047875") %>%
filter(str_detect(`Periods`, fixed("MM", ignore_case = TRUE))) %>%
transmute(value = Indices_1) %>%
ts(., start = c(2000,1), frequency = 12) %>%
seas() %>%
final() %>%
as.data.frame(value = melt(.)) %>%
transmute(date = seq.Date(from = as.Date("2000-01-01"), by = "month", length.out = nrow(.)), value = x/x[239]*100) %>%
subset(date >= as.Date("2018-01-01"))
GERMANY_FOOD_CONSUMPTION <- retrieve_data(tablename = "81000BV016", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPVK") %>%
subset(WERT05 == "X13JDKSB") %>%
subset(CC93Z1 == "CC01-01") %>%
select(JAHR, QUARTG, VGR102_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), value = VGR102_val) %>%
arrange(date) %>%
subset(date >= as.Date("2018-01-01")) %>%
mutate(value = value/value[8]*100)
EU_FOOD_CONSUMPTION_GRAPH <- ggplot() + #plotting energy intensive manufacturing
geom_line(data=ITALY_FOOD_CONSUMPTION, aes(x=date+45,y= value,color="Italy, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco"), size = 1.25) +
geom_line(data=FRANCE_FOOD_CONSUMPTION, aes(x=date+15,y= value,color="France, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco"), size = 1.25) +
#geom_line(data=NETHERLANDS_FOOD_CONSUMPTION, aes(x=date,y= value,color="Netherlands, Real Consumption of Food, Drink, and Tobacco"), size = 1.25) +
geom_line(data=GERMANY_FOOD_CONSUMPTION, aes(x=date+45,y= value,color="Germany, Real Consumption of Food, Drink, and Tobacco"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(90,110), expand = c(0,0)) +
ylab("Index, Nov/Q4 2019 = 100") +
ggtitle("The European Food Crisis") +
labs(caption = "Graph created by @JosephPolitano using INSEE, ISTAT, and DeStatis Data",subtitle = "Rising Food Prices Have Forced European Households to Cut Back on Food Consumption") +
theme_apricitas + theme(legend.position = c(.42,.14)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Germany, Real Consumption of Food, Drink, and Tobacco","France, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco","Italy, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 90-(.3*20), ymax = 90) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = EU_FOOD_CONSUMPTION_GRAPH, "EU Food Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in") #cairo gets rid of anti aliasing
httr::config()$timeout
httr::set_config(httr::config(timeout = 1000))
httr::config()$timeout
httr::set_config(httr::config(timeout = 1000))
str(httr::GET(".", config = httr::config()))
str(httr::GET(".", config = httr::config()))
str(httr::GET("http://www.google.com", config = httr::config()))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
options(timeout = max(1000, getOption("timeout")))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
?readSDMX()
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD", timeout(60))) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD", timeout(60))) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD", timeout = 60)) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
ITALY_FOOD_CONSUMPTION <- as.data.frame(readSDMX("https://esploradati.istat.it/SDMXWS/rest/data/IT1,163_24_DF_DCCN_QNA_4,1.0/Q........./ALL/?detail=full&startPeriod=2018-01-01&endPeriod=2023-03-31&dimensionAtObservation=TIME_PERIOD")) %>%
subset(EDITION == EDITION[nrow(.)]) %>%
subset(EXPEND_PURPOSE_COICOPCOFOG == "CP01" & VALUATION == "L_2015" & ADJUSTMENT == "Y") %>%
transmute(value = obsValue/obsValue[8]*100, date = as.Date(as.yearqtr(obsTime, "%Y-Q%q")))
ggplot() + #plotting energy intensive manufacturing
#geom_line(data=ITALY_FOOD_CONSUMPTION, aes(x=date+45,y= value,color="Italy, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco"), size = 1.25) +
geom_line(data=FRANCE_FOOD_CONSUMPTION, aes(x=date+15,y= value,color="France, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco"), size = 1.25) +
#geom_line(data=NETHERLANDS_FOOD_CONSUMPTION, aes(x=date,y= value,color="Netherlands, Real Consumption of Food, Drink, and Tobacco"), size = 1.25) +
geom_line(data=GERMANY_FOOD_CONSUMPTION, aes(x=date+45,y= value,color="Germany, Real Consumption of Food, Drink, and Tobacco"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(90,110), expand = c(0,0)) +
ylab("Index, Nov/Q4 2019 = 100") +
ggtitle("The European Food Crisis") +
labs(caption = "Graph created by @JosephPolitano using INSEE, ISTAT, and DeStatis Data",subtitle = "Rising Food Prices Have Forced European Households to Cut Back on Food Consumption") +
theme_apricitas + theme(legend.position = c(.42,.14)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Germany, Real Consumption of Food, Drink, and Tobacco","France, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco","Italy, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 90-(.3*20), ymax = 90) +
coord_cartesian(clip = "off")
GERMANY_FOOD_CONSUMPTION <- retrieve_data(tablename = "81000BV016", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPVK") %>%
subset(WERT05 == "X13JDKSB") %>%
subset(CC93Z1 == "CC01-01") %>%
select(JAHR, QUARTG, VGR102_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), value = VGR102_val) %>%
arrange(date) %>%
subset(date >= as.Date("2018-01-01")) %>%
mutate(value = value/value[8]*100)
GERMANY_FOOD_CONSUMPTION <- retrieve_data(tablename = "81000BV016", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPVK") %>%
subset(WERT05 == "X13JDKSB") %>%
subset(CC93Z1 == "CC01-01") %>%
select(JAHR, QUARTG, VGR102_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), value = VGR102_val) %>%
arrange(date) %>%
subset(date >= as.Date("2018-01-01")) %>%
mutate(value = value/value[8]*100)
test_login(genesis=c(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD")))
save_credentials(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD"))
GERMANY_FOOD_CONSUMPTION <- retrieve_data(tablename = "81000BV016", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPVK") %>%
subset(WERT05 == "X13JDKSB") %>%
subset(CC93Z1 == "CC01-01") %>%
select(JAHR, QUARTG, VGR102_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), value = VGR102_val) %>%
arrange(date) %>%
subset(date >= as.Date("2018-01-01")) %>%
mutate(value = value/value[8]*100)
test_login(genesis=c(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD")))
save_credentials(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD"))
GERMANY_FOOD_CONSUMPTION <- retrieve_data(tablename = "81000BV016", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPVK") %>%
subset(WERT05 == "X13JDKSB") %>%
subset(CC93Z1 == "CC01-01") %>%
select(JAHR, QUARTG, VGR102_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), value = VGR102_val) %>%
arrange(date) %>%
subset(date >= as.Date("2018-01-01")) %>%
mutate(value = value/value[8]*100)
GERMANY_FOOD_CONSUMPTION <- retrieve_data(tablename = "81000BV016", genesis=c(db='de'), language = "en")
GERMANY_FOOD_CONSUMPTION
test_login(genesis=c(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD")))
save_credentials(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD"))
GERMANY_FOOD_CONSUMPTION <- retrieve_data(tablename = "81000BV016", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPVK") %>%
subset(WERT05 == "X13JDKSB") %>%
subset(CC93Z1 == "CC01-01") %>%
select(JAHR, QUARTG, VGR102_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), value = VGR102_val) %>%
arrange(date) %>%
subset(date >= as.Date("2018-01-01")) %>%
mutate(value = value/value[8]*100)
ggplot() + #plotting energy intensive manufacturing
#geom_line(data=ITALY_FOOD_CONSUMPTION, aes(x=date+45,y= value,color="Italy, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco"), size = 1.25) +
geom_line(data=FRANCE_FOOD_CONSUMPTION, aes(x=date+15,y= value,color="France, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco"), size = 1.25) +
#geom_line(data=NETHERLANDS_FOOD_CONSUMPTION, aes(x=date,y= value,color="Netherlands, Real Consumption of Food, Drink, and Tobacco"), size = 1.25) +
#geom_line(data=GERMANY_FOOD_CONSUMPTION, aes(x=date+45,y= value,color="Germany, Real Consumption of Food, Drink, and Tobacco"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(90,110), expand = c(0,0)) +
ylab("Index, Nov/Q4 2019 = 100") +
ggtitle("The European Food Crisis") +
labs(caption = "Graph created by @JosephPolitano using INSEE, ISTAT, and DeStatis Data",subtitle = "Rising Food Prices Have Forced European Households to Cut Back on Food Consumption") +
theme_apricitas + theme(legend.position = c(.42,.14)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Germany, Real Consumption of Food, Drink, and Tobacco","France, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco","Italy, Real Consumption of Food & Nonalcoholic Drink Ex Tobacco")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 90-(.3*20), ymax = 90) +
coord_cartesian(clip = "off")
View(FRANCE_FOOD_CONSUMPTION)
