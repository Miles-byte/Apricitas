mutate_cond(Category == "Food" & date < as.Date("2022-01-01") & date > as.Date("2020-01-01"), Relative_Importance = Index_NSA/259.823*13.771) %>%
mutate_cond(Category == "Food" & date > as.Date("2022-01-01"), Relative_Importance = Index_NSA/286.966*13.37) %>%
mutate_cond(Category == "Energy" & date < as.Date("2020-01-01")& date > as.Date("2018-01-01"), Relative_Importance = Index_NSA/206.598*7.513) %>%
mutate_cond(Category == "Energy" & date < as.Date("2022-01-01") & date > as.Date("2020-01-01"), Relative_Importance = Index_NSA/212.982*6.706) %>%
mutate_cond(Category == "Energy" & date > as.Date("2022-01-01"), Relative_Importance = Index_NSA/256.207*7.348) %>%
mutate_cond(Category == "Goods_LFE" & date < as.Date("2020-01-01")& date > as.Date("2018-01-01"), Relative_Importance = Index_NSA/142.647*19.849000) %>%
mutate_cond(Category == "Goods_LFE" & date < as.Date("2022-01-01") & date > as.Date("2020-01-01"), Relative_Importance = Index_NSA/142.920*20.137000) %>%
mutate_cond(Category == "Goods_LFE" & date > as.Date("2022-01-01"), Relative_Importance = Index_NSA/160.850*21.699000) %>%
mutate_cond(Category == "Services_LE" & date < as.Date("2020-01-01")& date > as.Date("2018-01-01"), Relative_Importance = Index_NSA/322.250*59.254000) %>%
mutate_cond(Category == "Services_LE" & date < as.Date("2022-01-01") & date > as.Date("2020-01-01"), Relative_Importance = Index_NSA/341.347*59.387) %>%
mutate_cond(Category == "Services_LE" & date > as.Date("2022-01-01"), Relative_Importance = Index_NSA/359.559*57.583)
CPI_RI_ANNUAL_CALCULATIONS <- pivot_wider(select(CPI_CONTRIBUTION, - Index_NSA), names_from = "Category", values_from = Relative_Importance) %>%
pivot_longer(cols = c("All","Food","Energy","Goods_LFE","Services_LE")) %>%
arrange(match(name, c("All","Food","Energy","Goods_LFE","Services_LE")))
CPI_CONTRIBUTION_ANNUAL <- CPI_CONTRIBUTION
CPI_CONTRIBUTION_ANNUAL$Relative_Importance <- CPI_RI_ANNUAL_CALCULATIONS$value
CPI_CONTRIBUTION_ANNUAL <- drop_na(CPI_CONTRIBUTION_ANNUAL)
# write.csv(CPI_CONTRIBUTION, "RI and Contrib.csv")
#making updated relative importance calculations
CPI_RI_FINAL_CALCULATIONS <- pivot_wider(select(CPI_CONTRIBUTION, - Index_NSA), names_from = "Category", values_from = Relative_Importance) %>%
mutate(Food = Food/All*100) %>%
mutate(Energy = Energy/All*100) %>%
mutate(Goods_LFE = Goods_LFE/All*100) %>%
mutate(Services_LE = Services_LE/All*100) %>%
mutate(All = All/All*100) %>%
pivot_longer(cols = c("All","Food","Energy","Goods_LFE","Services_LE")) %>%
arrange(match(name, c("All","Food","Energy","Goods_LFE","Services_LE")))
CPI_CONTRIBUTION$Relative_Importance <- CPI_RI_FINAL_CALCULATIONS$value
CPI_CONTRIBUTION <- drop_na(CPI_CONTRIBUTION)
#CPI_CONTRIBUTION$January <- JANUARY$value
#adding seasonally adjusted data for seasonally adjusted monthly charts
CPI_ALL_SA <- bls_api("CUSR0000SA0", startyear = 2017, endyear = 2023, Sys.getenv("BLS_KEY")) %>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(Category = "All") %>%
subset(date >= as.Date("2017-12-01")) %>%
select(date, value, Category)
CPI_FOOD_SA <- bls_api("CUSR0000SAF1", startyear = 2017, endyear = 2023, Sys.getenv("BLS_KEY")) %>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(Category = "Food") %>%
subset(date >= as.Date("2017-12-01")) %>%
select(date, value, Category)
CPI_ENERGY_SA <- bls_api("CUSR0000SA0E", startyear = 2017, endyear = 2023, Sys.getenv("BLS_KEY")) %>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(Category = "Energy") %>%
subset(date >= as.Date("2017-12-01")) %>%
select(date, value, Category)
CPI_COM_LFE_SA <- bls_api("CUSR0000SACL1E", startyear = 2017, endyear = 2023, Sys.getenv("BLS_KEY")) %>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(Category = "Goods_LFE") %>%
subset(date >= as.Date("2017-12-01")) %>%
select(date, value, Category)
CPI_SERV_LE_SA <- bls_api("CUSR0000SASLE", startyear = 2017, endyear = 2023, Sys.getenv("BLS_KEY")) %>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(Category = "Services_LE") %>%
subset(date >= as.Date("2017-12-01")) %>%
select(date, value, Category)
#
# CPI_ALL_SA <- fredr(series_id = "CUSR0000SA0",observation_start = as.Date("2017-12-01")) %>%
#   mutate(Category = "All") %>%
#   select(date,value,Category)
# CPI_FOOD_SA <- fredr(series_id = "CPIUFDSL",observation_start = as.Date("2017-12-01")) %>%
#   mutate(Category = "Food")%>%
#   select(date,value,Category)
# CPI_ENERGY_SA <- fredr(series_id = "CPIENGSL",observation_start = as.Date("2017-12-01"))%>%
#   mutate(Category = "Energy")%>%
#   select(date,value,Category)
# CPI_COM_LFE_SA <- fredr(series_id = "CUSR0000SACL1E",observation_start = as.Date("2017-12-01"))%>%
#   mutate(Category = "Goods_LFE")%>%
#   select(date,value,Category)
# CPI_SERV_LE_SA <- fredr(series_id = "CUSR0000SASLE",observation_start = as.Date("2017-12-01"))%>%
#   mutate(Category = "Services_LE")%>%
#   select(date,value,Category)
CPI_Indices_SA <- rbind(CPI_ALL_SA,CPI_FOOD_SA,CPI_ENERGY_SA,CPI_COM_LFE_SA,CPI_SERV_LE_SA)
# JANUARY <- CPI_Indices_SA %>% #sometimes YOY calculations cross a weight update so I am creating a column for just the January relative importance data
#   filter(month(ymd(date)) %in% c(1)) %>%
#   rowwise() %>%
#   mutate(date = list(seq.Date(date,date + months(11), by = 'month'))) %>%
#   unnest(cols = c(date)) %>%
#   subset(date <= as.Date("2023-01-01"))
CPI_Indices_SA <- subset(CPI_Indices_SA, date > as.Date("2017-12-01"))
CPI_CONTRIBUTION_FINAL <- CPI_CONTRIBUTION %>%
subset(., date > as.Date("2017-12-01")) %>%
mutate(Index_SA = CPI_Indices_SA$value) %>%
#mutate(January = JANUARY$value) %>%
mutate(Monthly_Contribution_NSA = (Index_NSA/lead(Index_NSA))*lead(Relative_Importance)-lead(Relative_Importance)) %>%
mutate(Monthly_Contribution_SA = (Index_SA/lead(Index_SA))*lead(Relative_Importance)-lead(Relative_Importance)) %>%
#mutate(January_Contribution_NSA = lag(Relative_Importance,13)*(January-lag(Index_SA,12))/lag(Index_SA,12) + lag(Relative_Importance)*((Index_SA-January)/January)) %>%
#mutate(January_Contribution_NSA = lag(Relative_Importance,12)*(January-lag(Index_SA,12))/lag(Index_SA,12) + lag(Relative_Importance)*((Index_SA-January)/January)) %>%
mutate(Yearly_Contribution = (Index_NSA/lead(Index_NSA,12))*lead(Relative_Importance,12)-lead(Relative_Importance,12)) %>%
drop_na() %>%
subset(date >= as.Date("2019-01-01"))
# ALL <- subset(CPI_CONTRIBUTION_ANNUAL, Category == "All") %>%
#   mutate(All = Relative_Importance) %>%
#   select(date, All) %>%
#   bind_rows(replicate(3, ., simplify = FALSE))
#
# JANUARY_ALL <- ALL %>% #sometimes YOY calculations cross a weight update so I am creating a column for just the January relative importance data
#   filter(month(ymd(date)) %in% c(1)) %>%
#   rowwise() %>%
#   mutate(date = list(seq.Date(date,date + months(11), by = 'month'))) %>%
#   unnest(cols = c(date))
#
# JANUARY_RI <- CPI_CONTRIBUTION_ANNUAL %>% #sometimes YOY calculations cross a weight update so I am creating a column for just the January relative importance data
#   subset(Category != "All") %>%
#   select(date, Category, Relative_Importance) %>%
#   filter(month(ymd(date)) %in% c(1)) %>%
#   rowwise() %>%
#   mutate(date = list(seq.Date(date,date + months(11), by = 'month'))) %>%
#   unnest(cols = c(date))
#CPI_CONTRIBUTION_JANUARY <- CPI_CONTRIBUTION_ANNUAL %>%
#mutate(Index_SA = CPI_Indices_SA$value) %>%
#subset(Category != "All") %>%
#mutate(JanuaryALL = JANUARY_ALL$All) %>%
#mutate(JanuaryRI = as.numeric(JANUARY_RI$Relative_Importance)) %>%
#mutate(All = ALL$All) %>%
#mutate(January_Contribution_NSA = lag(Relative_Importance,13)*((January-lag(Index_SA,12))/lag(Index_SA,12)) + lag(Relative_Importance)*((Index_SA-January)/January)) %>%
#mutate(All_January_Contribution_NSA = JANUARY_RI*lag(All,12)) %>%
#mutate(All_January_Contribution_NSA = (JANUARY_RI/lag(All,12)-(lag(Relative_Importance,12)/lag(All,12)))+(Relative_Importance/JANUARY_ALL - JANUARY_RI/JANUARY_ALL)) %>%
#select(date,Category,All_January_Contribution_NSA) %>%
#subset(Category != "All") %>%
#subset(date >= as.Date("2019-02-01")) %>%
#pivot_wider(names_from = Category, values_from = January_Contribution_NSA) %>%
#mutate()
#write.csv(CPI_CONTRIBUTION_FINAL,"CPICONTRIBFINAL.csv")
# CPI_CONTRIBUTION_JANUARY <- CPI_CONTRIBUTION_FINAL %>%
#   select(date,Category,January_Contribution_NSA) %>%
#   subset(Category != "All") %>%
#   subset(date >= as.Date("2019-02-01")) %>%
#   pivot_wider(names_from = Category, values_from = January_Contribution_NSA) #%>%
#   #mutate(Total = CPI_YOY_GROWTH$value) %>%
#   #mutate(test = Food + Energy + Goods_LFE + Services_LE - Total) %>%
#   #mutate(Food = Food *(Food + Energy + Goods_LFE + Services_LE)/Total) %>%
#   #mutate(Energy = Energy *(Food + Energy + Goods_LFE + Services_LE)/Total) %>%
#   #mutate(Goods_LFE = Goods_LFE *(Food + Energy + Goods_LFE + Services_LE)/Total) %>%
#   #mutate(Services_LE = Services_LE *(Food + Energy + Goods_LFE + Services_LE)/Total) %>%
#mutate(test = Food + Energy + Goods_LFE + Services_LE - Total)
# CPI_CONTRIBUTION_JANUARY_GRAPH <- ggplot() + #plotting components of annual inflation
#   geom_bar(data = subset(CPI_CONTRIBUTION_FINAL, Category != "All"), aes(x = date, y = January_Contribution_NSA/100, fill = Category), color = NA, size = 0, stat= "identity") +
#   #geom_line(data=CPI_YOY_GROWTH, aes(x=date, y=value/100, color="Annual Inflation"), size = 1.25) +
#   annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
#   xlab("Date") +
#   scale_y_continuous(labels = scales::percent_format(accuracy = 0.5),limits = c(-.025,.1), breaks = c(-.025,0,.025,.05,.075,.1), expand = c(0,0)) +
#   ylab("Annual Inflation, Percent") +
#   ggtitle("Pandemic Prices") +
#   labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Inflation is Now Mostly a Story about Food and Core Services Prices") +
#   theme_apricitas + theme(legend.position = c(.25,.80)) +
#   scale_fill_manual(name= "Contributions to Annual CPI Inflation",values = c("#FFE98F","#9A348E","#EE6055","#00A99D","#A7ACD9","#3083DC"), breaks = c("Services_LE","Goods_LFE","Energy","Food"), labels = c("Core Services","Core Goods","Energy","Food")) +
#   #scale_color_manual(name = NULL,values = c("#A7ACD9")) +
#   annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = -0.025-(.3*.125), ymax = -0.025) +
#   coord_cartesian(clip = "off")
# ggsave(dpi = "retina",plot = CPI_CONTRIBUTION_JANUARY_GRAPH, "CPI January.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
CPI_CONTRIBUTION_ANNUAL_GRAPH <- ggplot() + #plotting components of annual inflation
geom_bar(data = subset(CPI_CONTRIBUTION_FINAL, Category != "All"), aes(x = date, y = Yearly_Contribution/100, fill = Category), color = NA, size = 0, stat= "identity") +
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.5),limits = c(-.025,.1), breaks = c(-.025,0,.025,.05,.075,.1), expand = c(0,0)) +
ylab("Annual Inflation, Percent") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Inflation Now Mostly Comes From Increases in Food and Core Services Prices") +
theme_apricitas + theme(legend.position = c(.25,.80)) +
scale_fill_manual(name= "Contributions to Annual CPI Inflation",values = c("#FFE98F","#9A348E","#EE6055","#00A99D","#A7ACD9","#3083DC"), breaks = c("Services_LE","Goods_LFE","Energy","Food"), labels = c("Core Services","Core Goods","Energy","Food")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = -0.025-(.3*.125), ymax = -0.025) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = CPI_CONTRIBUTION_ANNUAL_GRAPH, "CPI Annual.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
CPI_CONTRIBUTION_MONTHLY_NSA_GRAPH <- ggplot() + #plotting components of monthly inflation
geom_bar(data = subset(CPI_CONTRIBUTION_FINAL, Category != "All"), aes(x = date, y = Monthly_Contribution_NSA/100, fill = Category), color = NA, size = 0, stat= "identity") +
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.5),limits = c(-.01,.015), breaks = c(-.01,-0.005,0,0.005,.01,.015), expand = c(0,0)) +
ylab("Monthly Inflation, Percent") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Dropping Energy Prices Pulled Inflation Down In August") +
theme_apricitas + theme(legend.position = c(.45,.80)) +
scale_fill_manual(name= "Contributions to Monthly CPI Inflation (NSA)",values = c("#FFE98F","#9A348E","#EE6055","#00A99D","#A7ACD9","#3083DC"), breaks = c("Services_LE","Goods_LFE","Energy","Food"), labels = c("Core Services","Core Goods","Energy","Food")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = -0.01-(.3*.025), ymax = -0.01) +
coord_cartesian(clip = "off")
CPI_CONTRIBUTION_ANNUAL %>% subset(CPI_CONTRIBUTION_ANNUAL, date>= as.Date("2019-01-01"))
CPI_CONTRIBUTION_MONTHLY_SA_GRAPH <- ggplot() + #plotting components of monthly inflation
geom_bar(data = subset(CPI_CONTRIBUTION_FINAL, Category != "All" & date >= as.Date("2019-01-01")), aes(x = date, y = Monthly_Contribution_SA/100, fill = Category), color = NA, size = 0, stat= "identity") +
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.5),limits = c(-.01,.015), breaks = c(-.01,-0.005,0,0.005,.01,.015), expand = c(0,0)) +
ylab("Monthly Inflation, Percent") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Monthly Inflation is Now Mostly a Core Services Story") +
theme_apricitas + theme(legend.position = c(.45,.80)) +
scale_fill_manual(name= "Contributions to Monthly CPI Inflation",values = c("#FFE98F","#9A348E","#EE6055","#00A99D","#A7ACD9","#3083DC"), breaks = c("Services_LE","Goods_LFE","Energy","Food"), labels = c("Core Services","Core Goods","Energy","Food")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = -0.01-(.3*.025), ymax = -0.01) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = CPI_CONTRIBUTION_MONTHLY_SA_GRAPH, "CPI RENT Contrib SA.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
ZORI <- read.csv("https://files.zillowstatic.com/research/public_csvs/zori/Metro_zori_sm_month.csv?t=1665666510") %>%
select(-RegionID, -SizeRank, - RegionType, - StateName) %>%
subset(RegionName == "United States") %>%
#transpose() %>%
gather(key = "date", value = "value", -1) %>%
#`colnames<-`(.[1, ]) %>%
mutate(date = c(seq(as.Date("2015-01-01"), length = nrow(.), by = "months"))) %>%
#.[-1, ] %>%
mutate(value = (value-lag(value,12))/lag(value,12))
CPIRENT <- bls_api("CUSR0000SEHA", startyear = 2017, endyear = 2023, calculations = TRUE, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(value = (value-lead(value,12))/lead(value,12))  %>%
subset(date >= as.Date("2019-01-01")) #cpi rent data
CPIORENT <- bls_api("CUSR0000SEHC", startyear = 2017, endyear = 2023, calculations = TRUE, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(value = (value-lead(value,12))/lead(value,12)) %>%
subset(date >= as.Date("2019-01-01"))
#cpi owners equivalent rent
ApartmentList <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Repeat%20Use%20Charts/CPI%20Releases/091322/apartmentlist.csv") %>%
mutate(date = as.Date(date, "%m/%d/%Y"))
NTRR <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/NTRR/NTRR.csv") %>%
mutate(date = as.Date(date))
CPI_Rent_Zillow <- ggplot() + #plotting Rent and Owner's Equivalent Rent Price Growth
annotate("hline", y = 0, yintercept = 0, color = "white", size = .5) +
geom_line(data=CPIRENT, aes(x=date,y= (value) ,color= "CPI Rent"), size = 1.25) +
geom_line(data=CPIORENT, aes(x=date,y= (value) ,color= "CPI Owner's Equivalent Rent"), size = 1.25) +
geom_line(data=subset(ZORI, date >= as.Date("2018-01-01")), aes(x=date+365,y= (value) ,color= "Zillow Observed Rent Index, Lagged 1 Year"), size = 1.25) +
geom_line(data=subset(ApartmentList, date >= as.Date("2018-01-01")), aes(x=date+365,y= annualpct ,color= "ApartmentList Median New Lease, Lagged 1 Year"), size = 1.25) +
#geom_line(data=subset(NTRR,date > as.Date("2018-01-01")), aes(x=date+365,y= NTRR/100,color= "New Tenant Repeat Rent Index, Lagged 1 Year"), size = 1.25)+
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1),limits = c(-0.025,.20), breaks = c(0,.05,0.1,0.15,0.2), expand = c(0,0)) +
ylab("Percent Change From a Year Ago, %") +
ggtitle("Leading Indicators Show Rent Deceleration") +
labs(caption = "Graph created by @JosephPolitano using BLS,Zillow, and ApartmentList data",subtitle = "Zillow and ApartmentList Data Show Rent Growth Decelerating Significantly Over the Last Year") +
theme_apricitas + theme(legend.position = c(.32,.70)) +
scale_color_manual(name= NULL,values = c("#00A99D","#FFE98F","#EE6055","#A7ACD9","#9A348E"), breaks = c("CPI Rent","CPI Owner's Equivalent Rent","Zillow Observed Rent Index, Lagged 1 Year","ApartmentList Median New Lease, Lagged 1 Year","New Tenant Repeat Rent Index, Lagged 1 Year")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()+365-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()+365-as.Date("2019-01-01"))), ymin = -0.025-(.3*0.225), ymax = -0.025) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = CPI_Rent_Zillow, "CPI RENT ZILLOW.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
CPIPCT <- bls_api("CUUR0000SA0", startyear = 2017, endyear = 2023, calculations = TRUE, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(value = (value-lead(value,12))/lead(value,12))  %>%
subset(date >= as.Date("2019-01-01")) #cpi rent data
CPILFEPCT <- bls_api("CUUR0000SA0L1E", startyear = 2017, endyear = 2023, calculations = TRUE, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(value = (value-lead(value,12))/lead(value,12)) %>%
subset(date >= as.Date("2019-01-01"))
CPIPCT_Graph <- ggplot() + #plotting CPI/PCEPI against 2% CPI trend
geom_line(data=CPILFEPCT, aes(x=date,y= value,color= "Core CPI"), size = 1.25) +
geom_line(data=CPIPCT, aes(x=date,y= value,color= "CPI"), size = 1.25) +
# annotate("vline", x= as.Date("2022-08-01"), xintercept= as.Date("2022-08-01"), color = "white", size = 1.25, linetype = "dashed") +
# annotate("text",label = "Inflation Reduction Act Signed", x= as.Date("2021-09-01"), y = 0.0075, color = "white", size = 5.5) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,0.091), breaks = c(0,0.03,0.06,0.09), expand = c(0,0)) +
ylab("Percent Change From Year Ago") +
ggtitle("The Inflation Situation") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Inflation Is Coming Down Off a 40 Year High") +
theme_apricitas + theme(legend.position = c(.40,.50)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#FFE98F","#EE6055","#A7ACD9","#9A348E"), breaks = c("CPI","Core CPI")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 0-(.3*0.091), ymax = 0) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = CPIPCT_Graph, "CPI PCT.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
Manheim_Bulk <- read.xlsx("https://site.manheim.com/wp-content/uploads/sites/2/2023/07/June-2023-MUVVI-Spreadsheet.xlsx") %>%
mutate(date = seq.Date(from = as.Date("1997-01-01"), by = "month", length.out = nrow(.))) %>%
subset(date >= as.Date("2018-11-01"))
CPIUSEDCARS <- bls_api("CUSR0000SETA02", startyear = 2017, endyear = 2023, calculations = TRUE, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
subset(date >= as.Date("2019-01-01"))
CPI_Manheim_Used_Car_Vehicles_Graph <- ggplot() + #plotting "Used Cars and Trucks" and "Mannheim" price Indexes
geom_line(data=CPIUSEDCARS, aes(x=date,y= (value/value[nrow(CPIUSEDCARS)])*100 ,color= "CPI: Used Cars and Trucks"), size = 1.25) +
geom_line(data=subset(Manheim_Bulk, date > as.Date("2018-12-31")), aes(x=date,y= (`Index.(1/97.=.100)`/`Index.(1/97.=.100)`[1])*100 ,color= "Manheim Used Vehicles Value Index"), size = 1.25) +
xlab("Date") +
scale_y_continuous(limits = c(90,180), breaks = c(90,120,150,180), expand = c(0,0)) +
ylab("Index, January 2019 = 100") +
ggtitle("Pandemic Prices") +
labs(caption = "Graph created by @JosephPolitano using BLS and Manheim data",subtitle = "Manheim Wholesale Data Could Be Giving Early Indications of Movements in Used Car Prices") +
theme_apricitas + theme(legend.position = c(.25,.85)) +
scale_color_manual(name= "January 2019 = 100",values = c("#00A99D","#FFE98F","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 90-(.3*90), ymax = 90) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = CPI_Manheim_Used_Car_Vehicles_Graph, "CPI Manheim Used Vehicles.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
CPIRENTmonth <- bls_api("CUSR0000SEHA", startyear = 2018, endyear = 2023, calculations = TRUE, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(value = (value-lead(value,1))/lead(value,1)) %>%
subset(date >= as.Date("2019-01-01"))
CPIOERmonth <- bls_api("CUSR0000SEHC", startyear = 2018, endyear = 2023, calculations = TRUE, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) %>%
mutate(value = (value-lead(value,1))/lead(value,1)) %>%
subset(date >= as.Date("2019-01-01"))
CPI_Rent_Month <- ggplot() + #plotting Rent and Owner's Equivalent Rent Price Growth
geom_line(data=CPIRENTmonth, aes(x=date,y= (value) ,color= "CPI Rent: Monthly Percentage Growth"), size = 1.25) +
geom_line(data=CPIOERmonth, aes(x=date,y= (value) ,color= "CPI Owner's Equivalent Rent: Monthly Percentage Growth"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::percent_format(accuracy = .25),limits = c(0,.0090), breaks = c(0,.0025,0.005,.0075), expand = c(0,0)) +
ylab("Monthly Percent Growth, %") +
ggtitle("Housing Inflation is Cooling") +
labs(caption = "Graph created by @JosephPolitano using BLS data",subtitle = "Official Housing Price Growth is Decelerating, Though Remains Elevated") +
theme_apricitas + theme(legend.position = c(.36,.80)) +
scale_color_manual(name= NULL,values = c("#00A99D","#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"),breaks = c("CPI Rent: Monthly Percentage Growth","CPI Owner's Equivalent Rent: Monthly Percentage Growth")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2019-01-01")-(.1861*(today()-as.Date("2019-01-01"))), xmax = as.Date("2019-01-01")-(0.049*(today()-as.Date("2019-01-01"))), ymin = 0-(.3*0.009), ymax = 0.00) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = CPI_Rent_Month, "CPI Rent Month.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
cat("\014")  # ctrl+L
rm(list = ls())
read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Understanding%20Inflation%20Expectations/ATL_BIE_1YR.csv") %>%
mutate(date = as.Date(date))
BIE_1YR <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Understanding%20Inflation%20Expectations/ATL_BIE_1YR.csv") %>%
mutate(date = as.Date(date))
ggplot() + #plotting total quits
geom_line(data=BIE_1YR, aes(x=date,y= bie,color= "Business Unit Cost Inflation Expectations: Next Year"), size = 1.25)+
xlab("Date") +
ylab("Percent") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,.05), breaks = c(0,.01,.02,.03,.04,.05), expand = c(0,0)) +
ggtitle("Inflation Expectations are Falling") +
labs(caption = "Graph created by @JosephPolitano using Atlanta Fed data", subtitle = "Business Unit Cost Inflation Expectations Remain Elevated") +
theme_apricitas + theme(legend.position = c(.47,.84)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9"), breaks = c("Business Unit Cost Inflation Expectations: Next Year","Business Unit Cost Inflation Expectations: Next 5-10 Years")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2011-10-21")-(.1861*(today()-as.Date("2011-10-21"))), xmax = as.Date("2011-10-21")-(0.049*(today()-as.Date("2011-10-21"))), ymin = 0-(.3*.05), ymax = 0) +
coord_cartesian(clip = "off")
pacman::p_load(tidyverse,janitor,bea.R,readxl,RcppRoll,DSSAT,tidyr,eia,cli,remotes,magick,cowplot,knitr,ghostscript,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
install.packages("quantmod")
install.packages("cli")
install_github("keberwein/blscrapeR")
library(blscrapeR)
CPI <- bls_api("CUSR0000SA0", startyear = 2019, endyear = 2022, Sys.getenv("BLS_KEY")) %>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))
CPIUSEDCARS <- bls_api("CUSR0000SETA02", startyear = 2019, endyear = 2023, Sys.getenv("BLS_KEY")) %>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))#cpi used cars data
CPINEWCARS <- bls_api("CUSR0000SETA01", startyear = 2019, endyear = 2023, Sys.getenv("BLS_KEY")) %>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y")))#cpi new cars data
CPIRENT <- bls_api("CUSR0000SEHA", startyear = 2019, endyear = 2023, calculations = TRUE, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) #cpi rent data
CPIORENT <- bls_api("CUSR0000SEHC", startyear = 2019, endyear = 2023, calculations = TRUE, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) #cpi owners equivalent rent
CPIGAS <- bls_api("CUSR0000SETB01", startyear = 2019, endyear = 2022, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) #cpi gasoline data
CPIPIPEDGAS <- bls_api("CUSR0000SEHF02", startyear = 2019, endyear = 2022, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) #cpi piped gas data
CPILODGINGHOME <- bls_api("CUSR0000SEHB", startyear = 2019, endyear = 2022, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) #cpi lodging away from home data
CPIDURABLE <- bls_api("CUSR0000SAD", startyear = 2005, endyear = 2022, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) #cpi durables data
CPISERVICE <- bls_api("CUSR0000SAS", startyear = 2005, endyear = 2022, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) #cpi services data
CPIBREAD <- bls_api("CUUR0000SEFB01", startyear = 2005, endyear = 2022, Sys.getenv("BLS_KEY"))%>% #headline cpi data
mutate(date = as.Date(as.yearmon(paste(periodName, year), "%b %Y"))) #CPI Bread data
CPIRent <- fredr(series_id = "CUSR0000SEHA",observation_start = as.Date("2019-01-01"), units = "pc1")
CPIServicesLessRent <- fredr(series_id = "CUSR0000SASL2RS",observation_start = as.Date("2019-01-01"), units = "pc1")
CPIRENTmonth <- fredr(series_id = "CUSR0000SEHA",observation_start = as.Date("2019-01-01"), units = "pch")
CPIOERmonth <- fredr(series_id = "CUSR0000SEHC",observation_start = as.Date("2019-01-01"), units = "pch")
US_Regular_All_Form_Gas <- fredr(series_id = "GASREGW",observation_start = as.Date("2019-01-01"))
CPIRENT$calculations <- str_sub(CPIRENT$calculations, start= -3) #correcting percent growth calculations to remove excess data and convert to numeric
CPIRENT$calculations <- as.numeric(CPIRENT$calculations)
CPIORENT$calculations <- str_sub(CPIORENT$calculations, start= -3)
CPIORENT$calculations <- as.numeric(CPIORENT$calculations)
CPI=CPI[order(nrow(CPI):1),] #blscraper puts rows in reverse order, so I am reversing them again here
#CPIUSEDCARS=CPIUSEDCARS[order(nrow(CPIUSEDCARS):1),]
#CPINEWCARS=CPINEWCARS[order(nrow(CPINEWCARS):1),]
#CPIRENT=CPIRENT[order(nrow(CPIRENT):1),]
#CPIORENT=CPIORENT[order(nrow(CPIORENT):1),]
#CPIGAS=CPIGAS[order(nrow(CPIGAS):1),]
#CPIPIPEDGAS=CPIPIPEDGAS[order(nrow(CPIPIPEDGAS):1),]
#CPILODGINGHOME=CPILODGINGHOME[order(nrow(CPILODGINGHOME):1),]
#CPIDURABLE=CPIDURABLE[order(nrow(CPIDURABLE):1),]
#CPISERVICE=CPISERVICE[order(nrow(CPISERVICE):1),]
#CPI$date <- seq(as.Date("2019-01-01"), as.Date("2021-12-01"), "months") #adding a "date" sequence. Note: manual backup, do not use unless initial mutates do not work
#CPIUSEDCARS$date <- seq(as.Date("2019-01-01"), as.Date("2021-12-01"), "months")
#CPINEWCARS$date <- seq(as.Date("2019-01-01"), as.Date("2021-12-01"), "months")
#CPIRENT$date <- seq(as.Date("2019-01-01"), as.Date("2021-12-01"), "months")
#CPIORENT$date <- seq(as.Date("2019-01-01"), as.Date("2021-12-01"), "months")
#CPIGAS$date <- seq(as.Date("2019-01-01"), as.Date("2021-12-01"), "months")
#CPIPIPEDGAS$date <- seq(as.Date("2019-01-01"), as.Date("2021-12-01"), "months")
#CPILODGINGHOME$date <- seq(as.Date("2019-01-01"), as.Date("2021-12-01"), "months")
#CPIDURABLE$date <- seq(as.Date("2005-01-01"), as.Date("2021-12-01"), "months")
#PISERVICE$date <- seq(as.Date("2005-01-01"), as.Date("2021-12-01"), "months")
#FRED Backups
#CPIUSEDCARS <- fredr(series_id = "CUSR0000SETA02",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
#CPINEWCARS <- fredr(series_id = "CUSR0000SETA01",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
#CPIRENT <- fredr(series_id = "CUSR0000SEHA",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1")
#CPIOERENT <- fredr(series_id = "CUSR0000SEHC",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1")
#CPI <- fredr(series_id = "CPIAUCSL",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
PPIIDC <- fredr(series_id = "PPIIDC",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
#PROFIT_MARGIN <- fredr(series_id = "A463RD3Q052SBEA",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL)
PCE <- fredr(series_id = "PCE",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #personal consumption expenditured data
PCEGD <- fredr(series_id = "DGDSRC1",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #pce goods data
PCESV <- fredr(series_id = "PCES",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #pce services data
CPIGAS <- fredr(series_id = "CUUR0000SETB01",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #WTI oil prices data
CPIBreadCereal <- fredr(series_id = "CUUR0000SAF111",observation_start = as.Date("2005-01-01"),realtime_start = NULL, realtime_end = NULL)
FIVEYEARBREAKEVEN <- fredr(series_id = "T5YIE",observation_start = as.Date("2003-01-01"),realtime_start = NULL, realtime_end = NULL) #5 Year Inflation Breakevens data
FIVEYEARFWDBREAKEVEN <- fredr(series_id = "T5YIFR",observation_start = as.Date("2003-01-01"),realtime_start = NULL, realtime_end = NULL) # 5 year 5 year forward breakevens data
FIVEYEARBREAKEVEN <- drop_na(FIVEYEARBREAKEVEN)
FIVEYEARFWDBREAKEVEN <- drop_na(FIVEYEARFWDBREAKEVEN)
FIVEYEARBREAKEVEN2019 <- fredr(series_id = "T5YIE", observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #5 Year Inflation Breakevens data
FIVEYEARFWDBREAKEVEN2019 <- fredr(series_id = "T5YIFR",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) # 5 year 5 year forward breakevens data
FIVEYEARBREAKEVEN2019 <- drop_na(FIVEYEARBREAKEVEN2019)
FIVEYEARFWDBREAKEVEN2019 <- drop_na(FIVEYEARFWDBREAKEVEN2019)
CPILFESL_Monthly <- fredr(series_id = "CPILFESL",observation_start = as.Date("2019-01-01"), units = "pch")
CPIAUCSL_Monthly <- fredr(series_id = "CPIAUCSL",observation_start = as.Date("2019-01-01"), units = "pch")
WTI <- tq_get("CL=F", from = "2019-01-01")
Wheat <- tq_get("KE=F", from = "2005-01-01")
Corn <- tq_get("ZC=F", from = "2020-01-01")
Palladium <- tq_get("PA=F", from = "2020-01-01")
#ECISERV <- fredr(series_id = "CIS201S000000000I",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading Employment Cost Index (ECI) services data
#ECIGOOD <- fredr(series_id = "CIU201G000000000I",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading ECI goods data
#PCESERV <- fredr(series_id = "DSERRG3M086SBEA",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading PCE services
#PCEGOOD <- fredr(series_id = "DGDSRG3M086SBEA",observation_start = as.Date("2018-01-01"),observation_end = as.Date("2021-10-30"), units = "pc1") #downloading PCE goods
CPI_SERVICES <- fredr(series_id = "CUSR0000SAS",observation_start = as.Date("2018-01-01"))
CPI_SERVICESTrend <- data.frame(date = c(seq(as.Date("2020-01-01"), tail(CPI_SERVICES$date, n=1), "months")), trend = 330.424*1.002466^(0:(length(seq(from = as.Date("2020-01-01"), to = tail(CPI_SERVICES$date, n=1), by = 'month')) - 1))) #3% annual trend variable
#Wage_Price_Merge <- do.call("rbind", list(ECISERV,ECIGOOD,PCESERV,PCEGOOD)) #binding ECI and PCE data for service and goods sector
#renaming series IDs in the merged data set to plain language explanations
#Wage_Price_Merge$series_id <- gsub("CIS201S000000000I","Services Compensation (ECI)",Wage_Price_Merge$series_id)
#Wage_Price_Merge$series_id <- gsub("CIU201G000000000I","Goods Compensation (ECI)",Wage_Price_Merge$series_id)
#Wage_Price_Merge$series_id <- gsub("DSERRG3M086SBEA","Services Prices (PCE)",Wage_Price_Merge$series_id)
#Wage_Price_Merge$series_id <- gsub("DGDSRG3M086SBEA","Goods Prices (PCE)",Wage_Price_Merge$series_id)
PCEPIPCT <- fredr(series_id = "PCEPI",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #PCEPI yoy percent growth data
COREPCEPI <- fredr(series_id = "PCEPILFE",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #Core PCEPI yoy percent growth data
TRIMMEDPCEPI <- fredr(series_id = "PCETRIM12M159SFRBDAL",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #Trimmed Mean PCEPI data
PCEPIIND <- fredr(series_id = "PCEPI",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #pcepi index data
AIRFARES <- fredr(series_id = "CUSR0000SETG01",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL) #pcepi index data
#downloading aggregate PCE and PCE durable/nondurable goods for spending comparisons graph
PCE2 <- fredr(series_id = "PCE",observation_start = as.Date("2019-01-01")) #downloading PCE
PCEDG <- fredr(series_id = "PCEDG",observation_start = as.Date("2019-01-01")) #downloading PCE durable goods
PCEND <- fredr(series_id = "PCEND",observation_start = as.Date("2019-01-01")) #downloading PCE nondurable goods
PCEDGmerge <- merge(PCE2, PCEDG, by = "date")
PCENDmerge <- merge(PCE2, PCEND, by = "date")
#manually adding 2% CPI growth trend for later chart on above-trend CPI
CPI$CPITREND <- c(seq(0,0,length.out = 13), 258.824*1.001652^(0:27)) #the sequence of zeroes is for the part of the chart where the trendline is excluded, and the second sequence is compounding CPI monthly at a 2% annual rate
#manually adding 4% personal income and outlays growth trend line for later chart on personal income and outlays
DSPI <- fredr(series_id = "DSPI",observation_start = as.Date("2018-01-01")) #downloading Disposable Personal Income data
POUT <- fredr(series_id = "A068RC1",observation_start = as.Date("2018-01-01")) #downloading Personal Outlays
DSPITrend <- data.frame(date = c(seq(as.Date("2020-01-01"), tail(DSPI$date, n=1), "months")), trend = 16622.8*1.003274^(0:(length(seq(from = as.Date("2020-01-01"), to = tail(DSPI$date, n=1), by = 'month')) - 1))) #trend variable is just compounding income/outlays monthly at a 4% annual rate
POUTTrend <- data.frame(date = c(seq(as.Date("2020-01-01"), tail(POUT$date, n=1), "months")), trend = 15328.8*1.003274^(0:(length(seq(from = as.Date("2020-01-01"), to = tail(POUT$date, n=1), by = 'month')) - 1)))
CPIPCT <- fredr(series_id = "CPIAUCSL",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #CPI pct
CPILFEPCT <- fredr(series_id = "CPILFESL",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #CPI lfe
PPICORESERV <- fredr(series_id = "PCUATTDSVATTDSV",observation_start = as.Date("2019-01-01"),realtime_start = NULL, realtime_end = NULL, units = "pc1") #PPI Core Services
theme_apricitas <- theme_ft_rc() + #setting the "apricitas" custom theme that I use for my blog
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
install.packages("cli")
install.packages("quantmod")
install.packages("quantmod")
BIE_1YR <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Understanding%20Inflation%20Expectations/ATL_BIE_1YR.csv") %>%
mutate(date = as.Date(date))
ggplot() + #plotting total quits
geom_line(data=BIE_1YR, aes(x=date,y= bie,color= "Business Unit Cost Inflation Expectations: Next Year"), size = 1.25)+
xlab("Date") +
ylab("Percent") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,.05), breaks = c(0,.01,.02,.03,.04,.05), expand = c(0,0)) +
ggtitle("Inflation Expectations are Falling") +
labs(caption = "Graph created by @JosephPolitano using Atlanta Fed data", subtitle = "Business Unit Cost Inflation Expectations Remain Elevated") +
theme_apricitas + theme(legend.position = c(.47,.84)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9"), breaks = c("Business Unit Cost Inflation Expectations: Next Year","Business Unit Cost Inflation Expectations: Next 5-10 Years")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2011-10-21")-(.1861*(today()-as.Date("2011-10-21"))), xmax = as.Date("2011-10-21")-(0.049*(today()-as.Date("2011-10-21"))), ymin = 0-(.3*.05), ymax = 0) +
coord_cartesian(clip = "off")
BIE_Graph <- ggplot() + #plotting total quits
geom_line(data=BIE_1YR, aes(x=date,y= bie,color= "Business Unit Cost Inflation Expectations: Next Year"), size = 1.25)+
xlab("Date") +
ylab("Percent") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,.05), breaks = c(0,.01,.02,.03,.04,.05), expand = c(0,0)) +
ggtitle("Inflation Expectations are Falling") +
labs(caption = "Graph created by @JosephPolitano using Atlanta Fed data", subtitle = "Business Unit Cost Inflation Expectations Remain Elevated") +
theme_apricitas + theme(legend.position = c(.47,.84)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9"), breaks = c("Business Unit Cost Inflation Expectations: Next Year","Business Unit Cost Inflation Expectations: Next 5-10 Years")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2011-10-21")-(.1861*(today()-as.Date("2011-10-21"))), xmax = as.Date("2011-10-21")-(0.049*(today()-as.Date("2011-10-21"))), ymin = 0-(.3*.05), ymax = 0) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = BIE_Graph, "BIE.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
BIE_INF_COMP <- read.csv("https://raw.githubusercontent.com/Miles-byte/Apricitas/main/Labor%20Shortage/BIE_inf_comp.csv") %>%
mutate(date = as.Date(date, "%m/%d/%Y")) %>%
mutate_if(is.character, as.numeric) %>%
drop_na()
ggplot() + #plotting Wage Growth
annotate("hline", y = 0.00, yintercept = 0.00, color = "white", size = 0.5) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= labor_costs,color= "Labor Costs"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= sales_level,color= "Sales Levels"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= productivity,color= "Productivity"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= non_labor_costs,color= "Non-Labor Costs"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= margin_adjustment,color= "Margin Adjustment"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(-10,85), expand = c(0,0)) +
ylab("Index, 0 = No Influence") +
ggtitle("Fading Cost Pushes") +
labs(caption = "Graph created by @JosephPolitano using Atlanta Fed Data",subtitle = "Businesses Expect Lower Inflation Over the Next Year—Especially From Labor/Nonlabor Costs") +
theme_apricitas + theme(legend.position = c(.52,.78)) +
scale_color_manual(name= "Business Forecasts of Future Influence of Different Factors on Their Prices",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Labor Costs","Non-Labor Costs","Margin Adjustment","Sales Levels","Productivity")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2011-12-18")-(.1861*(today()-as.Date("2011-12-18"))), xmax = as.Date("2011-12-18")-(0.049*(today()-as.Date("2011-12-18"))), ymin = -10-(.3*95), ymax = -10) +
coord_cartesian(clip = "off")
BIE_INF_graph <- ggplot() + #plotting Wage Growth
annotate("hline", y = 0.00, yintercept = 0.00, color = "white", size = 0.5) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= labor_costs,color= "Labor Costs"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= sales_level,color= "Sales Levels"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= productivity,color= "Productivity"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= non_labor_costs,color= "Non-Labor Costs"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= margin_adjustment,color= "Margin Adjustment"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(-10,85), expand = c(0,0)) +
ylab("Index, 0 = No Influence") +
ggtitle("Fading Cost Pushes") +
labs(caption = "Graph created by @JosephPolitano using Atlanta Fed Data",subtitle = "Businesses Expect Lower Inflation Over the Next Year—Especially From Labor/Nonlabor Costs") +
theme_apricitas + theme(legend.position = c(.52,.78)) +
scale_color_manual(name= "Business Forecasts of Future Influence of Different Factors on Their Prices",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Labor Costs","Non-Labor Costs","Margin Adjustment","Sales Levels","Productivity")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2011-12-18")-(.1861*(today()-as.Date("2011-12-18"))), xmax = as.Date("2011-12-18")-(0.049*(today()-as.Date("2011-12-18"))), ymin = -10-(.3*95), ymax = -10) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = BIE_INF_graph, "BIE Contrib Influence.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
setwd("~/GitHub/Apricitas/Structural Inflation")
BIE_INF_graph <- ggplot() + #plotting Wage Growth
annotate("hline", y = 0.00, yintercept = 0.00, color = "white", size = 0.5) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= labor_costs,color= "Labor Costs"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= sales_level,color= "Sales Levels"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= productivity,color= "Productivity"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= non_labor_costs,color= "Non-Labor Costs"), size = 1.25) +
geom_line(data=BIE_INF_COMP, aes(x=date,y= margin_adjustment,color= "Margin Adjustment"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1),limits = c(-10,85), expand = c(0,0)) +
ylab("Index, 0 = No Influence") +
ggtitle("Fading Cost Pushes") +
labs(caption = "Graph created by @JosephPolitano using Atlanta Fed Data",subtitle = "Businesses Expect Lower Inflation Over the Next Year—Especially From Labor/Nonlabor Costs") +
theme_apricitas + theme(legend.position = c(.52,.78)) +
scale_color_manual(name= "Business Forecasts of Future Influence of Different Factors on Their Prices",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Labor Costs","Non-Labor Costs","Margin Adjustment","Sales Levels","Productivity")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2011-12-18")-(.1861*(today()-as.Date("2011-12-18"))), xmax = as.Date("2011-12-18")-(0.049*(today()-as.Date("2011-12-18"))), ymin = -10-(.3*95), ymax = -10) +
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = BIE_INF_graph, "BIE Contrib Influence.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
