filter(Area %in% c("Africa","Asia","Europe","North America","Oceania","South America","Latin America and Caribbean","Middle East")) %>%
filter(rollmean_Capacity != 0) %>%
mutate(Area = factor(Area, rev(c("Europe","Asia","Latin America and Caribbean","Middle East","Africa","Oceania","North America")))), aes(fill=Area, x=date, y=rollmean_USD/1000)) +
geom_bar(position="stack", stat="identity", size = 0, color = NA) + #putting color to NA gets rid of borders
annotate("hline", y = 0, yintercept = 0, color = "white", size = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA)), color = "none") +
xlab("Date") +
ylab("GW of Capacity, Monthly Average") +
#scale_y_continuous(labels = scales::number_format(suffix = "GW"), breaks = c(0,5,10,15), limits = c(0,17.5), expand = c(0,0)) +
ggtitle("China's Booming Solar Panel Exports") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate data", subtitle = "China Solar Exports are Rising Rapidly, Especially to Europe") +
theme_apricitas + theme(legend.position = c(.4,.68), legend.spacing.y = unit(0, 'cm'), legend.key.width = unit(0.45, 'cm'), legend.key.height = unit(0.35, "cm"),legend.text = (element_text(size = 13)), legend.title=element_text(size=14)) +#, axis.text.x=element_blank(), axis.title.x=element_blank()) +
scale_fill_manual(name= "GW of Capacity, 12M Moving Average",values = rev(c("#FF8E72","#6A4C93","#A7ACD9","#3083DC","#F5B041","#9A348E","#00A99D","#EE6055","#FFE98F")),breaks = c("Europe","Asia","Latin America and Caribbean","Middle East","Africa","Oceania","North America")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2018-01-01")-(.1861*(today()-as.Date("2018-01-01"))), xmax = as.Date("2018-01-01")-(0.049*(today()-as.Date("2018-01-01"))), ymin = 0-(.3*17.5), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25)
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
geom_line(data= IND_PRO_PV, aes(x=date,y=`Output of Photovoltaic Cells, Current Period`/100 ,color= "Chinese Industrial Production of Photovoltaic Cells, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, round(max(IND_PRO_PV$`Output of Photovoltaic Cells, Current Period`/1000))*10), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Production") +
labs(caption = "Graph created by @JosephPolitano using National Bureau of Statistics of China Data",subtitle = "Chinese Solar Production is Growing Exponentially and Has Surged Post-Pandemic") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = min(IND_PRO_PV$date)-(.1861*(max(IND_PRO_PV$date)-min(IND_PRO_PV$date))), xmax = min(IND_PRO_PV$date)-(0.049*(max(IND_PRO_PV$date)-min(IND_PRO_PV$date))), ymin = 0-(.3*(round(max(IND_PRO_PV$`Output of Photovoltaic Cells, Current Period`/1000))*10)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
CHINA_PV_EXPORTS_INDIA_GRAPH <- ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
geom_line(data= IND_PRO_PV, aes(x=date,y=`Output of Photovoltaic Cells, Current Period`/100 ,color= "Chinese Industrial Production of Photovoltaic Cells, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, round(max(IND_PRO_PV$`Output of Photovoltaic Cells, Current Period`/1000))*10), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Production") +
labs(caption = "Graph created by @JosephPolitano using National Bureau of Statistics of China Data",subtitle = "Chinese Solar Production is Growing Exponentially and Has Surged Post-Pandemic") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = min(IND_PRO_PV$date)-(.1861*(max(IND_PRO_PV$date)-min(IND_PRO_PV$date))), xmax = min(IND_PRO_PV$date)-(0.049*(max(IND_PRO_PV$date)-min(IND_PRO_PV$date))), ymin = 0-(.3*(round(max(IND_PRO_PV$`Output of Photovoltaic Cells, Current Period`/1000))*10)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
geom_line(data= IND_PRO_PV, aes(x=date,y=`Output of Photovoltaic Cells, Current Period`/100 ,color= "Chinese Industrial Production of Photovoltaic Cells, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, round(max(IND_PRO_PV$`Output of Photovoltaic Cells, Current Period`/1000))*10), expand = c(0,0)) +
ylab("GW of Capacity, Monthly")
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
geom_line(data= IND_PRO_PV, aes(x=date,y=`Output of Photovoltaic Cells, Current Period`/100 ,color= "Chinese Industrial Production of Photovoltaic Cells, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India")
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India")
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using National Bureau of Statistics of China Data",subtitle = "Chinese Solar Production is Growing Exponentially and Has Surged Post-Pandemic") +
theme_apricitas + theme(legend.position = c(.415,.92))
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using National Bureau of Statistics of China Data",subtitle = "Chinese Solar Production is Growing Exponentially and Has Surged Post-Pandemic") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"))
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Production is Growing Exponentially and Has Surged Post-Pandemic") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = min(IND_PRO_PV$date)-(.1861*(max(IND_PRO_PV$date)-min(IND_PRO_PV$date))), xmax = min(IND_PRO_PV$date)-(0.049*(max(IND_PRO_PV$date)-min(IND_PRO_PV$date))), ymin = 0-(.3*(round(max(IND_PRO_PV$`Output of Photovoltaic Cells, Current Period`/1000))*10)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Production is Growing Exponentially and Has Surged Post-Pandemic") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"))
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Production is Growing Exponentially and Has Surged Post-Pandemic") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = 0-(.1861*(today()-as.Date("2017-01-01"))), xmax = min(IND_PRO_PV$date)-(0.049*(today()-as.Date("2017-01-01"))), ymin = 0-(.3*(round(max(IND_PRO_PV$`Output of Photovoltaic Cells, Current Period`/1000))*10)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Production
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate(geom = "vline",x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), size = 0.75,color = "white", linetype = "dashed")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate(geom = "vline",x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), size = 0.75,color = "white", linetype = "dashed") +
annotate(geom = "text", label = "Model T",x = 1901, y = 4, size = 4,color = "white") +
xlab("Date") +
ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate(geom = "vline",x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), size = 0.75,color = "white", linetype = "dashed") +
annotate(geom = "text", label = "Model T",x = 1901, y = 4, size = 4,color = "white") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate(geom = "vline",x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), size = 0.75,color = "white", linetype = "dashed") +
annotate(geom = "text", label = "Model T",x = 1901, y = 4, size = 4,color = "white") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate("vline", x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), color = "white", size = 3)
ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate("vline", x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), color = "white", size = 1.25, linetype = "dashed") +
annotate(geom = "text", label = "Tariffs Enacted",x = as.Date("2023-04-01"), y = 4, size = 4,color = "white")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate("vline", x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), color = "white", size = 1.25, linetype = "dashed") +
annotate(geom = "text", label = "Tariffs Enacted",x = as.Date("2023-04-01"), y = 4, size = 4,color = "white") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate("vline", x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), color = "white", size = 1.25, linetype = "dashed") +
annotate(geom = "text", label = "India Enacts Tariffs",x = as.Date("2023-04-01"), y = 4, size = 4,color = "white") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate("vline", x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), color = "white", size = 1.25, linetype = "dashed") +
annotate(geom = "text", label = "India Enacts Tariffs",x = as.Date("2023-01-01"), y = 4, size = 4,color = "white") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
CHINA_PV_EXPORTS_INDIA_GRAPH <- ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate("vline", x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), color = "white", size = 1.25, linetype = "dashed") +
annotate(geom = "text", label = "India Enacts Tariffs",x = as.Date("2023-01-01"), y = 4, size = 4,color = "white") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
CHINA_PV_EXPORTS_INDIA_GRAPH <- ggplot() + #plotting Chinese PV Exports India
geom_line(data= filter(CHINA_SOLAR_EXPORTS, Area == "India"), aes(x=date,y=Capacity_MW/1000,color= "GW of Capacity, Monthly"), size = 1.25) +
annotate("vline", x = as.Date("2022-04-01"), xintercept = as.Date("2022-04-01"), color = "white", size = 1.25, linetype = "dashed") +
annotate(geom = "text", label = "India Enacts Tariffs",x = as.Date("2023-01-01"), y = 4, size = 4,color = "white") +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "GW"),limits = c(0, 5.1), expand = c(0,0)) +
ylab("GW of Capacity, Monthly") +
ggtitle("Chinese Solar Panel Exports to India") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= NULL,values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = CHINA_PV_EXPORTS_INDIA_GRAPH, "China PV Exports India.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
MONTHLY_ELECTRICITY_GLOBAL <- read.csv("https://ember-climate.org/app/uploads/2022/07/monthly_full_release_long_format-4.csv")
View(MONTHLY_ELECTRICITY_GLOBAL)
WORLD_GENERATION_CHANGE_YOY <- MONTHLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & category == "Electricity generation" & Subcategory == "fuel")
WORLD_GENERATION_CHANGE_YOY <- MONTHLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "fuel")
WORLD_GENERATION_CHANGE_YOY <- MONTHLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel")
View(WORLD_GENERATION_CHANGE_YOY)
WORLD_GENERATION_CHANGE_YOY <- MONTHLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel" & Unit == "TWh")
WORLD_GENERATION_CHANGE_YOY <- MONTHLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel" & Unit == "TWh" & Variable == "Solar")
YEARLY_ELECTRICITY_GLOBAL <- read.csv("https://ember-climate.org/app/uploads/2022/07/yearly_full_release_long_format.csv")
MONTHLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel" & Unit == "TWh" & Variable == "Solar") %>%
mutate(rollsum = c(0,0,0,0,0,0,0,rollsum(Value)))
WORLD_GENERATION_SOLAR_MONTHLY <- YEARLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel" & Unit == "TWh" & Variable == "Solar")
WORLD_GENERATION_SOLAR_MONTHLY <- MONTHLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel" & Unit == "TWh" & Variable == "Solar") %>%
mutate(rollsum = c(0,0,0,0,0,0,0,rollsum(Value, k= 12)))
YEARLY_ELECTRICITY_GLOBAL <- read.csv("https://ember-climate.org/app/uploads/2022/07/yearly_full_release_long_format.csv") %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel" & Unit == "TWh" & Variable == "Solar")
WORLD_GENERATION_SOLAR_YEARLY <- YEARLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel" & Unit == "TWh" & Variable == "Solar")
View(YEARLY_ELECTRICITY_GLOBAL)
WORLD_GENERATION_SOLAR_YEARLY <- YEARLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel" & Unit == "TWh" & Variable == "Solar") %>%
mutate(date = as.Date(paste0(Year,"-01-01")))
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date,y=Value/1000,color= "GW of Capacity, Monthly"), size = 1.25)
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "PWh"),limits = c(0, 5.1), expand = c(0,0))
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "PWh"),limits = c(0, 2), expand = c(0,0))
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= WORLD_GENERATION_SOLAR_MONTHLY, aes(x=date,y=rollsum/1000,color= "Monthly Rolling Totals"), size = 1.25)
WORLD_GENERATION_SOLAR_MONTHLY <- MONTHLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel" & Unit == "TWh" & Variable == "Solar") %>%
mutate(rollsum = c(0,0,0,0,0,0,0,0,0,0,0,rollsum(Value, k= 12)))
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= WORLD_GENERATION_SOLAR_MONTHLY, aes(x=date,y=rollsum/1000,color= "Monthly Rolling Totals"), size = 1.25)
WORLD_GENERATION_SOLAR_MONTHLY <- MONTHLY_ELECTRICITY_GLOBAL %>%
filter(Area == "World" & Category == "Electricity generation" & Subcategory == "Fuel" & Unit == "TWh" & Variable == "Solar") %>%
mutate(rollsum = c(0,0,0,0,0,0,0,0,0,0,0,rollsum(Value, k= 12))) %>%
mutate(date = as.Date(Date))
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= WORLD_GENERATION_SOLAR_MONTHLY, aes(x=date,y=rollsum/1000,color= "Monthly Rolling Totals"), size = 1.25)
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= WORLD_GENERATION_SOLAR_MONTHLY, aes(x=date-365,y=rollsum/1000,color= "Monthly Rolling Totals"), size = 1.25)
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= WORLD_GENERATION_SOLAR_MONTHLY, aes(x=date,y=rollsum/1000,color= "Monthly Rolling Totals"), size = 1.25)
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= WORLD_GENERATION_SOLAR_MONTHLY, aes(x=date,y=rollsum/1000,color= "Monthly Rolling Totals"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 1, suffix = "PWh"),limits = c(0, 2), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= WORLD_GENERATION_SOLAR_MONTHLY, aes(x=date,y=rollsum/1000,color= "Rolling 12M Total of Monthly Data"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 0.5, suffix = "PWh"),limits = c(0, 1.5), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data. Note: Monthly Data Covers 90% of Global Geographies",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= "Global Solar Electricity Output",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= WORLD_GENERATION_SOLAR_MONTHLY, aes(x=date,y=rollsum/1000,color= "Rolling 12M Total of Monthly Data"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 0.5, suffix = "PWh"),limits = c(0, 1.5), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data. Note: Monthly Data Covers Geographies Representing 90% of Global Power Demand",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= "Global Solar Electricity Output",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= filter(WORLD_GENERATION_SOLAR_MONTHLY, rollsum > 0), aes(x=date,y=rollsum/1000,color= "Rolling 12M Total of Monthly Data"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 0.5, suffix = "PWh"),limits = c(0, 1.5), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data. Note: Monthly Data Covers Geographies Representing 90% of Global Power Demand",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= "Global Solar Electricity Output",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= filter(WORLD_GENERATION_SOLAR_MONTHLY, rollsum > 0), aes(x=date,y=rollsum/1000,color= "Rolling 12M Total of Monthly Data"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 0.5, suffix = "PWh"),limits = c(0, 1.5), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data. Note: Monthly Data Covers Geographies Representing 90% of Global Power Demand",subtitle = "Chinese Solar Exports to India Have Fallen Dramatically After Tariffs Came Into Effect") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= "Global Solar Electricity Output",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Yearly Totals","Rolling 12M Total of Monthly Data")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= filter(WORLD_GENERATION_SOLAR_MONTHLY, rollsum > 0), aes(x=date,y=rollsum/1000,color= "Rolling 12M Total of Monthly Data"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 0.5, suffix = "PWh"),limits = c(0, 1.5), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data.\nNote: Monthly Data Covers Geographies Representing 90% of Global Power Demand",subtitle = "Global Solar Output is Growing at an Exponential Rate") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= "Global Solar Electricity Output",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Yearly Totals","Rolling 12M Total of Monthly Data")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2017-01-01")-(.1861*(today()-as.Date("2017-01-01"))), xmax = as.Date("2017-01-01")-(0.049*((today()-as.Date("2017-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= filter(WORLD_GENERATION_SOLAR_MONTHLY, rollsum > 0), aes(x=date,y=rollsum/1000,color= "Rolling 12M Total of Monthly Data"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 0.5, suffix = "PWh"),limits = c(0, 1.5), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data.\nNote: Monthly Data Covers Geographies Representing 90% of Global Power Demand",subtitle = "Global Solar Output is Growing at an Exponential Rate") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= "Global Solar Electricity Output",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Yearly Totals","Rolling 12M Total of Monthly Data")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*((today()-as.Date("2000-01-01")))), ymin = 0-(.3*(5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= filter(WORLD_GENERATION_SOLAR_MONTHLY, rollsum > 0), aes(x=date,y=rollsum/1000,color= "Rolling 12M Total of Monthly Data"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 0.5, suffix = "PWh"),limits = c(0, 1.5), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data.\nNote: Monthly Data Covers Geographies Representing 90% of Global Power Demand",subtitle = "Global Solar Output is Growing at an Exponential Rate") +
theme_apricitas + theme(legend.position = c(.415,.92)) +
scale_color_manual(name= "Global Solar Electricity Output",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Yearly Totals","Rolling 12M Total of Monthly Data")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*((today()-as.Date("2000-01-01")))), ymin = 0-(.3*(1.5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= filter(WORLD_GENERATION_SOLAR_MONTHLY, rollsum > 0), aes(x=date,y=rollsum/1000,color= "Rolling 12M Total of Monthly Data"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 0.5, suffix = "PWh"),limits = c(0, 1.5), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data.\nNote: Monthly Data Covers Geographies Representing 90% of Global Power Demand",subtitle = "Global Solar Output is Growing at an Exponential Rate") +
theme_apricitas + theme(legend.position = c(.415,.72)) +
scale_color_manual(name= "Global Solar Electricity Output",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Yearly Totals","Rolling 12M Total of Monthly Data")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*((today()-as.Date("2000-01-01")))), ymin = 0-(.3*(1.5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
WORLD_GENERATION_SOLAR_GRAPH <- ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= filter(WORLD_GENERATION_SOLAR_MONTHLY, rollsum > 0), aes(x=date,y=rollsum/1000,color= "Rolling 12M Total of Monthly Data"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 0.5, suffix = "PWh"),limits = c(0, 1.5), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data.\nNote: Monthly Data Covers Geographies Representing 90% of Global Power Demand",subtitle = "Global Solar Output is Growing at an Exponential Rate") +
theme_apricitas + theme(legend.position = c(.415,.72)) +
scale_color_manual(name= "Global Solar Electricity Output",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Yearly Totals","Rolling 12M Total of Monthly Data")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*((today()-as.Date("2000-01-01")))), ymin = 0-(.3*(1.5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = WORLD_GENERATION_SOLAR_GRAPH, "World Generation Solar Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
WORLD_GENERATION_SOLAR_GRAPH <- ggplot() + #plotting Chinese PV Exports India
geom_line(data= WORLD_GENERATION_SOLAR_YEARLY, aes(x=date+365,y=Value/1000,color= "Yearly Totals"), size = 1.25) +
geom_line(data= filter(WORLD_GENERATION_SOLAR_MONTHLY, rollsum > 0), aes(x=date,y=rollsum/1000,color= "Rolling 12M Total of Monthly Data"), size = 1.25) +
xlab("Date") +
scale_y_continuous(labels = scales::number_format(accuracy = 0.5, suffix = "PWh"),limits = c(0, 1.5), expand = c(0,0)) +
ylab("Global Solar Power Production, PWh") +
ggtitle("Solar's Exponential Moment") +
labs(caption = "Graph created by @JosephPolitano using Ember Climate Data.\nNote: Monthly Data Covers Geographies Representing 90% of Global Power Demand",subtitle = "Global Solar Output is Growing at an Exponential Rate") +
theme_apricitas + theme(legend.position = c(.415,.72)) +
scale_color_manual(name= "Global Solar Electricity Generation",values = c("#FFE98F","#00A99D","#EE6055","#A7ACD9","#9A348E"), breaks = c("Yearly Totals","Rolling 12M Total of Monthly Data")) +
annotation_custom(apricitas_logo_rast, xmin = as.Date("2000-01-01")-(.1861*(today()-as.Date("2000-01-01"))), xmax = as.Date("2000-01-01")-(0.049*((today()-as.Date("2000-01-01")))), ymin = 0-(.3*(1.5)), ymax = 0) + #these repeated sections place the logo in the bottom-right of each graph. The first number in all equations is the chart's origin point, and the second number is the exact length of the x or y axis
coord_cartesian(clip = "off")
ggsave(dpi = "retina",plot = WORLD_GENERATION_SOLAR_GRAPH, "World Generation Solar Graph.png", type = "cairo-png", width = 9.02, height = 5.76, units = "in")
setwd("~/GitHub/Apricitas/Germany")
test_login(genesis=c(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD")))
save_credentials(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD"))
pacman::p_load(seasonal,eurostat,rsdmx,wiesbaden,keyring,janitor,openxlsx,dplyr,BOJ,readxl,RcppRoll,DSSAT,tidyr,eia,cli,remotes,magick,cowplot,knitr,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
theme_apricitas <- theme_ft_rc() + #setting the "apricitas" custom theme that I use for my blog
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
test_login(genesis=c(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD")))
save_credentials(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD"))
#Downloading Quarterly 9 Digit Bulk Industrial Production Data
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
IP_EV_EURO <- IP_9DIGIT_BULK %>%
subset(GP19A9 %in% c("GP19-291024500","GP19-291024300")) %>%
mutate(GP19A9 = gsub("GP19-291024500", "Battery Electric Vehicles",GP19A9)) %>%
mutate(GP19A9 = gsub("GP19-291024300", "Plug-in Hybrids",GP19A9)) %>%
transmute(category = factor(GP19A9, levels = c("Plug-in Hybrids","Battery Electric Vehicles")), value = PRODAW_val, date = as.Date(as.yearqtr(paste0(JAHR, '-', gsub("QUART", "", QUARTG)), format = "%Y-%q")))
GDP <- retrieve_data(tablename = "81000BV007", genesis=c(db='de'), language = "en") %>%
subset(VGRPB5 == "VGRPKM") %>%
subset(WERT05 == "X13JDKSB") %>%
select(JAHR, QUARTG, BIP004_val) %>%
transmute(date = as.Date(as.yearqtr(paste0(JAHR,QUARTG),"%YQUART%q")), value = BIP004_val) %>%
arrange(date) %>%
subset(date >= as.Date("2000-01-01"))
#Downloading Quarterly 9 Digit Bulk Industrial Production Data
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
IP_EV_EURO <- IP_9DIGIT_BULK %>%
subset(GP19A9 %in% c("GP19-291024500","GP19-291024300")) %>%
mutate(GP19A9 = gsub("GP19-291024500", "Battery Electric Vehicles",GP19A9)) %>%
mutate(GP19A9 = gsub("GP19-291024300", "Plug-in Hybrids",GP19A9)) %>%
transmute(category = factor(GP19A9, levels = c("Plug-in Hybrids","Battery Electric Vehicles")), value = PRODAW_val, date = as.Date(as.yearqtr(paste0(JAHR, '-', gsub("QUART", "", QUARTG)), format = "%Y-%q")))
IP_EV_NUMBER <- IP_9DIGIT_BULK %>%
subset(GP19A9 %in% c("GP19-291024500","GP19-291024300")) %>%
mutate(GP19A9 = gsub("GP19-291024500", "Battery Electric Vehicles",GP19A9)) %>%
mutate(GP19A9 = gsub("GP19-291024300", "Plug-in Hybrids",GP19A9)) %>%
transmute(category = factor(GP19A9, levels = c("Plug-in Hybrids","Battery Electric Vehicles")), value = PRO006_val, date = as.Date(as.yearqtr(paste0(JAHR, '-', gsub("QUART", "", QUARTG)), format = "%Y-%q")))
IP_9DIGIT_BULK
#Downloading Quarterly 9 Digit Bulk Industrial Production Data
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
#Downloading Quarterly 9 Digit Bulk Industrial Production Data
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
#Downloading Quarterly 9 Digit Bulk Industrial Production Data
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
IP_CAR <- retrieve_data(tablename = "42153BM003", genesis=c(db='de')) %>%
subset(WZ08V3 == "WZ08-291") %>% #taking manufacturing and energy intensive manufacturing data
subset(WERT03 == "X13JDKSB") %>%#calendar and seasonally adjusted
mutate(MONAT = gsub("MONAT","",MONAT)) %>%
mutate(date = as.Date(paste0(JAHR,"-", MONAT,"-01"))) %>%
transmute(date, value = PRO101_val, category = WZ08V3) %>%
pivot_wider(names_from = category)
#Downloading Quarterly 9 Digit Bulk Industrial Production Data
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
#Downloading Quarterly 9 Digit Bulk Industrial Production Data
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
IP_CAR <- retrieve_data(tablename = "42153BM003", genesis=c(db='de'))
IP_CAR <- retrieve_data(tablename = "42153BM003", genesis=c(db='de'))
test_login(genesis=c(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD")))
save_credentials(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD"))
IPMAN <- retrieve_data(tablename = "42153BM001", genesis=c(db='de'))
IPMAN <- retrieve_data(tablename = "42153BM001", genesis=c(db='de'))
IPMAN <- retrieve_data(tablename = "42153BM001", genesis=c(db='de'))
IPMAN <- retrieve_data(tablename = "42153BM001", genesis=c(db='de'))
IPMAN <- retrieve_data(tablename = "42153BM001", genesis=c(db='de'))
#Downloading Quarterly 9 Digit Bulk Industrial Production Data
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
#Downloading Quarterly 9 Digit Bulk Industrial Production Data
IP_9DIGIT_BULK <- retrieve_data(tablename = "42131BV203", genesis=c(db='de'))
p_unload(all)  # Remove all packages using the package manager
# Clear console
cat("\014")  # ctrl+L
rm(list = ls())
dev.off()
pacman::p_load(seasonal,eurostat,rsdmx,wiesbaden,keyring,janitor,openxlsx,dplyr,BOJ,readxl,RcppRoll,DSSAT,tidyr,eia,cli,remotes,magick,cowplot,knitr,png,httr,grid,usethis,pacman,rio,ggplot2,ggthemes,quantmod,dplyr,data.table,lubridate,forecast,gifski,av,tidyr,gganimate,zoo,RCurl,Cairo,datetime,stringr,pollster,tidyquant,hrbrthemes,plotly,fredr)
theme_apricitas <- theme_ft_rc() + #setting the "apricitas" custom theme that I use for my blog
theme(axis.line = element_line(colour = "white"),legend.position = c(.90,.90),legend.text = element_text(size = 14, color = "white"), legend.title =element_text(size = 14),plot.title = element_text(size = 28, color = "white")) #using a modified FT theme and white axis lines for my "theme_apricitas"
apricitas_logo <- image_read("https://github.com/Miles-byte/Apricitas/blob/main/Logo.png?raw=true") #downloading and rasterizing my "Apricitas" blog logo from github
apricitas_logo_rast <- rasterGrob(apricitas_logo, interpolate=TRUE)
test_login(genesis=c(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD")))
save_credentials(db='de', user=Sys.getenv("DESTATIS_USER"), password=Sys.getenv("DESTATIS_PASSWORD"))
IPMAN <- retrieve_data(tablename = "42153BM001", genesis=c(db='de'))
IPMAN
IP_CAR <- retrieve_data(tablename = "42153BM003", genesis=c(db='de')) %>%
subset(WZ08V3 == "WZ08-291") %>% #taking manufacturing and energy intensive manufacturing data
subset(WERT03 == "X13JDKSB") %>%#calendar and seasonally adjusted
mutate(MONAT = gsub("MONAT","",MONAT)) %>%
mutate(date = as.Date(paste0(JAHR,"-", MONAT,"-01"))) %>%
transmute(date, value = PRO101_val, category = WZ08V3) %>%
pivot_wider(names_from = category)
IP_CAR <- retrieve_data(tablename = "42153BM003", genesis=c(db='de'))
IP_CAR
